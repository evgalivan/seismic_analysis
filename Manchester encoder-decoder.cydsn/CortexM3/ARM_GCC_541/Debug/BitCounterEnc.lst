ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"BitCounterEnc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.BitCounterEnc_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	BitCounterEnc_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	BitCounterEnc_Enable, %function
  25              	BitCounterEnc_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\BitCounterEnc.c"
   1:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/BitCounterEnc.c **** * File Name: BitCounterEnc.c  
   3:Generated_Source\PSoC5/BitCounterEnc.c **** * Version 3.0
   4:Generated_Source\PSoC5/BitCounterEnc.c **** *
   5:Generated_Source\PSoC5/BitCounterEnc.c **** *  Description:
   6:Generated_Source\PSoC5/BitCounterEnc.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/BitCounterEnc.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/BitCounterEnc.c **** *
   9:Generated_Source\PSoC5/BitCounterEnc.c **** *   Note:
  10:Generated_Source\PSoC5/BitCounterEnc.c **** *     None
  11:Generated_Source\PSoC5/BitCounterEnc.c **** *
  12:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
  13:Generated_Source\PSoC5/BitCounterEnc.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/BitCounterEnc.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/BitCounterEnc.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/BitCounterEnc.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/BitCounterEnc.c **** 
  19:Generated_Source\PSoC5/BitCounterEnc.c **** #include "BitCounterEnc.h"
  20:Generated_Source\PSoC5/BitCounterEnc.c **** 
  21:Generated_Source\PSoC5/BitCounterEnc.c **** uint8 BitCounterEnc_initVar = 0u;
  22:Generated_Source\PSoC5/BitCounterEnc.c **** 
  23:Generated_Source\PSoC5/BitCounterEnc.c **** 
  24:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_Init
  26:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
  27:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
  28:Generated_Source\PSoC5/BitCounterEnc.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/BitCounterEnc.c **** * 
  30:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 2


  31:Generated_Source\PSoC5/BitCounterEnc.c **** *  void  
  32:Generated_Source\PSoC5/BitCounterEnc.c **** *
  33:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
  34:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
  35:Generated_Source\PSoC5/BitCounterEnc.c **** *
  36:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_Init(void) 
  38:Generated_Source\PSoC5/BitCounterEnc.c **** {
  39:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (!BitCounterEnc_UsingFixedFunction && !BitCounterEnc_ControlRegRemoved)
  40:Generated_Source\PSoC5/BitCounterEnc.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!BitCounterEnc_UsingFixedFunction && !BitCounterEnc_ControlRegRemoved) */
  42:Generated_Source\PSoC5/BitCounterEnc.c ****         
  43:Generated_Source\PSoC5/BitCounterEnc.c ****         #if(!BitCounterEnc_UsingFixedFunction) 
  44:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/BitCounterEnc.c ****             uint8 BitCounterEnc_interruptState;
  46:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!BitCounterEnc_UsingFixedFunction) */
  47:Generated_Source\PSoC5/BitCounterEnc.c ****         
  48:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (BitCounterEnc_UsingFixedFunction)
  49:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_CONTROL &= BitCounterEnc_CTRL_ENABLE;
  51:Generated_Source\PSoC5/BitCounterEnc.c ****             
  52:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/BitCounterEnc.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/BitCounterEnc.c ****                 BitCounterEnc_CONTROL2 &= ((uint8)(~BitCounterEnc_CTRL_MODE_MASK));
  55:Generated_Source\PSoC5/BitCounterEnc.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/BitCounterEnc.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/BitCounterEnc.c ****                 BitCounterEnc_CONTROL3 &= ((uint8)(~BitCounterEnc_CTRL_MODE_MASK));                
  58:Generated_Source\PSoC5/BitCounterEnc.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/BitCounterEnc.c ****             #if (BitCounterEnc_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/BitCounterEnc.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/BitCounterEnc.c ****                 BitCounterEnc_CONTROL |= BitCounterEnc_ONESHOT;
  63:Generated_Source\PSoC5/BitCounterEnc.c ****             #endif /* (BitCounterEnc_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/BitCounterEnc.c ****             
  65:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_CONTROL2 |= BitCounterEnc_CTRL2_IRQ_SEL;
  67:Generated_Source\PSoC5/BitCounterEnc.c ****             
  68:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_RT1 &= ((uint8)(~BitCounterEnc_RT1_MASK));
  70:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_RT1 |= BitCounterEnc_SYNC;     
  71:Generated_Source\PSoC5/BitCounterEnc.c ****                     
  72:Generated_Source\PSoC5/BitCounterEnc.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_RT1 &= ((uint8)(~BitCounterEnc_SYNCDSI_MASK));
  74:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_RT1 |= BitCounterEnc_SYNCDSI_EN;
  75:Generated_Source\PSoC5/BitCounterEnc.c **** 
  76:Generated_Source\PSoC5/BitCounterEnc.c ****         #else
  77:Generated_Source\PSoC5/BitCounterEnc.c ****             #if(!BitCounterEnc_ControlRegRemoved)
  78:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/BitCounterEnc.c ****             ctrl = BitCounterEnc_CONTROL & ((uint8)(~BitCounterEnc_CTRL_CMPMODE_MASK));
  80:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_CONTROL = ctrl | BitCounterEnc_DEFAULT_COMPARE_MODE;
  81:Generated_Source\PSoC5/BitCounterEnc.c ****             
  82:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/BitCounterEnc.c ****             ctrl = BitCounterEnc_CONTROL & ((uint8)(~BitCounterEnc_CTRL_CAPMODE_MASK));
  84:Generated_Source\PSoC5/BitCounterEnc.c ****             
  85:Generated_Source\PSoC5/BitCounterEnc.c ****             #if( 0 != BitCounterEnc_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/BitCounterEnc.c ****                 BitCounterEnc_CONTROL = ctrl | BitCounterEnc_DEFAULT_CAPTURE_MODE;
  87:Generated_Source\PSoC5/BitCounterEnc.c ****             #else
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 3


  88:Generated_Source\PSoC5/BitCounterEnc.c ****                 BitCounterEnc_CONTROL = ctrl;
  89:Generated_Source\PSoC5/BitCounterEnc.c ****             #endif /* 0 != BitCounterEnc_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/BitCounterEnc.c ****             
  91:Generated_Source\PSoC5/BitCounterEnc.c ****             #endif /* (!BitCounterEnc_ControlRegRemoved) */
  92:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (BitCounterEnc_UsingFixedFunction) */
  93:Generated_Source\PSoC5/BitCounterEnc.c ****         
  94:Generated_Source\PSoC5/BitCounterEnc.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (!BitCounterEnc_UsingFixedFunction)
  96:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_ClearFIFO();
  97:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!BitCounterEnc_UsingFixedFunction) */
  98:Generated_Source\PSoC5/BitCounterEnc.c ****         
  99:Generated_Source\PSoC5/BitCounterEnc.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_WritePeriod(BitCounterEnc_INIT_PERIOD_VALUE);
 101:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (!(BitCounterEnc_UsingFixedFunction && (CY_PSOC5A)))
 102:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_WriteCounter(BitCounterEnc_INIT_COUNTER_VALUE);
 103:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!(BitCounterEnc_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_SetInterruptMode(BitCounterEnc_INIT_INTERRUPTS_MASK);
 105:Generated_Source\PSoC5/BitCounterEnc.c ****         
 106:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (!BitCounterEnc_UsingFixedFunction)
 107:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/BitCounterEnc.c ****             (void)BitCounterEnc_ReadStatusRegister();
 109:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_WriteCompare(BitCounterEnc_INIT_COMPARE_VALUE);
 111:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/BitCounterEnc.c ****             
 113:Generated_Source\PSoC5/BitCounterEnc.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_interruptState = CyEnterCriticalSection();
 116:Generated_Source\PSoC5/BitCounterEnc.c ****             
 117:Generated_Source\PSoC5/BitCounterEnc.c ****             BitCounterEnc_STATUS_AUX_CTRL |= BitCounterEnc_STATUS_ACTL_INT_EN_MASK;
 118:Generated_Source\PSoC5/BitCounterEnc.c ****             
 119:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/BitCounterEnc.c ****             CyExitCriticalSection(BitCounterEnc_interruptState);
 121:Generated_Source\PSoC5/BitCounterEnc.c ****             
 122:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!BitCounterEnc_UsingFixedFunction) */
 123:Generated_Source\PSoC5/BitCounterEnc.c **** }
 124:Generated_Source\PSoC5/BitCounterEnc.c **** 
 125:Generated_Source\PSoC5/BitCounterEnc.c **** 
 126:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_Enable
 128:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 129:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 130:Generated_Source\PSoC5/BitCounterEnc.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/BitCounterEnc.c **** * 
 132:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 133:Generated_Source\PSoC5/BitCounterEnc.c **** *  void  
 134:Generated_Source\PSoC5/BitCounterEnc.c **** *
 135:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 136:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 137:Generated_Source\PSoC5/BitCounterEnc.c **** *
 138:Generated_Source\PSoC5/BitCounterEnc.c **** * Side Effects: 
 139:Generated_Source\PSoC5/BitCounterEnc.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/BitCounterEnc.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/BitCounterEnc.c **** *
 142:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_Enable(void) 
 144:Generated_Source\PSoC5/BitCounterEnc.c **** {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE1:
  36              		.size	BitCounterEnc_Enable, .-BitCounterEnc_Enable
  37 0002 00BF     		.section	.text.BitCounterEnc_Stop,"ax",%progbits
  38              		.align	2
  39              		.global	BitCounterEnc_Stop
  40              		.thumb
  41              		.thumb_func
  42              		.type	BitCounterEnc_Stop, %function
  43              	BitCounterEnc_Stop:
  44              	.LFB3:
 145:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/BitCounterEnc.c ****     #if (BitCounterEnc_UsingFixedFunction)
 147:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_GLOBAL_ENABLE |= BitCounterEnc_BLOCK_EN_MASK;
 148:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_GLOBAL_STBY_ENABLE |= BitCounterEnc_BLOCK_STBY_EN_MASK;
 149:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/BitCounterEnc.c ****         
 151:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/BitCounterEnc.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/BitCounterEnc.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(!BitCounterEnc_ControlRegRemoved || BitCounterEnc_UsingFixedFunction)
 155:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_CONTROL |= BitCounterEnc_CTRL_ENABLE;                
 156:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (!BitCounterEnc_ControlRegRemoved || BitCounterEnc_UsingFixedFunction) */
 157:Generated_Source\PSoC5/BitCounterEnc.c ****     
 158:Generated_Source\PSoC5/BitCounterEnc.c **** }
 159:Generated_Source\PSoC5/BitCounterEnc.c **** 
 160:Generated_Source\PSoC5/BitCounterEnc.c **** 
 161:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_Start
 163:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 164:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 165:Generated_Source\PSoC5/BitCounterEnc.c **** *  Enables the counter for operation 
 166:Generated_Source\PSoC5/BitCounterEnc.c **** *
 167:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 168:Generated_Source\PSoC5/BitCounterEnc.c **** *  void  
 169:Generated_Source\PSoC5/BitCounterEnc.c **** *
 170:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 171:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 172:Generated_Source\PSoC5/BitCounterEnc.c **** *
 173:Generated_Source\PSoC5/BitCounterEnc.c **** * Global variables:
 174:Generated_Source\PSoC5/BitCounterEnc.c **** *  BitCounterEnc_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/BitCounterEnc.c **** *   first time. Is used to ensure that initialization happens only once.
 176:Generated_Source\PSoC5/BitCounterEnc.c **** *
 177:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_Start(void) 
 179:Generated_Source\PSoC5/BitCounterEnc.c **** {
 180:Generated_Source\PSoC5/BitCounterEnc.c ****     if(BitCounterEnc_initVar == 0u)
 181:Generated_Source\PSoC5/BitCounterEnc.c ****     {
 182:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_Init();
 183:Generated_Source\PSoC5/BitCounterEnc.c ****         
 184:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_initVar = 1u; /* Clear this bit for Initialization */        
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 5


 185:Generated_Source\PSoC5/BitCounterEnc.c ****     }
 186:Generated_Source\PSoC5/BitCounterEnc.c ****     
 187:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_Enable();        
 189:Generated_Source\PSoC5/BitCounterEnc.c **** }
 190:Generated_Source\PSoC5/BitCounterEnc.c **** 
 191:Generated_Source\PSoC5/BitCounterEnc.c **** 
 192:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_Stop
 194:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 195:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 196:Generated_Source\PSoC5/BitCounterEnc.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/BitCounterEnc.c **** *
 198:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 199:Generated_Source\PSoC5/BitCounterEnc.c **** *  void  
 200:Generated_Source\PSoC5/BitCounterEnc.c **** *
 201:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 202:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 203:Generated_Source\PSoC5/BitCounterEnc.c **** *
 204:Generated_Source\PSoC5/BitCounterEnc.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/BitCounterEnc.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/BitCounterEnc.c **** *
 207:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_Stop(void) 
 209:Generated_Source\PSoC5/BitCounterEnc.c **** {
  45              		.loc 1 209 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	BitCounterEnc_Stop, .-BitCounterEnc_Stop
  54 0002 00BF     		.section	.text.BitCounterEnc_SetInterruptMode,"ax",%progbits
  55              		.align	2
  56              		.global	BitCounterEnc_SetInterruptMode
  57              		.thumb
  58              		.thumb_func
  59              		.type	BitCounterEnc_SetInterruptMode, %function
  60              	BitCounterEnc_SetInterruptMode:
  61              	.LFB4:
 210:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(!BitCounterEnc_ControlRegRemoved || BitCounterEnc_UsingFixedFunction)
 212:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_CONTROL &= ((uint8)(~BitCounterEnc_CTRL_ENABLE));        
 213:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (!BitCounterEnc_ControlRegRemoved || BitCounterEnc_UsingFixedFunction) */
 214:Generated_Source\PSoC5/BitCounterEnc.c ****     
 215:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/BitCounterEnc.c ****     #if (BitCounterEnc_UsingFixedFunction)
 217:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_GLOBAL_ENABLE &= ((uint8)(~BitCounterEnc_BLOCK_EN_MASK));
 218:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_GLOBAL_STBY_ENABLE &= ((uint8)(~BitCounterEnc_BLOCK_STBY_EN_MASK));
 219:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 220:Generated_Source\PSoC5/BitCounterEnc.c **** }
 221:Generated_Source\PSoC5/BitCounterEnc.c **** 
 222:Generated_Source\PSoC5/BitCounterEnc.c **** 
 223:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_SetInterruptMode
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 6


 225:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 226:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 227:Generated_Source\PSoC5/BitCounterEnc.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:Generated_Source\PSoC5/BitCounterEnc.c **** *
 229:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 230:Generated_Source\PSoC5/BitCounterEnc.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/BitCounterEnc.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/BitCounterEnc.c **** *
 233:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 234:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 235:Generated_Source\PSoC5/BitCounterEnc.c **** *
 236:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/BitCounterEnc.c **** {
  62              		.loc 1 238 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL0:
 239:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_STATUS_MASK = interruptsMask;
  68              		.loc 1 239 0
  69 0000 014B     		ldr	r3, .L4
  70 0002 1870     		strb	r0, [r3]
  71 0004 7047     		bx	lr
  72              	.L5:
  73 0006 00BF     		.align	2
  74              	.L4:
  75 0008 87640040 		.word	1073767559
  76              		.cfi_endproc
  77              	.LFE4:
  78              		.size	BitCounterEnc_SetInterruptMode, .-BitCounterEnc_SetInterruptMode
  79              		.section	.text.BitCounterEnc_ReadStatusRegister,"ax",%progbits
  80              		.align	2
  81              		.global	BitCounterEnc_ReadStatusRegister
  82              		.thumb
  83              		.thumb_func
  84              		.type	BitCounterEnc_ReadStatusRegister, %function
  85              	BitCounterEnc_ReadStatusRegister:
  86              	.LFB5:
 240:Generated_Source\PSoC5/BitCounterEnc.c **** }
 241:Generated_Source\PSoC5/BitCounterEnc.c **** 
 242:Generated_Source\PSoC5/BitCounterEnc.c **** 
 243:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ReadStatusRegister
 245:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 246:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 247:Generated_Source\PSoC5/BitCounterEnc.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/BitCounterEnc.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/BitCounterEnc.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/BitCounterEnc.c **** *
 251:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 252:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 253:Generated_Source\PSoC5/BitCounterEnc.c **** *
 254:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 255:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/BitCounterEnc.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 7


 257:Generated_Source\PSoC5/BitCounterEnc.c **** * Side Effects:
 258:Generated_Source\PSoC5/BitCounterEnc.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/BitCounterEnc.c **** *
 260:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/BitCounterEnc.c **** uint8   BitCounterEnc_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/BitCounterEnc.c **** {
  87              		.loc 1 262 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 263:Generated_Source\PSoC5/BitCounterEnc.c ****     return BitCounterEnc_STATUS;
  92              		.loc 1 263 0
  93 0000 014B     		ldr	r3, .L7
  94 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:Generated_Source\PSoC5/BitCounterEnc.c **** }
  95              		.loc 1 264 0
  96 0004 7047     		bx	lr
  97              	.L8:
  98 0006 00BF     		.align	2
  99              	.L7:
 100 0008 67640040 		.word	1073767527
 101              		.cfi_endproc
 102              	.LFE5:
 103              		.size	BitCounterEnc_ReadStatusRegister, .-BitCounterEnc_ReadStatusRegister
 104              		.section	.text.BitCounterEnc_WriteCounter,"ax",%progbits
 105              		.align	2
 106              		.global	BitCounterEnc_WriteCounter
 107              		.thumb
 108              		.thumb_func
 109              		.type	BitCounterEnc_WriteCounter, %function
 110              	BitCounterEnc_WriteCounter:
 111              	.LFB6:
 265:Generated_Source\PSoC5/BitCounterEnc.c **** 
 266:Generated_Source\PSoC5/BitCounterEnc.c **** 
 267:Generated_Source\PSoC5/BitCounterEnc.c **** #if(!BitCounterEnc_ControlRegRemoved)
 268:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ReadControlRegister
 270:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 271:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 272:Generated_Source\PSoC5/BitCounterEnc.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/BitCounterEnc.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/BitCounterEnc.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/BitCounterEnc.c **** *
 276:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 277:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 278:Generated_Source\PSoC5/BitCounterEnc.c **** *
 279:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 280:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/BitCounterEnc.c **** *
 282:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/BitCounterEnc.c **** uint8   BitCounterEnc_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/BitCounterEnc.c **** {
 285:Generated_Source\PSoC5/BitCounterEnc.c ****     return BitCounterEnc_CONTROL;
 286:Generated_Source\PSoC5/BitCounterEnc.c **** }
 287:Generated_Source\PSoC5/BitCounterEnc.c **** 
 288:Generated_Source\PSoC5/BitCounterEnc.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 8


 289:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_WriteControlRegister
 291:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 292:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 293:Generated_Source\PSoC5/BitCounterEnc.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/BitCounterEnc.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/BitCounterEnc.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/BitCounterEnc.c **** *
 297:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 298:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 299:Generated_Source\PSoC5/BitCounterEnc.c **** *
 300:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 301:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/BitCounterEnc.c **** *
 303:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/BitCounterEnc.c **** void    BitCounterEnc_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/BitCounterEnc.c **** {
 306:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_CONTROL = control;
 307:Generated_Source\PSoC5/BitCounterEnc.c **** }
 308:Generated_Source\PSoC5/BitCounterEnc.c **** 
 309:Generated_Source\PSoC5/BitCounterEnc.c **** #endif  /* (!BitCounterEnc_ControlRegRemoved) */
 310:Generated_Source\PSoC5/BitCounterEnc.c **** 
 311:Generated_Source\PSoC5/BitCounterEnc.c **** 
 312:Generated_Source\PSoC5/BitCounterEnc.c **** #if (!(BitCounterEnc_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_WriteCounter
 315:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 316:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 317:Generated_Source\PSoC5/BitCounterEnc.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/BitCounterEnc.c **** *
 319:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 320:Generated_Source\PSoC5/BitCounterEnc.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/BitCounterEnc.c **** *
 322:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 323:Generated_Source\PSoC5/BitCounterEnc.c **** *  void 
 324:Generated_Source\PSoC5/BitCounterEnc.c **** *
 325:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_WriteCounter(uint8 counter) \
 327:Generated_Source\PSoC5/BitCounterEnc.c ****                                    
 328:Generated_Source\PSoC5/BitCounterEnc.c **** {
 112              		.loc 1 328 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL1:
 329:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
 330:Generated_Source\PSoC5/BitCounterEnc.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/BitCounterEnc.c ****         CYASSERT (0u == (BitCounterEnc_GLOBAL_ENABLE & BitCounterEnc_BLOCK_EN_MASK));
 332:Generated_Source\PSoC5/BitCounterEnc.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_GLOBAL_ENABLE |= BitCounterEnc_BLOCK_EN_MASK;
 334:Generated_Source\PSoC5/BitCounterEnc.c ****         CY_SET_REG16(BitCounterEnc_COUNTER_LSB_PTR, (uint16)counter);
 335:Generated_Source\PSoC5/BitCounterEnc.c ****         BitCounterEnc_GLOBAL_ENABLE &= ((uint8)(~BitCounterEnc_BLOCK_EN_MASK));
 336:Generated_Source\PSoC5/BitCounterEnc.c ****     #else
 337:Generated_Source\PSoC5/BitCounterEnc.c ****         CY_SET_REG8(BitCounterEnc_COUNTER_LSB_PTR, counter);
 118              		.loc 1 337 0
 119 0000 014B     		ldr	r3, .L10
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 9


 120 0002 1870     		strb	r0, [r3]
 121 0004 7047     		bx	lr
 122              	.L11:
 123 0006 00BF     		.align	2
 124              	.L10:
 125 0008 07640040 		.word	1073767431
 126              		.cfi_endproc
 127              	.LFE6:
 128              		.size	BitCounterEnc_WriteCounter, .-BitCounterEnc_WriteCounter
 129              		.section	.text.BitCounterEnc_ReadCounter,"ax",%progbits
 130              		.align	2
 131              		.global	BitCounterEnc_ReadCounter
 132              		.thumb
 133              		.thumb_func
 134              		.type	BitCounterEnc_ReadCounter, %function
 135              	BitCounterEnc_ReadCounter:
 136              	.LFB7:
 338:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 339:Generated_Source\PSoC5/BitCounterEnc.c **** }
 340:Generated_Source\PSoC5/BitCounterEnc.c **** #endif /* (!(BitCounterEnc_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/BitCounterEnc.c **** 
 342:Generated_Source\PSoC5/BitCounterEnc.c **** 
 343:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 344:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ReadCounter
 345:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 346:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 347:Generated_Source\PSoC5/BitCounterEnc.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/BitCounterEnc.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/BitCounterEnc.c **** *
 350:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 351:Generated_Source\PSoC5/BitCounterEnc.c **** *  void:  
 352:Generated_Source\PSoC5/BitCounterEnc.c **** *
 353:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 354:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) The present value of the counter.
 355:Generated_Source\PSoC5/BitCounterEnc.c **** *
 356:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/BitCounterEnc.c **** uint8 BitCounterEnc_ReadCounter(void) 
 358:Generated_Source\PSoC5/BitCounterEnc.c **** {
 137              		.loc 1 358 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 359:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/BitCounterEnc.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
 363:Generated_Source\PSoC5/BitCounterEnc.c **** 		(void)CY_GET_REG16(BitCounterEnc_COUNTER_LSB_PTR);
 364:Generated_Source\PSoC5/BitCounterEnc.c **** 	#else
 365:Generated_Source\PSoC5/BitCounterEnc.c **** 		(void)CY_GET_REG8(BitCounterEnc_COUNTER_LSB_PTR_8BIT);
 142              		.loc 1 365 0
 143 0000 024B     		ldr	r3, .L13
 144 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:Generated_Source\PSoC5/BitCounterEnc.c **** 	#endif/* (BitCounterEnc_UsingFixedFunction) */
 367:Generated_Source\PSoC5/BitCounterEnc.c ****     
 368:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 10


 370:Generated_Source\PSoC5/BitCounterEnc.c ****         return ((uint8)CY_GET_REG16(BitCounterEnc_STATICCOUNT_LSB_PTR));
 371:Generated_Source\PSoC5/BitCounterEnc.c ****     #else
 372:Generated_Source\PSoC5/BitCounterEnc.c ****         return (CY_GET_REG8(BitCounterEnc_STATICCOUNT_LSB_PTR));
 145              		.loc 1 372 0
 146 0004 024B     		ldr	r3, .L13+4
 147 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 373:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 374:Generated_Source\PSoC5/BitCounterEnc.c **** }
 148              		.loc 1 374 0
 149 0008 7047     		bx	lr
 150              	.L14:
 151 000a 00BF     		.align	2
 152              	.L13:
 153 000c 07640040 		.word	1073767431
 154 0010 47640040 		.word	1073767495
 155              		.cfi_endproc
 156              	.LFE7:
 157              		.size	BitCounterEnc_ReadCounter, .-BitCounterEnc_ReadCounter
 158              		.section	.text.BitCounterEnc_ReadCapture,"ax",%progbits
 159              		.align	2
 160              		.global	BitCounterEnc_ReadCapture
 161              		.thumb
 162              		.thumb_func
 163              		.type	BitCounterEnc_ReadCapture, %function
 164              	BitCounterEnc_ReadCapture:
 165              	.LFB8:
 375:Generated_Source\PSoC5/BitCounterEnc.c **** 
 376:Generated_Source\PSoC5/BitCounterEnc.c **** 
 377:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ReadCapture
 379:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 380:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 381:Generated_Source\PSoC5/BitCounterEnc.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/BitCounterEnc.c **** *
 383:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 384:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 385:Generated_Source\PSoC5/BitCounterEnc.c **** *
 386:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 387:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) Present Capture value.
 388:Generated_Source\PSoC5/BitCounterEnc.c **** *
 389:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/BitCounterEnc.c **** uint8 BitCounterEnc_ReadCapture(void) 
 391:Generated_Source\PSoC5/BitCounterEnc.c **** {
 166              		.loc 1 391 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 392:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
 393:Generated_Source\PSoC5/BitCounterEnc.c ****         return ((uint8)CY_GET_REG16(BitCounterEnc_STATICCOUNT_LSB_PTR));
 394:Generated_Source\PSoC5/BitCounterEnc.c ****     #else
 395:Generated_Source\PSoC5/BitCounterEnc.c ****         return (CY_GET_REG8(BitCounterEnc_STATICCOUNT_LSB_PTR));
 171              		.loc 1 395 0
 172 0000 014B     		ldr	r3, .L16
 173 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 396:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 397:Generated_Source\PSoC5/BitCounterEnc.c **** }
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 11


 174              		.loc 1 397 0
 175 0004 7047     		bx	lr
 176              	.L17:
 177 0006 00BF     		.align	2
 178              	.L16:
 179 0008 47640040 		.word	1073767495
 180              		.cfi_endproc
 181              	.LFE8:
 182              		.size	BitCounterEnc_ReadCapture, .-BitCounterEnc_ReadCapture
 183              		.section	.text.BitCounterEnc_WritePeriod,"ax",%progbits
 184              		.align	2
 185              		.global	BitCounterEnc_WritePeriod
 186              		.thumb
 187              		.thumb_func
 188              		.type	BitCounterEnc_WritePeriod, %function
 189              	BitCounterEnc_WritePeriod:
 190              	.LFB9:
 398:Generated_Source\PSoC5/BitCounterEnc.c **** 
 399:Generated_Source\PSoC5/BitCounterEnc.c **** 
 400:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_WritePeriod
 402:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 403:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 404:Generated_Source\PSoC5/BitCounterEnc.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/BitCounterEnc.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/BitCounterEnc.c **** *
 407:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 408:Generated_Source\PSoC5/BitCounterEnc.c **** *  period: (uint8) A value of 0 will result in
 409:Generated_Source\PSoC5/BitCounterEnc.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/BitCounterEnc.c **** *
 411:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 412:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 413:Generated_Source\PSoC5/BitCounterEnc.c **** *
 414:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_WritePeriod(uint8 period) 
 416:Generated_Source\PSoC5/BitCounterEnc.c **** {
 191              		.loc 1 416 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL2:
 417:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
 418:Generated_Source\PSoC5/BitCounterEnc.c ****         CY_SET_REG16(BitCounterEnc_PERIOD_LSB_PTR,(uint16)period);
 419:Generated_Source\PSoC5/BitCounterEnc.c ****     #else
 420:Generated_Source\PSoC5/BitCounterEnc.c ****         CY_SET_REG8(BitCounterEnc_PERIOD_LSB_PTR, period);
 197              		.loc 1 420 0
 198 0000 014B     		ldr	r3, .L19
 199 0002 1870     		strb	r0, [r3]
 200 0004 7047     		bx	lr
 201              	.L20:
 202 0006 00BF     		.align	2
 203              	.L19:
 204 0008 27640040 		.word	1073767463
 205              		.cfi_endproc
 206              	.LFE9:
 207              		.size	BitCounterEnc_WritePeriod, .-BitCounterEnc_WritePeriod
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 12


 208              		.section	.text.BitCounterEnc_ReadPeriod,"ax",%progbits
 209              		.align	2
 210              		.global	BitCounterEnc_ReadPeriod
 211              		.thumb
 212              		.thumb_func
 213              		.type	BitCounterEnc_ReadPeriod, %function
 214              	BitCounterEnc_ReadPeriod:
 215              	.LFB10:
 421:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 422:Generated_Source\PSoC5/BitCounterEnc.c **** }
 423:Generated_Source\PSoC5/BitCounterEnc.c **** 
 424:Generated_Source\PSoC5/BitCounterEnc.c **** 
 425:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ReadPeriod
 427:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 428:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 429:Generated_Source\PSoC5/BitCounterEnc.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/BitCounterEnc.c **** *
 431:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 432:Generated_Source\PSoC5/BitCounterEnc.c **** *  void:  
 433:Generated_Source\PSoC5/BitCounterEnc.c **** *
 434:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 435:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) Present period value.
 436:Generated_Source\PSoC5/BitCounterEnc.c **** *
 437:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/BitCounterEnc.c **** uint8 BitCounterEnc_ReadPeriod(void) 
 439:Generated_Source\PSoC5/BitCounterEnc.c **** {
 216              		.loc 1 439 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 440:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
 441:Generated_Source\PSoC5/BitCounterEnc.c ****         return ((uint8)CY_GET_REG16(BitCounterEnc_PERIOD_LSB_PTR));
 442:Generated_Source\PSoC5/BitCounterEnc.c ****     #else
 443:Generated_Source\PSoC5/BitCounterEnc.c ****         return (CY_GET_REG8(BitCounterEnc_PERIOD_LSB_PTR));
 221              		.loc 1 443 0
 222 0000 014B     		ldr	r3, .L22
 223 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 444:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 445:Generated_Source\PSoC5/BitCounterEnc.c **** }
 224              		.loc 1 445 0
 225 0004 7047     		bx	lr
 226              	.L23:
 227 0006 00BF     		.align	2
 228              	.L22:
 229 0008 27640040 		.word	1073767463
 230              		.cfi_endproc
 231              	.LFE10:
 232              		.size	BitCounterEnc_ReadPeriod, .-BitCounterEnc_ReadPeriod
 233              		.section	.text.BitCounterEnc_WriteCompare,"ax",%progbits
 234              		.align	2
 235              		.global	BitCounterEnc_WriteCompare
 236              		.thumb
 237              		.thumb_func
 238              		.type	BitCounterEnc_WriteCompare, %function
 239              	BitCounterEnc_WriteCompare:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 13


 240              	.LFB11:
 446:Generated_Source\PSoC5/BitCounterEnc.c **** 
 447:Generated_Source\PSoC5/BitCounterEnc.c **** 
 448:Generated_Source\PSoC5/BitCounterEnc.c **** #if (!BitCounterEnc_UsingFixedFunction)
 449:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 450:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_WriteCompare
 451:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 452:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 453:Generated_Source\PSoC5/BitCounterEnc.c **** * Changes the compare value.  The compare output will 
 454:Generated_Source\PSoC5/BitCounterEnc.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:Generated_Source\PSoC5/BitCounterEnc.c **** * driven high when the present counter value compares true based on the 
 456:Generated_Source\PSoC5/BitCounterEnc.c **** * configured compare mode setting. 
 457:Generated_Source\PSoC5/BitCounterEnc.c **** *
 458:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 459:Generated_Source\PSoC5/BitCounterEnc.c **** *  Compare:  New compare value. 
 460:Generated_Source\PSoC5/BitCounterEnc.c **** *
 461:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 462:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 463:Generated_Source\PSoC5/BitCounterEnc.c **** *
 464:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_WriteCompare(uint8 compare) \
 466:Generated_Source\PSoC5/BitCounterEnc.c ****                                    
 467:Generated_Source\PSoC5/BitCounterEnc.c **** {
 241              		.loc 1 467 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL3:
 468:Generated_Source\PSoC5/BitCounterEnc.c ****     #if(BitCounterEnc_UsingFixedFunction)
 469:Generated_Source\PSoC5/BitCounterEnc.c ****         CY_SET_REG16(BitCounterEnc_COMPARE_LSB_PTR, (uint16)compare);
 470:Generated_Source\PSoC5/BitCounterEnc.c ****     #else
 471:Generated_Source\PSoC5/BitCounterEnc.c ****         CY_SET_REG8(BitCounterEnc_COMPARE_LSB_PTR, compare);
 247              		.loc 1 471 0
 248 0000 014B     		ldr	r3, .L25
 249 0002 1870     		strb	r0, [r3]
 250 0004 7047     		bx	lr
 251              	.L26:
 252 0006 00BF     		.align	2
 253              	.L25:
 254 0008 37640040 		.word	1073767479
 255              		.cfi_endproc
 256              	.LFE11:
 257              		.size	BitCounterEnc_WriteCompare, .-BitCounterEnc_WriteCompare
 258              		.section	.text.BitCounterEnc_ReadCompare,"ax",%progbits
 259              		.align	2
 260              		.global	BitCounterEnc_ReadCompare
 261              		.thumb
 262              		.thumb_func
 263              		.type	BitCounterEnc_ReadCompare, %function
 264              	BitCounterEnc_ReadCompare:
 265              	.LFB12:
 472:Generated_Source\PSoC5/BitCounterEnc.c ****     #endif /* (BitCounterEnc_UsingFixedFunction) */
 473:Generated_Source\PSoC5/BitCounterEnc.c **** }
 474:Generated_Source\PSoC5/BitCounterEnc.c **** 
 475:Generated_Source\PSoC5/BitCounterEnc.c **** 
 476:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 14


 477:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ReadCompare
 478:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 479:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 480:Generated_Source\PSoC5/BitCounterEnc.c **** * Returns the compare value.
 481:Generated_Source\PSoC5/BitCounterEnc.c **** *
 482:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 483:Generated_Source\PSoC5/BitCounterEnc.c **** *  void:
 484:Generated_Source\PSoC5/BitCounterEnc.c **** *
 485:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 486:Generated_Source\PSoC5/BitCounterEnc.c **** *  (uint8) Present compare value.
 487:Generated_Source\PSoC5/BitCounterEnc.c **** *
 488:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/BitCounterEnc.c **** uint8 BitCounterEnc_ReadCompare(void) 
 490:Generated_Source\PSoC5/BitCounterEnc.c **** {
 266              		.loc 1 490 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 491:Generated_Source\PSoC5/BitCounterEnc.c ****     return (CY_GET_REG8(BitCounterEnc_COMPARE_LSB_PTR));
 271              		.loc 1 491 0
 272 0000 014B     		ldr	r3, .L28
 273 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 492:Generated_Source\PSoC5/BitCounterEnc.c **** }
 274              		.loc 1 492 0
 275 0004 7047     		bx	lr
 276              	.L29:
 277 0006 00BF     		.align	2
 278              	.L28:
 279 0008 37640040 		.word	1073767479
 280              		.cfi_endproc
 281              	.LFE12:
 282              		.size	BitCounterEnc_ReadCompare, .-BitCounterEnc_ReadCompare
 283              		.section	.text.BitCounterEnc_ClearFIFO,"ax",%progbits
 284              		.align	2
 285              		.global	BitCounterEnc_ClearFIFO
 286              		.thumb
 287              		.thumb_func
 288              		.type	BitCounterEnc_ClearFIFO, %function
 289              	BitCounterEnc_ClearFIFO:
 290              	.LFB13:
 493:Generated_Source\PSoC5/BitCounterEnc.c **** 
 494:Generated_Source\PSoC5/BitCounterEnc.c **** 
 495:Generated_Source\PSoC5/BitCounterEnc.c **** #if (BitCounterEnc_COMPARE_MODE_SOFTWARE)
 496:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_SetCompareMode
 498:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 499:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 500:Generated_Source\PSoC5/BitCounterEnc.c **** *  Sets the software controlled Compare Mode.
 501:Generated_Source\PSoC5/BitCounterEnc.c **** *
 502:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:
 503:Generated_Source\PSoC5/BitCounterEnc.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:Generated_Source\PSoC5/BitCounterEnc.c **** *
 505:Generated_Source\PSoC5/BitCounterEnc.c **** * Return:
 506:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 507:Generated_Source\PSoC5/BitCounterEnc.c **** *
 508:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 15


 509:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_SetCompareMode(uint8 compareMode) 
 510:Generated_Source\PSoC5/BitCounterEnc.c **** {
 511:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Clear the compare mode bits in the control register */
 512:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_CONTROL &= ((uint8)(~BitCounterEnc_CTRL_CMPMODE_MASK));
 513:Generated_Source\PSoC5/BitCounterEnc.c ****     
 514:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Write the new setting */
 515:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_CONTROL |= compareMode;
 516:Generated_Source\PSoC5/BitCounterEnc.c **** }
 517:Generated_Source\PSoC5/BitCounterEnc.c **** #endif  /* (BitCounterEnc_COMPARE_MODE_SOFTWARE) */
 518:Generated_Source\PSoC5/BitCounterEnc.c **** 
 519:Generated_Source\PSoC5/BitCounterEnc.c **** 
 520:Generated_Source\PSoC5/BitCounterEnc.c **** #if (BitCounterEnc_CAPTURE_MODE_SOFTWARE)
 521:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 522:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_SetCaptureMode
 523:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 524:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 525:Generated_Source\PSoC5/BitCounterEnc.c **** *  Sets the software controlled Capture Mode.
 526:Generated_Source\PSoC5/BitCounterEnc.c **** *
 527:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:
 528:Generated_Source\PSoC5/BitCounterEnc.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:Generated_Source\PSoC5/BitCounterEnc.c **** *
 530:Generated_Source\PSoC5/BitCounterEnc.c **** * Return:
 531:Generated_Source\PSoC5/BitCounterEnc.c **** *  void
 532:Generated_Source\PSoC5/BitCounterEnc.c **** *
 533:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 534:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_SetCaptureMode(uint8 captureMode) 
 535:Generated_Source\PSoC5/BitCounterEnc.c **** {
 536:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Clear the capture mode bits in the control register */
 537:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_CONTROL &= ((uint8)(~BitCounterEnc_CTRL_CAPMODE_MASK));
 538:Generated_Source\PSoC5/BitCounterEnc.c ****     
 539:Generated_Source\PSoC5/BitCounterEnc.c ****     /* Write the new setting */
 540:Generated_Source\PSoC5/BitCounterEnc.c ****     BitCounterEnc_CONTROL |= ((uint8)((uint8)captureMode << BitCounterEnc_CTRL_CAPMODE0_SHIFT));
 541:Generated_Source\PSoC5/BitCounterEnc.c **** }
 542:Generated_Source\PSoC5/BitCounterEnc.c **** #endif  /* (BitCounterEnc_CAPTURE_MODE_SOFTWARE) */
 543:Generated_Source\PSoC5/BitCounterEnc.c **** 
 544:Generated_Source\PSoC5/BitCounterEnc.c **** 
 545:Generated_Source\PSoC5/BitCounterEnc.c **** /*******************************************************************************
 546:Generated_Source\PSoC5/BitCounterEnc.c **** * Function Name: BitCounterEnc_ClearFIFO
 547:Generated_Source\PSoC5/BitCounterEnc.c **** ********************************************************************************
 548:Generated_Source\PSoC5/BitCounterEnc.c **** * Summary:
 549:Generated_Source\PSoC5/BitCounterEnc.c **** *   This function clears all capture data from the capture FIFO
 550:Generated_Source\PSoC5/BitCounterEnc.c **** *
 551:Generated_Source\PSoC5/BitCounterEnc.c **** * Parameters:  
 552:Generated_Source\PSoC5/BitCounterEnc.c **** *  void:
 553:Generated_Source\PSoC5/BitCounterEnc.c **** *
 554:Generated_Source\PSoC5/BitCounterEnc.c **** * Return: 
 555:Generated_Source\PSoC5/BitCounterEnc.c **** *  None
 556:Generated_Source\PSoC5/BitCounterEnc.c **** *
 557:Generated_Source\PSoC5/BitCounterEnc.c **** *******************************************************************************/
 558:Generated_Source\PSoC5/BitCounterEnc.c **** void BitCounterEnc_ClearFIFO(void) 
 559:Generated_Source\PSoC5/BitCounterEnc.c **** {
 291              		.loc 1 559 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 16


 297              		.cfi_offset 3, -8
 298              		.cfi_offset 14, -4
 560:Generated_Source\PSoC5/BitCounterEnc.c **** 
 561:Generated_Source\PSoC5/BitCounterEnc.c ****     while(0u != (BitCounterEnc_ReadStatusRegister() & BitCounterEnc_STATUS_FIFONEMP))
 299              		.loc 1 561 0
 300 0002 01E0     		b	.L31
 301              	.L32:
 562:Generated_Source\PSoC5/BitCounterEnc.c ****     {
 563:Generated_Source\PSoC5/BitCounterEnc.c ****         (void)BitCounterEnc_ReadCapture();
 302              		.loc 1 563 0
 303 0004 FFF7FEFF 		bl	BitCounterEnc_ReadCapture
 304              	.LVL4:
 305              	.L31:
 561:Generated_Source\PSoC5/BitCounterEnc.c ****     {
 306              		.loc 1 561 0
 307 0008 FFF7FEFF 		bl	BitCounterEnc_ReadStatusRegister
 308              	.LVL5:
 309 000c 10F0400F 		tst	r0, #64
 310 0010 F8D1     		bne	.L32
 564:Generated_Source\PSoC5/BitCounterEnc.c ****     }
 565:Generated_Source\PSoC5/BitCounterEnc.c **** 
 566:Generated_Source\PSoC5/BitCounterEnc.c **** }
 311              		.loc 1 566 0
 312 0012 08BD     		pop	{r3, pc}
 313              		.cfi_endproc
 314              	.LFE13:
 315              		.size	BitCounterEnc_ClearFIFO, .-BitCounterEnc_ClearFIFO
 316              		.section	.text.BitCounterEnc_Init,"ax",%progbits
 317              		.align	2
 318              		.global	BitCounterEnc_Init
 319              		.thumb
 320              		.thumb_func
 321              		.type	BitCounterEnc_Init, %function
 322              	BitCounterEnc_Init:
 323              	.LFB0:
  38:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (!BitCounterEnc_UsingFixedFunction && !BitCounterEnc_ControlRegRemoved)
 324              		.loc 1 38 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
  96:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!BitCounterEnc_UsingFixedFunction) */
 332              		.loc 1 96 0
 333 0002 FFF7FEFF 		bl	BitCounterEnc_ClearFIFO
 334              	.LVL6:
 100:Generated_Source\PSoC5/BitCounterEnc.c ****         #if (!(BitCounterEnc_UsingFixedFunction && (CY_PSOC5A)))
 335              		.loc 1 100 0
 336 0006 2020     		movs	r0, #32
 337 0008 FFF7FEFF 		bl	BitCounterEnc_WritePeriod
 338              	.LVL7:
 102:Generated_Source\PSoC5/BitCounterEnc.c ****         #endif /* (!(BitCounterEnc_UsingFixedFunction && (CY_PSOC5A))) */
 339              		.loc 1 102 0
 340 000c 0020     		movs	r0, #0
 341 000e FFF7FEFF 		bl	BitCounterEnc_WriteCounter
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 17


 342              	.LVL8:
 104:Generated_Source\PSoC5/BitCounterEnc.c ****         
 343              		.loc 1 104 0
 344 0012 0C20     		movs	r0, #12
 345 0014 FFF7FEFF 		bl	BitCounterEnc_SetInterruptMode
 346              	.LVL9:
 108:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Set the compare value (only available to non-fixed function implementation */
 347              		.loc 1 108 0
 348 0018 FFF7FEFF 		bl	BitCounterEnc_ReadStatusRegister
 349              	.LVL10:
 110:Generated_Source\PSoC5/BitCounterEnc.c ****             /* Use the interrupt output of the status register for IRQ output */
 350              		.loc 1 110 0
 351 001c 1F20     		movs	r0, #31
 352 001e FFF7FEFF 		bl	BitCounterEnc_WriteCompare
 353              	.LVL11:
 115:Generated_Source\PSoC5/BitCounterEnc.c ****             
 354              		.loc 1 115 0
 355 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 356              	.LVL12:
 117:Generated_Source\PSoC5/BitCounterEnc.c ****             
 357              		.loc 1 117 0
 358 0026 044A     		ldr	r2, .L36
 359 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 360 002a 43F01003 		orr	r3, r3, #16
 361 002e 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/BitCounterEnc.c ****             
 362              		.loc 1 120 0
 363 0030 FFF7FEFF 		bl	CyExitCriticalSection
 364              	.LVL13:
 365 0034 08BD     		pop	{r3, pc}
 366              	.L37:
 367 0036 00BF     		.align	2
 368              	.L36:
 369 0038 97640040 		.word	1073767575
 370              		.cfi_endproc
 371              	.LFE0:
 372              		.size	BitCounterEnc_Init, .-BitCounterEnc_Init
 373              		.section	.text.BitCounterEnc_Start,"ax",%progbits
 374              		.align	2
 375              		.global	BitCounterEnc_Start
 376              		.thumb
 377              		.thumb_func
 378              		.type	BitCounterEnc_Start, %function
 379              	BitCounterEnc_Start:
 380              	.LFB2:
 179:Generated_Source\PSoC5/BitCounterEnc.c ****     if(BitCounterEnc_initVar == 0u)
 381              		.loc 1 179 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 08B5     		push	{r3, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 180:Generated_Source\PSoC5/BitCounterEnc.c ****     {
 389              		.loc 1 180 0
 390 0002 044B     		ldr	r3, .L41
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 18


 391 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0006 23B9     		cbnz	r3, .L38
 182:Generated_Source\PSoC5/BitCounterEnc.c ****         
 393              		.loc 1 182 0
 394 0008 FFF7FEFF 		bl	BitCounterEnc_Init
 395              	.LVL14:
 184:Generated_Source\PSoC5/BitCounterEnc.c ****     }
 396              		.loc 1 184 0
 397 000c 0122     		movs	r2, #1
 398 000e 014B     		ldr	r3, .L41
 399 0010 1A70     		strb	r2, [r3]
 400              	.L38:
 401 0012 08BD     		pop	{r3, pc}
 402              	.L42:
 403              		.align	2
 404              	.L41:
 405 0014 00000000 		.word	.LANCHOR0
 406              		.cfi_endproc
 407              	.LFE2:
 408              		.size	BitCounterEnc_Start, .-BitCounterEnc_Start
 409              		.global	BitCounterEnc_initVar
 410              		.bss
 411              		.set	.LANCHOR0,. + 0
 412              		.type	BitCounterEnc_initVar, %object
 413              		.size	BitCounterEnc_initVar, 1
 414              	BitCounterEnc_initVar:
 415 0000 00       		.space	1
 416              		.text
 417              	.Letext0:
 418              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 419              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 420              		.section	.debug_info,"",%progbits
 421              	.Ldebug_info0:
 422 0000 CF020000 		.4byte	0x2cf
 423 0004 0400     		.2byte	0x4
 424 0006 00000000 		.4byte	.Ldebug_abbrev0
 425 000a 04       		.byte	0x4
 426 000b 01       		.uleb128 0x1
 427 000c 7E010000 		.4byte	.LASF36
 428 0010 0C       		.byte	0xc
 429 0011 00000000 		.4byte	.LASF37
 430 0015 1C010000 		.4byte	.LASF38
 431 0019 00000000 		.4byte	.Ldebug_ranges0+0
 432 001d 00000000 		.4byte	0
 433 0021 00000000 		.4byte	.Ldebug_line0
 434 0025 02       		.uleb128 0x2
 435 0026 01       		.byte	0x1
 436 0027 06       		.byte	0x6
 437 0028 8F030000 		.4byte	.LASF0
 438 002c 02       		.uleb128 0x2
 439 002d 01       		.byte	0x1
 440 002e 08       		.byte	0x8
 441 002f 70010000 		.4byte	.LASF1
 442 0033 02       		.uleb128 0x2
 443 0034 02       		.byte	0x2
 444 0035 05       		.byte	0x5
 445 0036 40030000 		.4byte	.LASF2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 19


 446 003a 02       		.uleb128 0x2
 447 003b 02       		.byte	0x2
 448 003c 07       		.byte	0x7
 449 003d 8C000000 		.4byte	.LASF3
 450 0041 02       		.uleb128 0x2
 451 0042 04       		.byte	0x4
 452 0043 05       		.byte	0x5
 453 0044 83000000 		.4byte	.LASF4
 454 0048 02       		.uleb128 0x2
 455 0049 04       		.byte	0x4
 456 004a 07       		.byte	0x7
 457 004b 32020000 		.4byte	.LASF5
 458 004f 02       		.uleb128 0x2
 459 0050 08       		.byte	0x8
 460 0051 05       		.byte	0x5
 461 0052 13030000 		.4byte	.LASF6
 462 0056 02       		.uleb128 0x2
 463 0057 08       		.byte	0x8
 464 0058 07       		.byte	0x7
 465 0059 05010000 		.4byte	.LASF7
 466 005d 03       		.uleb128 0x3
 467 005e 04       		.byte	0x4
 468 005f 05       		.byte	0x5
 469 0060 696E7400 		.ascii	"int\000"
 470 0064 02       		.uleb128 0x2
 471 0065 04       		.byte	0x4
 472 0066 07       		.byte	0x7
 473 0067 92020000 		.4byte	.LASF8
 474 006b 04       		.uleb128 0x4
 475 006c 44020000 		.4byte	.LASF12
 476 0070 02       		.byte	0x2
 477 0071 E401     		.2byte	0x1e4
 478 0073 2C000000 		.4byte	0x2c
 479 0077 02       		.uleb128 0x2
 480 0078 04       		.byte	0x4
 481 0079 04       		.byte	0x4
 482 007a 5C000000 		.4byte	.LASF9
 483 007e 02       		.uleb128 0x2
 484 007f 08       		.byte	0x8
 485 0080 04       		.byte	0x4
 486 0081 74020000 		.4byte	.LASF10
 487 0085 02       		.uleb128 0x2
 488 0086 01       		.byte	0x1
 489 0087 08       		.byte	0x8
 490 0088 21030000 		.4byte	.LASF11
 491 008c 04       		.uleb128 0x4
 492 008d 0C020000 		.4byte	.LASF13
 493 0091 02       		.byte	0x2
 494 0092 8E02     		.2byte	0x28e
 495 0094 98000000 		.4byte	0x98
 496 0098 05       		.uleb128 0x5
 497 0099 6B000000 		.4byte	0x6b
 498 009d 02       		.uleb128 0x2
 499 009e 08       		.byte	0x8
 500 009f 04       		.byte	0x4
 501 00a0 83030000 		.4byte	.LASF14
 502 00a4 02       		.uleb128 0x2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 20


 503 00a5 04       		.byte	0x4
 504 00a6 07       		.byte	0x7
 505 00a7 F4020000 		.4byte	.LASF15
 506 00ab 06       		.uleb128 0x6
 507 00ac BC000000 		.4byte	.LASF16
 508 00b0 01       		.byte	0x1
 509 00b1 8F       		.byte	0x8f
 510 00b2 00000000 		.4byte	.LFB1
 511 00b6 02000000 		.4byte	.LFE1-.LFB1
 512 00ba 01       		.uleb128 0x1
 513 00bb 9C       		.byte	0x9c
 514 00bc 06       		.uleb128 0x6
 515 00bd E1020000 		.4byte	.LASF17
 516 00c1 01       		.byte	0x1
 517 00c2 D0       		.byte	0xd0
 518 00c3 00000000 		.4byte	.LFB3
 519 00c7 02000000 		.4byte	.LFE3-.LFB3
 520 00cb 01       		.uleb128 0x1
 521 00cc 9C       		.byte	0x9c
 522 00cd 07       		.uleb128 0x7
 523 00ce 64030000 		.4byte	.LASF18
 524 00d2 01       		.byte	0x1
 525 00d3 ED       		.byte	0xed
 526 00d4 00000000 		.4byte	.LFB4
 527 00d8 0C000000 		.4byte	.LFE4-.LFB4
 528 00dc 01       		.uleb128 0x1
 529 00dd 9C       		.byte	0x9c
 530 00de F0000000 		.4byte	0xf0
 531 00e2 08       		.uleb128 0x8
 532 00e3 4A020000 		.4byte	.LASF20
 533 00e7 01       		.byte	0x1
 534 00e8 ED       		.byte	0xed
 535 00e9 6B000000 		.4byte	0x6b
 536 00ed 01       		.uleb128 0x1
 537 00ee 50       		.byte	0x50
 538 00ef 00       		.byte	0
 539 00f0 09       		.uleb128 0x9
 540 00f1 11020000 		.4byte	.LASF22
 541 00f5 01       		.byte	0x1
 542 00f6 0501     		.2byte	0x105
 543 00f8 6B000000 		.4byte	0x6b
 544 00fc 00000000 		.4byte	.LFB5
 545 0100 0C000000 		.4byte	.LFE5-.LFB5
 546 0104 01       		.uleb128 0x1
 547 0105 9C       		.byte	0x9c
 548 0106 0A       		.uleb128 0xa
 549 0107 59020000 		.4byte	.LASF19
 550 010b 01       		.byte	0x1
 551 010c 4601     		.2byte	0x146
 552 010e 00000000 		.4byte	.LFB6
 553 0112 0C000000 		.4byte	.LFE6-.LFB6
 554 0116 01       		.uleb128 0x1
 555 0117 9C       		.byte	0x9c
 556 0118 2B010000 		.4byte	0x12b
 557 011c 0B       		.uleb128 0xb
 558 011d FD000000 		.4byte	.LASF21
 559 0121 01       		.byte	0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 21


 560 0122 4601     		.2byte	0x146
 561 0124 6B000000 		.4byte	0x6b
 562 0128 01       		.uleb128 0x1
 563 0129 50       		.byte	0x50
 564 012a 00       		.byte	0
 565 012b 09       		.uleb128 0x9
 566 012c 62000000 		.4byte	.LASF23
 567 0130 01       		.byte	0x1
 568 0131 6501     		.2byte	0x165
 569 0133 6B000000 		.4byte	0x6b
 570 0137 00000000 		.4byte	.LFB7
 571 013b 14000000 		.4byte	.LFE7-.LFB7
 572 013f 01       		.uleb128 0x1
 573 0140 9C       		.byte	0x9c
 574 0141 09       		.uleb128 0x9
 575 0142 4A030000 		.4byte	.LASF24
 576 0146 01       		.byte	0x1
 577 0147 8601     		.2byte	0x186
 578 0149 6B000000 		.4byte	0x6b
 579 014d 00000000 		.4byte	.LFB8
 580 0151 0C000000 		.4byte	.LFE8-.LFB8
 581 0155 01       		.uleb128 0x1
 582 0156 9C       		.byte	0x9c
 583 0157 0A       		.uleb128 0xa
 584 0158 27000000 		.4byte	.LASF25
 585 015c 01       		.byte	0x1
 586 015d 9F01     		.2byte	0x19f
 587 015f 00000000 		.4byte	.LFB9
 588 0163 0C000000 		.4byte	.LFE9-.LFB9
 589 0167 01       		.uleb128 0x1
 590 0168 9C       		.byte	0x9c
 591 0169 7C010000 		.4byte	0x17c
 592 016d 0B       		.uleb128 0xb
 593 016e 7C000000 		.4byte	.LASF26
 594 0172 01       		.byte	0x1
 595 0173 9F01     		.2byte	0x19f
 596 0175 6B000000 		.4byte	0x6b
 597 0179 01       		.uleb128 0x1
 598 017a 50       		.byte	0x50
 599 017b 00       		.byte	0
 600 017c 09       		.uleb128 0x9
 601 017d 9F020000 		.4byte	.LASF27
 602 0181 01       		.byte	0x1
 603 0182 B601     		.2byte	0x1b6
 604 0184 6B000000 		.4byte	0x6b
 605 0188 00000000 		.4byte	.LFB10
 606 018c 0C000000 		.4byte	.LFE10-.LFB10
 607 0190 01       		.uleb128 0x1
 608 0191 9C       		.byte	0x9c
 609 0192 0A       		.uleb128 0xa
 610 0193 41000000 		.4byte	.LASF28
 611 0197 01       		.byte	0x1
 612 0198 D101     		.2byte	0x1d1
 613 019a 00000000 		.4byte	.LFB11
 614 019e 0C000000 		.4byte	.LFE11-.LFB11
 615 01a2 01       		.uleb128 0x1
 616 01a3 9C       		.byte	0x9c
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 22


 617 01a4 B7010000 		.4byte	0x1b7
 618 01a8 0B       		.uleb128 0xb
 619 01a9 9B030000 		.4byte	.LASF29
 620 01ad 01       		.byte	0x1
 621 01ae D101     		.2byte	0x1d1
 622 01b0 6B000000 		.4byte	0x6b
 623 01b4 01       		.uleb128 0x1
 624 01b5 50       		.byte	0x50
 625 01b6 00       		.byte	0
 626 01b7 09       		.uleb128 0x9
 627 01b8 26030000 		.4byte	.LASF30
 628 01bc 01       		.byte	0x1
 629 01bd E901     		.2byte	0x1e9
 630 01bf 6B000000 		.4byte	0x6b
 631 01c3 00000000 		.4byte	.LFB12
 632 01c7 0C000000 		.4byte	.LFE12-.LFB12
 633 01cb 01       		.uleb128 0x1
 634 01cc 9C       		.byte	0x9c
 635 01cd 0A       		.uleb128 0xa
 636 01ce E5000000 		.4byte	.LASF31
 637 01d2 01       		.byte	0x1
 638 01d3 2E02     		.2byte	0x22e
 639 01d5 00000000 		.4byte	.LFB13
 640 01d9 14000000 		.4byte	.LFE13-.LFB13
 641 01dd 01       		.uleb128 0x1
 642 01de 9C       		.byte	0x9c
 643 01df F6010000 		.4byte	0x1f6
 644 01e3 0C       		.uleb128 0xc
 645 01e4 08000000 		.4byte	.LVL4
 646 01e8 41010000 		.4byte	0x141
 647 01ec 0C       		.uleb128 0xc
 648 01ed 0C000000 		.4byte	.LVL5
 649 01f1 F0000000 		.4byte	0xf0
 650 01f5 00       		.byte	0
 651 01f6 07       		.uleb128 0x7
 652 01f7 CE020000 		.4byte	.LASF32
 653 01fb 01       		.byte	0x1
 654 01fc 25       		.byte	0x25
 655 01fd 00000000 		.4byte	.LFB0
 656 0201 3C000000 		.4byte	.LFE0-.LFB0
 657 0205 01       		.uleb128 0x1
 658 0206 9C       		.byte	0x9c
 659 0207 8C020000 		.4byte	0x28c
 660 020b 0D       		.uleb128 0xd
 661 020c 9F000000 		.4byte	.LASF39
 662 0210 01       		.byte	0x1
 663 0211 2D       		.byte	0x2d
 664 0212 6B000000 		.4byte	0x6b
 665 0216 00000000 		.4byte	.LLST0
 666 021a 0C       		.uleb128 0xc
 667 021b 06000000 		.4byte	.LVL6
 668 021f CD010000 		.4byte	0x1cd
 669 0223 0E       		.uleb128 0xe
 670 0224 0C000000 		.4byte	.LVL7
 671 0228 57010000 		.4byte	0x157
 672 022c 37020000 		.4byte	0x237
 673 0230 0F       		.uleb128 0xf
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 23


 674 0231 01       		.uleb128 0x1
 675 0232 50       		.byte	0x50
 676 0233 02       		.uleb128 0x2
 677 0234 08       		.byte	0x8
 678 0235 20       		.byte	0x20
 679 0236 00       		.byte	0
 680 0237 0E       		.uleb128 0xe
 681 0238 12000000 		.4byte	.LVL8
 682 023c 06010000 		.4byte	0x106
 683 0240 4A020000 		.4byte	0x24a
 684 0244 0F       		.uleb128 0xf
 685 0245 01       		.uleb128 0x1
 686 0246 50       		.byte	0x50
 687 0247 01       		.uleb128 0x1
 688 0248 30       		.byte	0x30
 689 0249 00       		.byte	0
 690 024a 0E       		.uleb128 0xe
 691 024b 18000000 		.4byte	.LVL9
 692 024f CD000000 		.4byte	0xcd
 693 0253 5D020000 		.4byte	0x25d
 694 0257 0F       		.uleb128 0xf
 695 0258 01       		.uleb128 0x1
 696 0259 50       		.byte	0x50
 697 025a 01       		.uleb128 0x1
 698 025b 3C       		.byte	0x3c
 699 025c 00       		.byte	0
 700 025d 0C       		.uleb128 0xc
 701 025e 1C000000 		.4byte	.LVL10
 702 0262 F0000000 		.4byte	0xf0
 703 0266 0E       		.uleb128 0xe
 704 0267 22000000 		.4byte	.LVL11
 705 026b 92010000 		.4byte	0x192
 706 026f 79020000 		.4byte	0x279
 707 0273 0F       		.uleb128 0xf
 708 0274 01       		.uleb128 0x1
 709 0275 50       		.byte	0x50
 710 0276 01       		.uleb128 0x1
 711 0277 4F       		.byte	0x4f
 712 0278 00       		.byte	0
 713 0279 0C       		.uleb128 0xc
 714 027a 26000000 		.4byte	.LVL12
 715 027e BC020000 		.4byte	0x2bc
 716 0282 0C       		.uleb128 0xc
 717 0283 34000000 		.4byte	.LVL13
 718 0287 C7020000 		.4byte	0x2c7
 719 028b 00       		.byte	0
 720 028c 07       		.uleb128 0x7
 721 028d D1000000 		.4byte	.LASF33
 722 0291 01       		.byte	0x1
 723 0292 B2       		.byte	0xb2
 724 0293 00000000 		.4byte	.LFB2
 725 0297 18000000 		.4byte	.LFE2-.LFB2
 726 029b 01       		.uleb128 0x1
 727 029c 9C       		.byte	0x9c
 728 029d AB020000 		.4byte	0x2ab
 729 02a1 0C       		.uleb128 0xc
 730 02a2 0C000000 		.4byte	.LVL14
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 24


 731 02a6 F6010000 		.4byte	0x1f6
 732 02aa 00       		.byte	0
 733 02ab 10       		.uleb128 0x10
 734 02ac FD020000 		.4byte	.LASF40
 735 02b0 01       		.byte	0x1
 736 02b1 15       		.byte	0x15
 737 02b2 6B000000 		.4byte	0x6b
 738 02b6 05       		.uleb128 0x5
 739 02b7 03       		.byte	0x3
 740 02b8 00000000 		.4byte	BitCounterEnc_initVar
 741 02bc 11       		.uleb128 0x11
 742 02bd 7B020000 		.4byte	.LASF34
 743 02c1 7B020000 		.4byte	.LASF34
 744 02c5 03       		.byte	0x3
 745 02c6 7D       		.byte	0x7d
 746 02c7 11       		.uleb128 0x11
 747 02c8 B8020000 		.4byte	.LASF35
 748 02cc B8020000 		.4byte	.LASF35
 749 02d0 03       		.byte	0x3
 750 02d1 7E       		.byte	0x7e
 751 02d2 00       		.byte	0
 752              		.section	.debug_abbrev,"",%progbits
 753              	.Ldebug_abbrev0:
 754 0000 01       		.uleb128 0x1
 755 0001 11       		.uleb128 0x11
 756 0002 01       		.byte	0x1
 757 0003 25       		.uleb128 0x25
 758 0004 0E       		.uleb128 0xe
 759 0005 13       		.uleb128 0x13
 760 0006 0B       		.uleb128 0xb
 761 0007 03       		.uleb128 0x3
 762 0008 0E       		.uleb128 0xe
 763 0009 1B       		.uleb128 0x1b
 764 000a 0E       		.uleb128 0xe
 765 000b 55       		.uleb128 0x55
 766 000c 17       		.uleb128 0x17
 767 000d 11       		.uleb128 0x11
 768 000e 01       		.uleb128 0x1
 769 000f 10       		.uleb128 0x10
 770 0010 17       		.uleb128 0x17
 771 0011 00       		.byte	0
 772 0012 00       		.byte	0
 773 0013 02       		.uleb128 0x2
 774 0014 24       		.uleb128 0x24
 775 0015 00       		.byte	0
 776 0016 0B       		.uleb128 0xb
 777 0017 0B       		.uleb128 0xb
 778 0018 3E       		.uleb128 0x3e
 779 0019 0B       		.uleb128 0xb
 780 001a 03       		.uleb128 0x3
 781 001b 0E       		.uleb128 0xe
 782 001c 00       		.byte	0
 783 001d 00       		.byte	0
 784 001e 03       		.uleb128 0x3
 785 001f 24       		.uleb128 0x24
 786 0020 00       		.byte	0
 787 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 25


 788 0022 0B       		.uleb128 0xb
 789 0023 3E       		.uleb128 0x3e
 790 0024 0B       		.uleb128 0xb
 791 0025 03       		.uleb128 0x3
 792 0026 08       		.uleb128 0x8
 793 0027 00       		.byte	0
 794 0028 00       		.byte	0
 795 0029 04       		.uleb128 0x4
 796 002a 16       		.uleb128 0x16
 797 002b 00       		.byte	0
 798 002c 03       		.uleb128 0x3
 799 002d 0E       		.uleb128 0xe
 800 002e 3A       		.uleb128 0x3a
 801 002f 0B       		.uleb128 0xb
 802 0030 3B       		.uleb128 0x3b
 803 0031 05       		.uleb128 0x5
 804 0032 49       		.uleb128 0x49
 805 0033 13       		.uleb128 0x13
 806 0034 00       		.byte	0
 807 0035 00       		.byte	0
 808 0036 05       		.uleb128 0x5
 809 0037 35       		.uleb128 0x35
 810 0038 00       		.byte	0
 811 0039 49       		.uleb128 0x49
 812 003a 13       		.uleb128 0x13
 813 003b 00       		.byte	0
 814 003c 00       		.byte	0
 815 003d 06       		.uleb128 0x6
 816 003e 2E       		.uleb128 0x2e
 817 003f 00       		.byte	0
 818 0040 3F       		.uleb128 0x3f
 819 0041 19       		.uleb128 0x19
 820 0042 03       		.uleb128 0x3
 821 0043 0E       		.uleb128 0xe
 822 0044 3A       		.uleb128 0x3a
 823 0045 0B       		.uleb128 0xb
 824 0046 3B       		.uleb128 0x3b
 825 0047 0B       		.uleb128 0xb
 826 0048 27       		.uleb128 0x27
 827 0049 19       		.uleb128 0x19
 828 004a 11       		.uleb128 0x11
 829 004b 01       		.uleb128 0x1
 830 004c 12       		.uleb128 0x12
 831 004d 06       		.uleb128 0x6
 832 004e 40       		.uleb128 0x40
 833 004f 18       		.uleb128 0x18
 834 0050 9742     		.uleb128 0x2117
 835 0052 19       		.uleb128 0x19
 836 0053 00       		.byte	0
 837 0054 00       		.byte	0
 838 0055 07       		.uleb128 0x7
 839 0056 2E       		.uleb128 0x2e
 840 0057 01       		.byte	0x1
 841 0058 3F       		.uleb128 0x3f
 842 0059 19       		.uleb128 0x19
 843 005a 03       		.uleb128 0x3
 844 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 26


 845 005c 3A       		.uleb128 0x3a
 846 005d 0B       		.uleb128 0xb
 847 005e 3B       		.uleb128 0x3b
 848 005f 0B       		.uleb128 0xb
 849 0060 27       		.uleb128 0x27
 850 0061 19       		.uleb128 0x19
 851 0062 11       		.uleb128 0x11
 852 0063 01       		.uleb128 0x1
 853 0064 12       		.uleb128 0x12
 854 0065 06       		.uleb128 0x6
 855 0066 40       		.uleb128 0x40
 856 0067 18       		.uleb128 0x18
 857 0068 9742     		.uleb128 0x2117
 858 006a 19       		.uleb128 0x19
 859 006b 01       		.uleb128 0x1
 860 006c 13       		.uleb128 0x13
 861 006d 00       		.byte	0
 862 006e 00       		.byte	0
 863 006f 08       		.uleb128 0x8
 864 0070 05       		.uleb128 0x5
 865 0071 00       		.byte	0
 866 0072 03       		.uleb128 0x3
 867 0073 0E       		.uleb128 0xe
 868 0074 3A       		.uleb128 0x3a
 869 0075 0B       		.uleb128 0xb
 870 0076 3B       		.uleb128 0x3b
 871 0077 0B       		.uleb128 0xb
 872 0078 49       		.uleb128 0x49
 873 0079 13       		.uleb128 0x13
 874 007a 02       		.uleb128 0x2
 875 007b 18       		.uleb128 0x18
 876 007c 00       		.byte	0
 877 007d 00       		.byte	0
 878 007e 09       		.uleb128 0x9
 879 007f 2E       		.uleb128 0x2e
 880 0080 00       		.byte	0
 881 0081 3F       		.uleb128 0x3f
 882 0082 19       		.uleb128 0x19
 883 0083 03       		.uleb128 0x3
 884 0084 0E       		.uleb128 0xe
 885 0085 3A       		.uleb128 0x3a
 886 0086 0B       		.uleb128 0xb
 887 0087 3B       		.uleb128 0x3b
 888 0088 05       		.uleb128 0x5
 889 0089 27       		.uleb128 0x27
 890 008a 19       		.uleb128 0x19
 891 008b 49       		.uleb128 0x49
 892 008c 13       		.uleb128 0x13
 893 008d 11       		.uleb128 0x11
 894 008e 01       		.uleb128 0x1
 895 008f 12       		.uleb128 0x12
 896 0090 06       		.uleb128 0x6
 897 0091 40       		.uleb128 0x40
 898 0092 18       		.uleb128 0x18
 899 0093 9742     		.uleb128 0x2117
 900 0095 19       		.uleb128 0x19
 901 0096 00       		.byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 27


 902 0097 00       		.byte	0
 903 0098 0A       		.uleb128 0xa
 904 0099 2E       		.uleb128 0x2e
 905 009a 01       		.byte	0x1
 906 009b 3F       		.uleb128 0x3f
 907 009c 19       		.uleb128 0x19
 908 009d 03       		.uleb128 0x3
 909 009e 0E       		.uleb128 0xe
 910 009f 3A       		.uleb128 0x3a
 911 00a0 0B       		.uleb128 0xb
 912 00a1 3B       		.uleb128 0x3b
 913 00a2 05       		.uleb128 0x5
 914 00a3 27       		.uleb128 0x27
 915 00a4 19       		.uleb128 0x19
 916 00a5 11       		.uleb128 0x11
 917 00a6 01       		.uleb128 0x1
 918 00a7 12       		.uleb128 0x12
 919 00a8 06       		.uleb128 0x6
 920 00a9 40       		.uleb128 0x40
 921 00aa 18       		.uleb128 0x18
 922 00ab 9742     		.uleb128 0x2117
 923 00ad 19       		.uleb128 0x19
 924 00ae 01       		.uleb128 0x1
 925 00af 13       		.uleb128 0x13
 926 00b0 00       		.byte	0
 927 00b1 00       		.byte	0
 928 00b2 0B       		.uleb128 0xb
 929 00b3 05       		.uleb128 0x5
 930 00b4 00       		.byte	0
 931 00b5 03       		.uleb128 0x3
 932 00b6 0E       		.uleb128 0xe
 933 00b7 3A       		.uleb128 0x3a
 934 00b8 0B       		.uleb128 0xb
 935 00b9 3B       		.uleb128 0x3b
 936 00ba 05       		.uleb128 0x5
 937 00bb 49       		.uleb128 0x49
 938 00bc 13       		.uleb128 0x13
 939 00bd 02       		.uleb128 0x2
 940 00be 18       		.uleb128 0x18
 941 00bf 00       		.byte	0
 942 00c0 00       		.byte	0
 943 00c1 0C       		.uleb128 0xc
 944 00c2 898201   		.uleb128 0x4109
 945 00c5 00       		.byte	0
 946 00c6 11       		.uleb128 0x11
 947 00c7 01       		.uleb128 0x1
 948 00c8 31       		.uleb128 0x31
 949 00c9 13       		.uleb128 0x13
 950 00ca 00       		.byte	0
 951 00cb 00       		.byte	0
 952 00cc 0D       		.uleb128 0xd
 953 00cd 34       		.uleb128 0x34
 954 00ce 00       		.byte	0
 955 00cf 03       		.uleb128 0x3
 956 00d0 0E       		.uleb128 0xe
 957 00d1 3A       		.uleb128 0x3a
 958 00d2 0B       		.uleb128 0xb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 28


 959 00d3 3B       		.uleb128 0x3b
 960 00d4 0B       		.uleb128 0xb
 961 00d5 49       		.uleb128 0x49
 962 00d6 13       		.uleb128 0x13
 963 00d7 02       		.uleb128 0x2
 964 00d8 17       		.uleb128 0x17
 965 00d9 00       		.byte	0
 966 00da 00       		.byte	0
 967 00db 0E       		.uleb128 0xe
 968 00dc 898201   		.uleb128 0x4109
 969 00df 01       		.byte	0x1
 970 00e0 11       		.uleb128 0x11
 971 00e1 01       		.uleb128 0x1
 972 00e2 31       		.uleb128 0x31
 973 00e3 13       		.uleb128 0x13
 974 00e4 01       		.uleb128 0x1
 975 00e5 13       		.uleb128 0x13
 976 00e6 00       		.byte	0
 977 00e7 00       		.byte	0
 978 00e8 0F       		.uleb128 0xf
 979 00e9 8A8201   		.uleb128 0x410a
 980 00ec 00       		.byte	0
 981 00ed 02       		.uleb128 0x2
 982 00ee 18       		.uleb128 0x18
 983 00ef 9142     		.uleb128 0x2111
 984 00f1 18       		.uleb128 0x18
 985 00f2 00       		.byte	0
 986 00f3 00       		.byte	0
 987 00f4 10       		.uleb128 0x10
 988 00f5 34       		.uleb128 0x34
 989 00f6 00       		.byte	0
 990 00f7 03       		.uleb128 0x3
 991 00f8 0E       		.uleb128 0xe
 992 00f9 3A       		.uleb128 0x3a
 993 00fa 0B       		.uleb128 0xb
 994 00fb 3B       		.uleb128 0x3b
 995 00fc 0B       		.uleb128 0xb
 996 00fd 49       		.uleb128 0x49
 997 00fe 13       		.uleb128 0x13
 998 00ff 3F       		.uleb128 0x3f
 999 0100 19       		.uleb128 0x19
 1000 0101 02       		.uleb128 0x2
 1001 0102 18       		.uleb128 0x18
 1002 0103 00       		.byte	0
 1003 0104 00       		.byte	0
 1004 0105 11       		.uleb128 0x11
 1005 0106 2E       		.uleb128 0x2e
 1006 0107 00       		.byte	0
 1007 0108 3F       		.uleb128 0x3f
 1008 0109 19       		.uleb128 0x19
 1009 010a 3C       		.uleb128 0x3c
 1010 010b 19       		.uleb128 0x19
 1011 010c 6E       		.uleb128 0x6e
 1012 010d 0E       		.uleb128 0xe
 1013 010e 03       		.uleb128 0x3
 1014 010f 0E       		.uleb128 0xe
 1015 0110 3A       		.uleb128 0x3a
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 29


 1016 0111 0B       		.uleb128 0xb
 1017 0112 3B       		.uleb128 0x3b
 1018 0113 0B       		.uleb128 0xb
 1019 0114 00       		.byte	0
 1020 0115 00       		.byte	0
 1021 0116 00       		.byte	0
 1022              		.section	.debug_loc,"",%progbits
 1023              	.Ldebug_loc0:
 1024              	.LLST0:
 1025 0000 26000000 		.4byte	.LVL12
 1026 0004 33000000 		.4byte	.LVL13-1
 1027 0008 0100     		.2byte	0x1
 1028 000a 50       		.byte	0x50
 1029 000b 00000000 		.4byte	0
 1030 000f 00000000 		.4byte	0
 1031              		.section	.debug_aranges,"",%progbits
 1032 0000 84000000 		.4byte	0x84
 1033 0004 0200     		.2byte	0x2
 1034 0006 00000000 		.4byte	.Ldebug_info0
 1035 000a 04       		.byte	0x4
 1036 000b 00       		.byte	0
 1037 000c 0000     		.2byte	0
 1038 000e 0000     		.2byte	0
 1039 0010 00000000 		.4byte	.LFB1
 1040 0014 02000000 		.4byte	.LFE1-.LFB1
 1041 0018 00000000 		.4byte	.LFB3
 1042 001c 02000000 		.4byte	.LFE3-.LFB3
 1043 0020 00000000 		.4byte	.LFB4
 1044 0024 0C000000 		.4byte	.LFE4-.LFB4
 1045 0028 00000000 		.4byte	.LFB5
 1046 002c 0C000000 		.4byte	.LFE5-.LFB5
 1047 0030 00000000 		.4byte	.LFB6
 1048 0034 0C000000 		.4byte	.LFE6-.LFB6
 1049 0038 00000000 		.4byte	.LFB7
 1050 003c 14000000 		.4byte	.LFE7-.LFB7
 1051 0040 00000000 		.4byte	.LFB8
 1052 0044 0C000000 		.4byte	.LFE8-.LFB8
 1053 0048 00000000 		.4byte	.LFB9
 1054 004c 0C000000 		.4byte	.LFE9-.LFB9
 1055 0050 00000000 		.4byte	.LFB10
 1056 0054 0C000000 		.4byte	.LFE10-.LFB10
 1057 0058 00000000 		.4byte	.LFB11
 1058 005c 0C000000 		.4byte	.LFE11-.LFB11
 1059 0060 00000000 		.4byte	.LFB12
 1060 0064 0C000000 		.4byte	.LFE12-.LFB12
 1061 0068 00000000 		.4byte	.LFB13
 1062 006c 14000000 		.4byte	.LFE13-.LFB13
 1063 0070 00000000 		.4byte	.LFB0
 1064 0074 3C000000 		.4byte	.LFE0-.LFB0
 1065 0078 00000000 		.4byte	.LFB2
 1066 007c 18000000 		.4byte	.LFE2-.LFB2
 1067 0080 00000000 		.4byte	0
 1068 0084 00000000 		.4byte	0
 1069              		.section	.debug_ranges,"",%progbits
 1070              	.Ldebug_ranges0:
 1071 0000 00000000 		.4byte	.LFB1
 1072 0004 02000000 		.4byte	.LFE1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 30


 1073 0008 00000000 		.4byte	.LFB3
 1074 000c 02000000 		.4byte	.LFE3
 1075 0010 00000000 		.4byte	.LFB4
 1076 0014 0C000000 		.4byte	.LFE4
 1077 0018 00000000 		.4byte	.LFB5
 1078 001c 0C000000 		.4byte	.LFE5
 1079 0020 00000000 		.4byte	.LFB6
 1080 0024 0C000000 		.4byte	.LFE6
 1081 0028 00000000 		.4byte	.LFB7
 1082 002c 14000000 		.4byte	.LFE7
 1083 0030 00000000 		.4byte	.LFB8
 1084 0034 0C000000 		.4byte	.LFE8
 1085 0038 00000000 		.4byte	.LFB9
 1086 003c 0C000000 		.4byte	.LFE9
 1087 0040 00000000 		.4byte	.LFB10
 1088 0044 0C000000 		.4byte	.LFE10
 1089 0048 00000000 		.4byte	.LFB11
 1090 004c 0C000000 		.4byte	.LFE11
 1091 0050 00000000 		.4byte	.LFB12
 1092 0054 0C000000 		.4byte	.LFE12
 1093 0058 00000000 		.4byte	.LFB13
 1094 005c 14000000 		.4byte	.LFE13
 1095 0060 00000000 		.4byte	.LFB0
 1096 0064 3C000000 		.4byte	.LFE0
 1097 0068 00000000 		.4byte	.LFB2
 1098 006c 18000000 		.4byte	.LFE2
 1099 0070 00000000 		.4byte	0
 1100 0074 00000000 		.4byte	0
 1101              		.section	.debug_line,"",%progbits
 1102              	.Ldebug_line0:
 1103 0000 5D010000 		.section	.debug_str,"MS",%progbits,1
 1103      02005500 
 1103      00000201 
 1103      FB0E0D00 
 1103      01010101 
 1104              	.LASF37:
 1105 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\BitCounterEnc.c\000"
 1105      72617465 
 1105      645F536F 
 1105      75726365 
 1105      5C50536F 
 1106              	.LASF25:
 1107 0027 42697443 		.ascii	"BitCounterEnc_WritePeriod\000"
 1107      6F756E74 
 1107      6572456E 
 1107      635F5772 
 1107      69746550 
 1108              	.LASF28:
 1109 0041 42697443 		.ascii	"BitCounterEnc_WriteCompare\000"
 1109      6F756E74 
 1109      6572456E 
 1109      635F5772 
 1109      69746543 
 1110              	.LASF9:
 1111 005c 666C6F61 		.ascii	"float\000"
 1111      7400
 1112              	.LASF23:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 31


 1113 0062 42697443 		.ascii	"BitCounterEnc_ReadCounter\000"
 1113      6F756E74 
 1113      6572456E 
 1113      635F5265 
 1113      6164436F 
 1114              	.LASF26:
 1115 007c 70657269 		.ascii	"period\000"
 1115      6F6400
 1116              	.LASF4:
 1117 0083 6C6F6E67 		.ascii	"long int\000"
 1117      20696E74 
 1117      00
 1118              	.LASF3:
 1119 008c 73686F72 		.ascii	"short unsigned int\000"
 1119      7420756E 
 1119      7369676E 
 1119      65642069 
 1119      6E7400
 1120              	.LASF39:
 1121 009f 42697443 		.ascii	"BitCounterEnc_interruptState\000"
 1121      6F756E74 
 1121      6572456E 
 1121      635F696E 
 1121      74657272 
 1122              	.LASF16:
 1123 00bc 42697443 		.ascii	"BitCounterEnc_Enable\000"
 1123      6F756E74 
 1123      6572456E 
 1123      635F456E 
 1123      61626C65 
 1124              	.LASF33:
 1125 00d1 42697443 		.ascii	"BitCounterEnc_Start\000"
 1125      6F756E74 
 1125      6572456E 
 1125      635F5374 
 1125      61727400 
 1126              	.LASF31:
 1127 00e5 42697443 		.ascii	"BitCounterEnc_ClearFIFO\000"
 1127      6F756E74 
 1127      6572456E 
 1127      635F436C 
 1127      65617246 
 1128              	.LASF21:
 1129 00fd 636F756E 		.ascii	"counter\000"
 1129      74657200 
 1130              	.LASF7:
 1131 0105 6C6F6E67 		.ascii	"long long unsigned int\000"
 1131      206C6F6E 
 1131      6720756E 
 1131      7369676E 
 1131      65642069 
 1132              	.LASF38:
 1133 011c 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\time_src\\b"
 1133      73657273 
 1133      5C652E69 
 1133      76616E6F 
 1133      765C446F 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 32


 1134 0149 72616E63 		.ascii	"ranch\\Manchester encoder-decoder.cydsn\000"
 1134      685C4D61 
 1134      6E636865 
 1134      73746572 
 1134      20656E63 
 1135              	.LASF1:
 1136 0170 756E7369 		.ascii	"unsigned char\000"
 1136      676E6564 
 1136      20636861 
 1136      7200
 1137              	.LASF36:
 1138 017e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1138      43313120 
 1138      352E342E 
 1138      31203230 
 1138      31363036 
 1139 01b1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1139      20726576 
 1139      6973696F 
 1139      6E203233 
 1139      37373135 
 1140 01e4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1140      66756E63 
 1140      74696F6E 
 1140      2D736563 
 1140      74696F6E 
 1141              	.LASF13:
 1142 020c 72656738 		.ascii	"reg8\000"
 1142      00
 1143              	.LASF22:
 1144 0211 42697443 		.ascii	"BitCounterEnc_ReadStatusRegister\000"
 1144      6F756E74 
 1144      6572456E 
 1144      635F5265 
 1144      61645374 
 1145              	.LASF5:
 1146 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 1146      20756E73 
 1146      69676E65 
 1146      6420696E 
 1146      7400
 1147              	.LASF12:
 1148 0244 75696E74 		.ascii	"uint8\000"
 1148      3800
 1149              	.LASF20:
 1150 024a 696E7465 		.ascii	"interruptsMask\000"
 1150      72727570 
 1150      74734D61 
 1150      736B00
 1151              	.LASF19:
 1152 0259 42697443 		.ascii	"BitCounterEnc_WriteCounter\000"
 1152      6F756E74 
 1152      6572456E 
 1152      635F5772 
 1152      69746543 
 1153              	.LASF10:
 1154 0274 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 33


 1154      6C6500
 1155              	.LASF34:
 1156 027b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1156      74657243 
 1156      72697469 
 1156      63616C53 
 1156      65637469 
 1157              	.LASF8:
 1158 0292 756E7369 		.ascii	"unsigned int\000"
 1158      676E6564 
 1158      20696E74 
 1158      00
 1159              	.LASF27:
 1160 029f 42697443 		.ascii	"BitCounterEnc_ReadPeriod\000"
 1160      6F756E74 
 1160      6572456E 
 1160      635F5265 
 1160      61645065 
 1161              	.LASF35:
 1162 02b8 43794578 		.ascii	"CyExitCriticalSection\000"
 1162      69744372 
 1162      69746963 
 1162      616C5365 
 1162      6374696F 
 1163              	.LASF32:
 1164 02ce 42697443 		.ascii	"BitCounterEnc_Init\000"
 1164      6F756E74 
 1164      6572456E 
 1164      635F496E 
 1164      697400
 1165              	.LASF17:
 1166 02e1 42697443 		.ascii	"BitCounterEnc_Stop\000"
 1166      6F756E74 
 1166      6572456E 
 1166      635F5374 
 1166      6F7000
 1167              	.LASF15:
 1168 02f4 73697A65 		.ascii	"sizetype\000"
 1168      74797065 
 1168      00
 1169              	.LASF40:
 1170 02fd 42697443 		.ascii	"BitCounterEnc_initVar\000"
 1170      6F756E74 
 1170      6572456E 
 1170      635F696E 
 1170      69745661 
 1171              	.LASF6:
 1172 0313 6C6F6E67 		.ascii	"long long int\000"
 1172      206C6F6E 
 1172      6720696E 
 1172      7400
 1173              	.LASF11:
 1174 0321 63686172 		.ascii	"char\000"
 1174      00
 1175              	.LASF30:
 1176 0326 42697443 		.ascii	"BitCounterEnc_ReadCompare\000"
 1176      6F756E74 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cczPw7Lc.s 			page 34


 1176      6572456E 
 1176      635F5265 
 1176      6164436F 
 1177              	.LASF2:
 1178 0340 73686F72 		.ascii	"short int\000"
 1178      7420696E 
 1178      7400
 1179              	.LASF24:
 1180 034a 42697443 		.ascii	"BitCounterEnc_ReadCapture\000"
 1180      6F756E74 
 1180      6572456E 
 1180      635F5265 
 1180      61644361 
 1181              	.LASF18:
 1182 0364 42697443 		.ascii	"BitCounterEnc_SetInterruptMode\000"
 1182      6F756E74 
 1182      6572456E 
 1182      635F5365 
 1182      74496E74 
 1183              	.LASF14:
 1184 0383 6C6F6E67 		.ascii	"long double\000"
 1184      20646F75 
 1184      626C6500 
 1185              	.LASF0:
 1186 038f 7369676E 		.ascii	"signed char\000"
 1186      65642063 
 1186      68617200 
 1187              	.LASF29:
 1188 039b 636F6D70 		.ascii	"compare\000"
 1188      61726500 
 1189              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
