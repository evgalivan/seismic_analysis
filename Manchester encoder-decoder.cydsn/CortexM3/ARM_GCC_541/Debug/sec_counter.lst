ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sec_counter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.sec_counter_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	sec_counter_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	sec_counter_Enable, %function
  25              	sec_counter_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\sec_counter.c"
   1:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/sec_counter.c **** * File Name: sec_counter.c  
   3:Generated_Source\PSoC5/sec_counter.c **** * Version 3.0
   4:Generated_Source\PSoC5/sec_counter.c **** *
   5:Generated_Source\PSoC5/sec_counter.c **** *  Description:
   6:Generated_Source\PSoC5/sec_counter.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/sec_counter.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/sec_counter.c **** *
   9:Generated_Source\PSoC5/sec_counter.c **** *   Note:
  10:Generated_Source\PSoC5/sec_counter.c **** *     None
  11:Generated_Source\PSoC5/sec_counter.c **** *
  12:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
  13:Generated_Source\PSoC5/sec_counter.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/sec_counter.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/sec_counter.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/sec_counter.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/sec_counter.c **** 
  19:Generated_Source\PSoC5/sec_counter.c **** #include "sec_counter.h"
  20:Generated_Source\PSoC5/sec_counter.c **** 
  21:Generated_Source\PSoC5/sec_counter.c **** uint8 sec_counter_initVar = 0u;
  22:Generated_Source\PSoC5/sec_counter.c **** 
  23:Generated_Source\PSoC5/sec_counter.c **** 
  24:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_Init
  26:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
  27:Generated_Source\PSoC5/sec_counter.c **** * Summary:
  28:Generated_Source\PSoC5/sec_counter.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/sec_counter.c **** * 
  30:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 2


  31:Generated_Source\PSoC5/sec_counter.c **** *  void  
  32:Generated_Source\PSoC5/sec_counter.c **** *
  33:Generated_Source\PSoC5/sec_counter.c **** * Return: 
  34:Generated_Source\PSoC5/sec_counter.c **** *  void
  35:Generated_Source\PSoC5/sec_counter.c **** *
  36:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_Init(void) 
  38:Generated_Source\PSoC5/sec_counter.c **** {
  39:Generated_Source\PSoC5/sec_counter.c ****         #if (!sec_counter_UsingFixedFunction && !sec_counter_ControlRegRemoved)
  40:Generated_Source\PSoC5/sec_counter.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!sec_counter_UsingFixedFunction && !sec_counter_ControlRegRemoved) */
  42:Generated_Source\PSoC5/sec_counter.c ****         
  43:Generated_Source\PSoC5/sec_counter.c ****         #if(!sec_counter_UsingFixedFunction) 
  44:Generated_Source\PSoC5/sec_counter.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/sec_counter.c ****             uint8 sec_counter_interruptState;
  46:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!sec_counter_UsingFixedFunction) */
  47:Generated_Source\PSoC5/sec_counter.c ****         
  48:Generated_Source\PSoC5/sec_counter.c ****         #if (sec_counter_UsingFixedFunction)
  49:Generated_Source\PSoC5/sec_counter.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_CONTROL &= sec_counter_CTRL_ENABLE;
  51:Generated_Source\PSoC5/sec_counter.c ****             
  52:Generated_Source\PSoC5/sec_counter.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/sec_counter.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/sec_counter.c ****                 sec_counter_CONTROL2 &= ((uint8)(~sec_counter_CTRL_MODE_MASK));
  55:Generated_Source\PSoC5/sec_counter.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/sec_counter.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/sec_counter.c ****                 sec_counter_CONTROL3 &= ((uint8)(~sec_counter_CTRL_MODE_MASK));                
  58:Generated_Source\PSoC5/sec_counter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/sec_counter.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/sec_counter.c ****             #if (sec_counter_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/sec_counter.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/sec_counter.c ****                 sec_counter_CONTROL |= sec_counter_ONESHOT;
  63:Generated_Source\PSoC5/sec_counter.c ****             #endif /* (sec_counter_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/sec_counter.c ****             
  65:Generated_Source\PSoC5/sec_counter.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_CONTROL2 |= sec_counter_CTRL2_IRQ_SEL;
  67:Generated_Source\PSoC5/sec_counter.c ****             
  68:Generated_Source\PSoC5/sec_counter.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_RT1 &= ((uint8)(~sec_counter_RT1_MASK));
  70:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_RT1 |= sec_counter_SYNC;     
  71:Generated_Source\PSoC5/sec_counter.c ****                     
  72:Generated_Source\PSoC5/sec_counter.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_RT1 &= ((uint8)(~sec_counter_SYNCDSI_MASK));
  74:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_RT1 |= sec_counter_SYNCDSI_EN;
  75:Generated_Source\PSoC5/sec_counter.c **** 
  76:Generated_Source\PSoC5/sec_counter.c ****         #else
  77:Generated_Source\PSoC5/sec_counter.c ****             #if(!sec_counter_ControlRegRemoved)
  78:Generated_Source\PSoC5/sec_counter.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/sec_counter.c ****             ctrl = sec_counter_CONTROL & ((uint8)(~sec_counter_CTRL_CMPMODE_MASK));
  80:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_CONTROL = ctrl | sec_counter_DEFAULT_COMPARE_MODE;
  81:Generated_Source\PSoC5/sec_counter.c ****             
  82:Generated_Source\PSoC5/sec_counter.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/sec_counter.c ****             ctrl = sec_counter_CONTROL & ((uint8)(~sec_counter_CTRL_CAPMODE_MASK));
  84:Generated_Source\PSoC5/sec_counter.c ****             
  85:Generated_Source\PSoC5/sec_counter.c ****             #if( 0 != sec_counter_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/sec_counter.c ****                 sec_counter_CONTROL = ctrl | sec_counter_DEFAULT_CAPTURE_MODE;
  87:Generated_Source\PSoC5/sec_counter.c ****             #else
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 3


  88:Generated_Source\PSoC5/sec_counter.c ****                 sec_counter_CONTROL = ctrl;
  89:Generated_Source\PSoC5/sec_counter.c ****             #endif /* 0 != sec_counter_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/sec_counter.c ****             
  91:Generated_Source\PSoC5/sec_counter.c ****             #endif /* (!sec_counter_ControlRegRemoved) */
  92:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (sec_counter_UsingFixedFunction) */
  93:Generated_Source\PSoC5/sec_counter.c ****         
  94:Generated_Source\PSoC5/sec_counter.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/sec_counter.c ****         #if (!sec_counter_UsingFixedFunction)
  96:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_ClearFIFO();
  97:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!sec_counter_UsingFixedFunction) */
  98:Generated_Source\PSoC5/sec_counter.c ****         
  99:Generated_Source\PSoC5/sec_counter.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_WritePeriod(sec_counter_INIT_PERIOD_VALUE);
 101:Generated_Source\PSoC5/sec_counter.c ****         #if (!(sec_counter_UsingFixedFunction && (CY_PSOC5A)))
 102:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_WriteCounter(sec_counter_INIT_COUNTER_VALUE);
 103:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!(sec_counter_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_SetInterruptMode(sec_counter_INIT_INTERRUPTS_MASK);
 105:Generated_Source\PSoC5/sec_counter.c ****         
 106:Generated_Source\PSoC5/sec_counter.c ****         #if (!sec_counter_UsingFixedFunction)
 107:Generated_Source\PSoC5/sec_counter.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/sec_counter.c ****             (void)sec_counter_ReadStatusRegister();
 109:Generated_Source\PSoC5/sec_counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_WriteCompare(sec_counter_INIT_COMPARE_VALUE);
 111:Generated_Source\PSoC5/sec_counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/sec_counter.c ****             
 113:Generated_Source\PSoC5/sec_counter.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/sec_counter.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_interruptState = CyEnterCriticalSection();
 116:Generated_Source\PSoC5/sec_counter.c ****             
 117:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_STATUS_AUX_CTRL |= sec_counter_STATUS_ACTL_INT_EN_MASK;
 118:Generated_Source\PSoC5/sec_counter.c ****             
 119:Generated_Source\PSoC5/sec_counter.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/sec_counter.c ****             CyExitCriticalSection(sec_counter_interruptState);
 121:Generated_Source\PSoC5/sec_counter.c ****             
 122:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!sec_counter_UsingFixedFunction) */
 123:Generated_Source\PSoC5/sec_counter.c **** }
 124:Generated_Source\PSoC5/sec_counter.c **** 
 125:Generated_Source\PSoC5/sec_counter.c **** 
 126:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_Enable
 128:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 129:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 130:Generated_Source\PSoC5/sec_counter.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/sec_counter.c **** * 
 132:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 133:Generated_Source\PSoC5/sec_counter.c **** *  void  
 134:Generated_Source\PSoC5/sec_counter.c **** *
 135:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 136:Generated_Source\PSoC5/sec_counter.c **** *  void
 137:Generated_Source\PSoC5/sec_counter.c **** *
 138:Generated_Source\PSoC5/sec_counter.c **** * Side Effects: 
 139:Generated_Source\PSoC5/sec_counter.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/sec_counter.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/sec_counter.c **** *
 142:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_Enable(void) 
 144:Generated_Source\PSoC5/sec_counter.c **** {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 145:Generated_Source\PSoC5/sec_counter.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/sec_counter.c ****     #if (sec_counter_UsingFixedFunction)
 147:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_GLOBAL_ENABLE |= sec_counter_BLOCK_EN_MASK;
 148:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_GLOBAL_STBY_ENABLE |= sec_counter_BLOCK_STBY_EN_MASK;
 149:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/sec_counter.c ****         
 151:Generated_Source\PSoC5/sec_counter.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/sec_counter.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/sec_counter.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/sec_counter.c ****     #if(!sec_counter_ControlRegRemoved || sec_counter_UsingFixedFunction)
 155:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_CONTROL |= sec_counter_CTRL_ENABLE;                
  33              		.loc 1 155 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 71640040 		.word	1073767537
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	sec_counter_Enable, .-sec_counter_Enable
  46              		.section	.text.sec_counter_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	sec_counter_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	sec_counter_Stop, %function
  52              	sec_counter_Stop:
  53              	.LFB3:
 156:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (!sec_counter_ControlRegRemoved || sec_counter_UsingFixedFunction) */
 157:Generated_Source\PSoC5/sec_counter.c ****     
 158:Generated_Source\PSoC5/sec_counter.c **** }
 159:Generated_Source\PSoC5/sec_counter.c **** 
 160:Generated_Source\PSoC5/sec_counter.c **** 
 161:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_Start
 163:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 164:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 165:Generated_Source\PSoC5/sec_counter.c **** *  Enables the counter for operation 
 166:Generated_Source\PSoC5/sec_counter.c **** *
 167:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 168:Generated_Source\PSoC5/sec_counter.c **** *  void  
 169:Generated_Source\PSoC5/sec_counter.c **** *
 170:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 171:Generated_Source\PSoC5/sec_counter.c **** *  void
 172:Generated_Source\PSoC5/sec_counter.c **** *
 173:Generated_Source\PSoC5/sec_counter.c **** * Global variables:
 174:Generated_Source\PSoC5/sec_counter.c **** *  sec_counter_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/sec_counter.c **** *   first time. Is used to ensure that initialization happens only once.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 5


 176:Generated_Source\PSoC5/sec_counter.c **** *
 177:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_Start(void) 
 179:Generated_Source\PSoC5/sec_counter.c **** {
 180:Generated_Source\PSoC5/sec_counter.c ****     if(sec_counter_initVar == 0u)
 181:Generated_Source\PSoC5/sec_counter.c ****     {
 182:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_Init();
 183:Generated_Source\PSoC5/sec_counter.c ****         
 184:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_initVar = 1u; /* Clear this bit for Initialization */        
 185:Generated_Source\PSoC5/sec_counter.c ****     }
 186:Generated_Source\PSoC5/sec_counter.c ****     
 187:Generated_Source\PSoC5/sec_counter.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_Enable();        
 189:Generated_Source\PSoC5/sec_counter.c **** }
 190:Generated_Source\PSoC5/sec_counter.c **** 
 191:Generated_Source\PSoC5/sec_counter.c **** 
 192:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_Stop
 194:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 195:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 196:Generated_Source\PSoC5/sec_counter.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/sec_counter.c **** *
 198:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 199:Generated_Source\PSoC5/sec_counter.c **** *  void  
 200:Generated_Source\PSoC5/sec_counter.c **** *
 201:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 202:Generated_Source\PSoC5/sec_counter.c **** *  void
 203:Generated_Source\PSoC5/sec_counter.c **** *
 204:Generated_Source\PSoC5/sec_counter.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/sec_counter.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/sec_counter.c **** *
 207:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_Stop(void) 
 209:Generated_Source\PSoC5/sec_counter.c **** {
  54              		.loc 1 209 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 210:Generated_Source\PSoC5/sec_counter.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/sec_counter.c ****     #if(!sec_counter_ControlRegRemoved || sec_counter_UsingFixedFunction)
 212:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_CONTROL &= ((uint8)(~sec_counter_CTRL_ENABLE));        
  59              		.loc 1 212 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 71640040 		.word	1073767537
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	sec_counter_Stop, .-sec_counter_Stop
  72              		.section	.text.sec_counter_SetInterruptMode,"ax",%progbits
  73              		.align	2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 6


  74              		.global	sec_counter_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	sec_counter_SetInterruptMode, %function
  78              	sec_counter_SetInterruptMode:
  79              	.LFB4:
 213:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (!sec_counter_ControlRegRemoved || sec_counter_UsingFixedFunction) */
 214:Generated_Source\PSoC5/sec_counter.c ****     
 215:Generated_Source\PSoC5/sec_counter.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/sec_counter.c ****     #if (sec_counter_UsingFixedFunction)
 217:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_GLOBAL_ENABLE &= ((uint8)(~sec_counter_BLOCK_EN_MASK));
 218:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_GLOBAL_STBY_ENABLE &= ((uint8)(~sec_counter_BLOCK_STBY_EN_MASK));
 219:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 220:Generated_Source\PSoC5/sec_counter.c **** }
 221:Generated_Source\PSoC5/sec_counter.c **** 
 222:Generated_Source\PSoC5/sec_counter.c **** 
 223:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_SetInterruptMode
 225:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 226:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 227:Generated_Source\PSoC5/sec_counter.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:Generated_Source\PSoC5/sec_counter.c **** *
 229:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 230:Generated_Source\PSoC5/sec_counter.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/sec_counter.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/sec_counter.c **** *
 233:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 234:Generated_Source\PSoC5/sec_counter.c **** *  void
 235:Generated_Source\PSoC5/sec_counter.c **** *
 236:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/sec_counter.c **** {
  80              		.loc 1 238 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 239:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_STATUS_MASK = interruptsMask;
  86              		.loc 1 239 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 85640040 		.word	1073767557
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	sec_counter_SetInterruptMode, .-sec_counter_SetInterruptMode
  97              		.section	.text.sec_counter_ReadStatusRegister,"ax",%progbits
  98              		.align	2
  99              		.global	sec_counter_ReadStatusRegister
 100              		.thumb
 101              		.thumb_func
 102              		.type	sec_counter_ReadStatusRegister, %function
 103              	sec_counter_ReadStatusRegister:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 7


 104              	.LFB5:
 240:Generated_Source\PSoC5/sec_counter.c **** }
 241:Generated_Source\PSoC5/sec_counter.c **** 
 242:Generated_Source\PSoC5/sec_counter.c **** 
 243:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ReadStatusRegister
 245:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 246:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 247:Generated_Source\PSoC5/sec_counter.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/sec_counter.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/sec_counter.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/sec_counter.c **** *
 251:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 252:Generated_Source\PSoC5/sec_counter.c **** *  void
 253:Generated_Source\PSoC5/sec_counter.c **** *
 254:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 255:Generated_Source\PSoC5/sec_counter.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/sec_counter.c **** *
 257:Generated_Source\PSoC5/sec_counter.c **** * Side Effects:
 258:Generated_Source\PSoC5/sec_counter.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/sec_counter.c **** *
 260:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/sec_counter.c **** uint8   sec_counter_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/sec_counter.c **** {
 105              		.loc 1 262 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 263:Generated_Source\PSoC5/sec_counter.c ****     return sec_counter_STATUS;
 110              		.loc 1 263 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:Generated_Source\PSoC5/sec_counter.c **** }
 113              		.loc 1 264 0
 114 0004 7047     		bx	lr
 115              	.L12:
 116 0006 00BF     		.align	2
 117              	.L11:
 118 0008 65640040 		.word	1073767525
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	sec_counter_ReadStatusRegister, .-sec_counter_ReadStatusRegister
 122              		.section	.text.sec_counter_ReadControlRegister,"ax",%progbits
 123              		.align	2
 124              		.global	sec_counter_ReadControlRegister
 125              		.thumb
 126              		.thumb_func
 127              		.type	sec_counter_ReadControlRegister, %function
 128              	sec_counter_ReadControlRegister:
 129              	.LFB6:
 265:Generated_Source\PSoC5/sec_counter.c **** 
 266:Generated_Source\PSoC5/sec_counter.c **** 
 267:Generated_Source\PSoC5/sec_counter.c **** #if(!sec_counter_ControlRegRemoved)
 268:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ReadControlRegister
 270:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 8


 271:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 272:Generated_Source\PSoC5/sec_counter.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/sec_counter.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/sec_counter.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/sec_counter.c **** *
 276:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 277:Generated_Source\PSoC5/sec_counter.c **** *  void
 278:Generated_Source\PSoC5/sec_counter.c **** *
 279:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 280:Generated_Source\PSoC5/sec_counter.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/sec_counter.c **** *
 282:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/sec_counter.c **** uint8   sec_counter_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/sec_counter.c **** {
 130              		.loc 1 284 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 285:Generated_Source\PSoC5/sec_counter.c ****     return sec_counter_CONTROL;
 135              		.loc 1 285 0
 136 0000 014B     		ldr	r3, .L14
 137 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:Generated_Source\PSoC5/sec_counter.c **** }
 138              		.loc 1 286 0
 139 0004 7047     		bx	lr
 140              	.L15:
 141 0006 00BF     		.align	2
 142              	.L14:
 143 0008 71640040 		.word	1073767537
 144              		.cfi_endproc
 145              	.LFE6:
 146              		.size	sec_counter_ReadControlRegister, .-sec_counter_ReadControlRegister
 147              		.section	.text.sec_counter_WriteControlRegister,"ax",%progbits
 148              		.align	2
 149              		.global	sec_counter_WriteControlRegister
 150              		.thumb
 151              		.thumb_func
 152              		.type	sec_counter_WriteControlRegister, %function
 153              	sec_counter_WriteControlRegister:
 154              	.LFB7:
 287:Generated_Source\PSoC5/sec_counter.c **** 
 288:Generated_Source\PSoC5/sec_counter.c **** 
 289:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_WriteControlRegister
 291:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 292:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 293:Generated_Source\PSoC5/sec_counter.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/sec_counter.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/sec_counter.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/sec_counter.c **** *
 297:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 298:Generated_Source\PSoC5/sec_counter.c **** *  void
 299:Generated_Source\PSoC5/sec_counter.c **** *
 300:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 301:Generated_Source\PSoC5/sec_counter.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/sec_counter.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 9


 303:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/sec_counter.c **** void    sec_counter_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/sec_counter.c **** {
 155              		.loc 1 305 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL1:
 306:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_CONTROL = control;
 161              		.loc 1 306 0
 162 0000 014B     		ldr	r3, .L17
 163 0002 1870     		strb	r0, [r3]
 164 0004 7047     		bx	lr
 165              	.L18:
 166 0006 00BF     		.align	2
 167              	.L17:
 168 0008 71640040 		.word	1073767537
 169              		.cfi_endproc
 170              	.LFE7:
 171              		.size	sec_counter_WriteControlRegister, .-sec_counter_WriteControlRegister
 172              		.section	.text.sec_counter_WriteCounter,"ax",%progbits
 173              		.align	2
 174              		.global	sec_counter_WriteCounter
 175              		.thumb
 176              		.thumb_func
 177              		.type	sec_counter_WriteCounter, %function
 178              	sec_counter_WriteCounter:
 179              	.LFB8:
 307:Generated_Source\PSoC5/sec_counter.c **** }
 308:Generated_Source\PSoC5/sec_counter.c **** 
 309:Generated_Source\PSoC5/sec_counter.c **** #endif  /* (!sec_counter_ControlRegRemoved) */
 310:Generated_Source\PSoC5/sec_counter.c **** 
 311:Generated_Source\PSoC5/sec_counter.c **** 
 312:Generated_Source\PSoC5/sec_counter.c **** #if (!(sec_counter_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_WriteCounter
 315:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 316:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 317:Generated_Source\PSoC5/sec_counter.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/sec_counter.c **** *
 319:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 320:Generated_Source\PSoC5/sec_counter.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/sec_counter.c **** *
 322:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 323:Generated_Source\PSoC5/sec_counter.c **** *  void 
 324:Generated_Source\PSoC5/sec_counter.c **** *
 325:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_WriteCounter(uint32 counter) \
 327:Generated_Source\PSoC5/sec_counter.c ****                                    
 328:Generated_Source\PSoC5/sec_counter.c **** {
 180              		.loc 1 328 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL2:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 10


 329:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 330:Generated_Source\PSoC5/sec_counter.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/sec_counter.c ****         CYASSERT (0u == (sec_counter_GLOBAL_ENABLE & sec_counter_BLOCK_EN_MASK));
 332:Generated_Source\PSoC5/sec_counter.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_GLOBAL_ENABLE |= sec_counter_BLOCK_EN_MASK;
 334:Generated_Source\PSoC5/sec_counter.c ****         CY_SET_REG16(sec_counter_COUNTER_LSB_PTR, (uint16)counter);
 335:Generated_Source\PSoC5/sec_counter.c ****         sec_counter_GLOBAL_ENABLE &= ((uint8)(~sec_counter_BLOCK_EN_MASK));
 336:Generated_Source\PSoC5/sec_counter.c ****     #else
 337:Generated_Source\PSoC5/sec_counter.c ****         CY_SET_REG32(sec_counter_COUNTER_LSB_PTR, counter);
 186              		.loc 1 337 0
 187 0000 014B     		ldr	r3, .L20
 188 0002 1860     		str	r0, [r3]	@ unaligned
 189 0004 7047     		bx	lr
 190              	.L21:
 191 0006 00BF     		.align	2
 192              	.L20:
 193 0008 02640040 		.word	1073767426
 194              		.cfi_endproc
 195              	.LFE8:
 196              		.size	sec_counter_WriteCounter, .-sec_counter_WriteCounter
 197              		.section	.text.sec_counter_ReadCounter,"ax",%progbits
 198              		.align	2
 199              		.global	sec_counter_ReadCounter
 200              		.thumb
 201              		.thumb_func
 202              		.type	sec_counter_ReadCounter, %function
 203              	sec_counter_ReadCounter:
 204              	.LFB9:
 338:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 339:Generated_Source\PSoC5/sec_counter.c **** }
 340:Generated_Source\PSoC5/sec_counter.c **** #endif /* (!(sec_counter_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/sec_counter.c **** 
 342:Generated_Source\PSoC5/sec_counter.c **** 
 343:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 344:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ReadCounter
 345:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 346:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 347:Generated_Source\PSoC5/sec_counter.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/sec_counter.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/sec_counter.c **** *
 350:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 351:Generated_Source\PSoC5/sec_counter.c **** *  void:  
 352:Generated_Source\PSoC5/sec_counter.c **** *
 353:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 354:Generated_Source\PSoC5/sec_counter.c **** *  (uint32) The present value of the counter.
 355:Generated_Source\PSoC5/sec_counter.c **** *
 356:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/sec_counter.c **** uint32 sec_counter_ReadCounter(void) 
 358:Generated_Source\PSoC5/sec_counter.c **** {
 205              		.loc 1 358 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 359:Generated_Source\PSoC5/sec_counter.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/sec_counter.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/sec_counter.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 11


 362:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 363:Generated_Source\PSoC5/sec_counter.c **** 		(void)CY_GET_REG16(sec_counter_COUNTER_LSB_PTR);
 364:Generated_Source\PSoC5/sec_counter.c **** 	#else
 365:Generated_Source\PSoC5/sec_counter.c **** 		(void)CY_GET_REG8(sec_counter_COUNTER_LSB_PTR_8BIT);
 210              		.loc 1 365 0
 211 0000 024B     		ldr	r3, .L23
 212 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:Generated_Source\PSoC5/sec_counter.c **** 	#endif/* (sec_counter_UsingFixedFunction) */
 367:Generated_Source\PSoC5/sec_counter.c ****     
 368:Generated_Source\PSoC5/sec_counter.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 370:Generated_Source\PSoC5/sec_counter.c ****         return ((uint32)CY_GET_REG16(sec_counter_STATICCOUNT_LSB_PTR));
 371:Generated_Source\PSoC5/sec_counter.c ****     #else
 372:Generated_Source\PSoC5/sec_counter.c ****         return (CY_GET_REG32(sec_counter_STATICCOUNT_LSB_PTR));
 213              		.loc 1 372 0
 214 0004 024B     		ldr	r3, .L23+4
 215 0006 1868     		ldr	r0, [r3]	@ unaligned
 373:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 374:Generated_Source\PSoC5/sec_counter.c **** }
 216              		.loc 1 374 0
 217 0008 7047     		bx	lr
 218              	.L24:
 219 000a 00BF     		.align	2
 220              	.L23:
 221 000c 02640040 		.word	1073767426
 222 0010 42640040 		.word	1073767490
 223              		.cfi_endproc
 224              	.LFE9:
 225              		.size	sec_counter_ReadCounter, .-sec_counter_ReadCounter
 226              		.section	.text.sec_counter_ReadCapture,"ax",%progbits
 227              		.align	2
 228              		.global	sec_counter_ReadCapture
 229              		.thumb
 230              		.thumb_func
 231              		.type	sec_counter_ReadCapture, %function
 232              	sec_counter_ReadCapture:
 233              	.LFB10:
 375:Generated_Source\PSoC5/sec_counter.c **** 
 376:Generated_Source\PSoC5/sec_counter.c **** 
 377:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ReadCapture
 379:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 380:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 381:Generated_Source\PSoC5/sec_counter.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/sec_counter.c **** *
 383:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 384:Generated_Source\PSoC5/sec_counter.c **** *  void
 385:Generated_Source\PSoC5/sec_counter.c **** *
 386:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 387:Generated_Source\PSoC5/sec_counter.c **** *  (uint32) Present Capture value.
 388:Generated_Source\PSoC5/sec_counter.c **** *
 389:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/sec_counter.c **** uint32 sec_counter_ReadCapture(void) 
 391:Generated_Source\PSoC5/sec_counter.c **** {
 234              		.loc 1 391 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 12


 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 392:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 393:Generated_Source\PSoC5/sec_counter.c ****         return ((uint32)CY_GET_REG16(sec_counter_STATICCOUNT_LSB_PTR));
 394:Generated_Source\PSoC5/sec_counter.c ****     #else
 395:Generated_Source\PSoC5/sec_counter.c ****         return (CY_GET_REG32(sec_counter_STATICCOUNT_LSB_PTR));
 239              		.loc 1 395 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1868     		ldr	r0, [r3]	@ unaligned
 396:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 397:Generated_Source\PSoC5/sec_counter.c **** }
 242              		.loc 1 397 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 42640040 		.word	1073767490
 248              		.cfi_endproc
 249              	.LFE10:
 250              		.size	sec_counter_ReadCapture, .-sec_counter_ReadCapture
 251              		.section	.text.sec_counter_WritePeriod,"ax",%progbits
 252              		.align	2
 253              		.global	sec_counter_WritePeriod
 254              		.thumb
 255              		.thumb_func
 256              		.type	sec_counter_WritePeriod, %function
 257              	sec_counter_WritePeriod:
 258              	.LFB11:
 398:Generated_Source\PSoC5/sec_counter.c **** 
 399:Generated_Source\PSoC5/sec_counter.c **** 
 400:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_WritePeriod
 402:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 403:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 404:Generated_Source\PSoC5/sec_counter.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/sec_counter.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/sec_counter.c **** *
 407:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 408:Generated_Source\PSoC5/sec_counter.c **** *  period: (uint32) A value of 0 will result in
 409:Generated_Source\PSoC5/sec_counter.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/sec_counter.c **** *
 411:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 412:Generated_Source\PSoC5/sec_counter.c **** *  void
 413:Generated_Source\PSoC5/sec_counter.c **** *
 414:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_WritePeriod(uint32 period) 
 416:Generated_Source\PSoC5/sec_counter.c **** {
 259              		.loc 1 416 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL3:
 417:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 418:Generated_Source\PSoC5/sec_counter.c ****         CY_SET_REG16(sec_counter_PERIOD_LSB_PTR,(uint16)period);
 419:Generated_Source\PSoC5/sec_counter.c ****     #else
 420:Generated_Source\PSoC5/sec_counter.c ****         CY_SET_REG32(sec_counter_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 13


 265              		.loc 1 420 0
 266 0000 014B     		ldr	r3, .L29
 267 0002 1860     		str	r0, [r3]	@ unaligned
 268 0004 7047     		bx	lr
 269              	.L30:
 270 0006 00BF     		.align	2
 271              	.L29:
 272 0008 22640040 		.word	1073767458
 273              		.cfi_endproc
 274              	.LFE11:
 275              		.size	sec_counter_WritePeriod, .-sec_counter_WritePeriod
 276              		.section	.text.sec_counter_ReadPeriod,"ax",%progbits
 277              		.align	2
 278              		.global	sec_counter_ReadPeriod
 279              		.thumb
 280              		.thumb_func
 281              		.type	sec_counter_ReadPeriod, %function
 282              	sec_counter_ReadPeriod:
 283              	.LFB12:
 421:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 422:Generated_Source\PSoC5/sec_counter.c **** }
 423:Generated_Source\PSoC5/sec_counter.c **** 
 424:Generated_Source\PSoC5/sec_counter.c **** 
 425:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ReadPeriod
 427:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 428:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 429:Generated_Source\PSoC5/sec_counter.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/sec_counter.c **** *
 431:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 432:Generated_Source\PSoC5/sec_counter.c **** *  void:  
 433:Generated_Source\PSoC5/sec_counter.c **** *
 434:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 435:Generated_Source\PSoC5/sec_counter.c **** *  (uint32) Present period value.
 436:Generated_Source\PSoC5/sec_counter.c **** *
 437:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/sec_counter.c **** uint32 sec_counter_ReadPeriod(void) 
 439:Generated_Source\PSoC5/sec_counter.c **** {
 284              		.loc 1 439 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 440:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 441:Generated_Source\PSoC5/sec_counter.c ****         return ((uint32)CY_GET_REG16(sec_counter_PERIOD_LSB_PTR));
 442:Generated_Source\PSoC5/sec_counter.c ****     #else
 443:Generated_Source\PSoC5/sec_counter.c ****         return (CY_GET_REG32(sec_counter_PERIOD_LSB_PTR));
 289              		.loc 1 443 0
 290 0000 014B     		ldr	r3, .L32
 291 0002 1868     		ldr	r0, [r3]	@ unaligned
 444:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 445:Generated_Source\PSoC5/sec_counter.c **** }
 292              		.loc 1 445 0
 293 0004 7047     		bx	lr
 294              	.L33:
 295 0006 00BF     		.align	2
 296              	.L32:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 14


 297 0008 22640040 		.word	1073767458
 298              		.cfi_endproc
 299              	.LFE12:
 300              		.size	sec_counter_ReadPeriod, .-sec_counter_ReadPeriod
 301              		.section	.text.sec_counter_WriteCompare,"ax",%progbits
 302              		.align	2
 303              		.global	sec_counter_WriteCompare
 304              		.thumb
 305              		.thumb_func
 306              		.type	sec_counter_WriteCompare, %function
 307              	sec_counter_WriteCompare:
 308              	.LFB13:
 446:Generated_Source\PSoC5/sec_counter.c **** 
 447:Generated_Source\PSoC5/sec_counter.c **** 
 448:Generated_Source\PSoC5/sec_counter.c **** #if (!sec_counter_UsingFixedFunction)
 449:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 450:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_WriteCompare
 451:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 452:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 453:Generated_Source\PSoC5/sec_counter.c **** * Changes the compare value.  The compare output will 
 454:Generated_Source\PSoC5/sec_counter.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:Generated_Source\PSoC5/sec_counter.c **** * driven high when the present counter value compares true based on the 
 456:Generated_Source\PSoC5/sec_counter.c **** * configured compare mode setting. 
 457:Generated_Source\PSoC5/sec_counter.c **** *
 458:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 459:Generated_Source\PSoC5/sec_counter.c **** *  Compare:  New compare value. 
 460:Generated_Source\PSoC5/sec_counter.c **** *
 461:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 462:Generated_Source\PSoC5/sec_counter.c **** *  void
 463:Generated_Source\PSoC5/sec_counter.c **** *
 464:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_WriteCompare(uint32 compare) \
 466:Generated_Source\PSoC5/sec_counter.c ****                                    
 467:Generated_Source\PSoC5/sec_counter.c **** {
 309              		.loc 1 467 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LVL4:
 468:Generated_Source\PSoC5/sec_counter.c ****     #if(sec_counter_UsingFixedFunction)
 469:Generated_Source\PSoC5/sec_counter.c ****         CY_SET_REG16(sec_counter_COMPARE_LSB_PTR, (uint16)compare);
 470:Generated_Source\PSoC5/sec_counter.c ****     #else
 471:Generated_Source\PSoC5/sec_counter.c ****         CY_SET_REG32(sec_counter_COMPARE_LSB_PTR, compare);
 315              		.loc 1 471 0
 316 0000 014B     		ldr	r3, .L35
 317 0002 1860     		str	r0, [r3]	@ unaligned
 318 0004 7047     		bx	lr
 319              	.L36:
 320 0006 00BF     		.align	2
 321              	.L35:
 322 0008 32640040 		.word	1073767474
 323              		.cfi_endproc
 324              	.LFE13:
 325              		.size	sec_counter_WriteCompare, .-sec_counter_WriteCompare
 326              		.section	.text.sec_counter_ReadCompare,"ax",%progbits
 327              		.align	2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 15


 328              		.global	sec_counter_ReadCompare
 329              		.thumb
 330              		.thumb_func
 331              		.type	sec_counter_ReadCompare, %function
 332              	sec_counter_ReadCompare:
 333              	.LFB14:
 472:Generated_Source\PSoC5/sec_counter.c ****     #endif /* (sec_counter_UsingFixedFunction) */
 473:Generated_Source\PSoC5/sec_counter.c **** }
 474:Generated_Source\PSoC5/sec_counter.c **** 
 475:Generated_Source\PSoC5/sec_counter.c **** 
 476:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 477:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ReadCompare
 478:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 479:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 480:Generated_Source\PSoC5/sec_counter.c **** * Returns the compare value.
 481:Generated_Source\PSoC5/sec_counter.c **** *
 482:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 483:Generated_Source\PSoC5/sec_counter.c **** *  void:
 484:Generated_Source\PSoC5/sec_counter.c **** *
 485:Generated_Source\PSoC5/sec_counter.c **** * Return: 
 486:Generated_Source\PSoC5/sec_counter.c **** *  (uint32) Present compare value.
 487:Generated_Source\PSoC5/sec_counter.c **** *
 488:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/sec_counter.c **** uint32 sec_counter_ReadCompare(void) 
 490:Generated_Source\PSoC5/sec_counter.c **** {
 334              		.loc 1 490 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 491:Generated_Source\PSoC5/sec_counter.c ****     return (CY_GET_REG32(sec_counter_COMPARE_LSB_PTR));
 339              		.loc 1 491 0
 340 0000 014B     		ldr	r3, .L38
 341 0002 1868     		ldr	r0, [r3]	@ unaligned
 492:Generated_Source\PSoC5/sec_counter.c **** }
 342              		.loc 1 492 0
 343 0004 7047     		bx	lr
 344              	.L39:
 345 0006 00BF     		.align	2
 346              	.L38:
 347 0008 32640040 		.word	1073767474
 348              		.cfi_endproc
 349              	.LFE14:
 350              		.size	sec_counter_ReadCompare, .-sec_counter_ReadCompare
 351              		.section	.text.sec_counter_ClearFIFO,"ax",%progbits
 352              		.align	2
 353              		.global	sec_counter_ClearFIFO
 354              		.thumb
 355              		.thumb_func
 356              		.type	sec_counter_ClearFIFO, %function
 357              	sec_counter_ClearFIFO:
 358              	.LFB15:
 493:Generated_Source\PSoC5/sec_counter.c **** 
 494:Generated_Source\PSoC5/sec_counter.c **** 
 495:Generated_Source\PSoC5/sec_counter.c **** #if (sec_counter_COMPARE_MODE_SOFTWARE)
 496:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_SetCompareMode
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 16


 498:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 499:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 500:Generated_Source\PSoC5/sec_counter.c **** *  Sets the software controlled Compare Mode.
 501:Generated_Source\PSoC5/sec_counter.c **** *
 502:Generated_Source\PSoC5/sec_counter.c **** * Parameters:
 503:Generated_Source\PSoC5/sec_counter.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:Generated_Source\PSoC5/sec_counter.c **** *
 505:Generated_Source\PSoC5/sec_counter.c **** * Return:
 506:Generated_Source\PSoC5/sec_counter.c **** *  void
 507:Generated_Source\PSoC5/sec_counter.c **** *
 508:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 509:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_SetCompareMode(uint8 compareMode) 
 510:Generated_Source\PSoC5/sec_counter.c **** {
 511:Generated_Source\PSoC5/sec_counter.c ****     /* Clear the compare mode bits in the control register */
 512:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_CONTROL &= ((uint8)(~sec_counter_CTRL_CMPMODE_MASK));
 513:Generated_Source\PSoC5/sec_counter.c ****     
 514:Generated_Source\PSoC5/sec_counter.c ****     /* Write the new setting */
 515:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_CONTROL |= compareMode;
 516:Generated_Source\PSoC5/sec_counter.c **** }
 517:Generated_Source\PSoC5/sec_counter.c **** #endif  /* (sec_counter_COMPARE_MODE_SOFTWARE) */
 518:Generated_Source\PSoC5/sec_counter.c **** 
 519:Generated_Source\PSoC5/sec_counter.c **** 
 520:Generated_Source\PSoC5/sec_counter.c **** #if (sec_counter_CAPTURE_MODE_SOFTWARE)
 521:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 522:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_SetCaptureMode
 523:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 524:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 525:Generated_Source\PSoC5/sec_counter.c **** *  Sets the software controlled Capture Mode.
 526:Generated_Source\PSoC5/sec_counter.c **** *
 527:Generated_Source\PSoC5/sec_counter.c **** * Parameters:
 528:Generated_Source\PSoC5/sec_counter.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:Generated_Source\PSoC5/sec_counter.c **** *
 530:Generated_Source\PSoC5/sec_counter.c **** * Return:
 531:Generated_Source\PSoC5/sec_counter.c **** *  void
 532:Generated_Source\PSoC5/sec_counter.c **** *
 533:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 534:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_SetCaptureMode(uint8 captureMode) 
 535:Generated_Source\PSoC5/sec_counter.c **** {
 536:Generated_Source\PSoC5/sec_counter.c ****     /* Clear the capture mode bits in the control register */
 537:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_CONTROL &= ((uint8)(~sec_counter_CTRL_CAPMODE_MASK));
 538:Generated_Source\PSoC5/sec_counter.c ****     
 539:Generated_Source\PSoC5/sec_counter.c ****     /* Write the new setting */
 540:Generated_Source\PSoC5/sec_counter.c ****     sec_counter_CONTROL |= ((uint8)((uint8)captureMode << sec_counter_CTRL_CAPMODE0_SHIFT));
 541:Generated_Source\PSoC5/sec_counter.c **** }
 542:Generated_Source\PSoC5/sec_counter.c **** #endif  /* (sec_counter_CAPTURE_MODE_SOFTWARE) */
 543:Generated_Source\PSoC5/sec_counter.c **** 
 544:Generated_Source\PSoC5/sec_counter.c **** 
 545:Generated_Source\PSoC5/sec_counter.c **** /*******************************************************************************
 546:Generated_Source\PSoC5/sec_counter.c **** * Function Name: sec_counter_ClearFIFO
 547:Generated_Source\PSoC5/sec_counter.c **** ********************************************************************************
 548:Generated_Source\PSoC5/sec_counter.c **** * Summary:
 549:Generated_Source\PSoC5/sec_counter.c **** *   This function clears all capture data from the capture FIFO
 550:Generated_Source\PSoC5/sec_counter.c **** *
 551:Generated_Source\PSoC5/sec_counter.c **** * Parameters:  
 552:Generated_Source\PSoC5/sec_counter.c **** *  void:
 553:Generated_Source\PSoC5/sec_counter.c **** *
 554:Generated_Source\PSoC5/sec_counter.c **** * Return: 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 17


 555:Generated_Source\PSoC5/sec_counter.c **** *  None
 556:Generated_Source\PSoC5/sec_counter.c **** *
 557:Generated_Source\PSoC5/sec_counter.c **** *******************************************************************************/
 558:Generated_Source\PSoC5/sec_counter.c **** void sec_counter_ClearFIFO(void) 
 559:Generated_Source\PSoC5/sec_counter.c **** {
 359              		.loc 1 559 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 3, -8
 366              		.cfi_offset 14, -4
 560:Generated_Source\PSoC5/sec_counter.c **** 
 561:Generated_Source\PSoC5/sec_counter.c ****     while(0u != (sec_counter_ReadStatusRegister() & sec_counter_STATUS_FIFONEMP))
 367              		.loc 1 561 0
 368 0002 01E0     		b	.L41
 369              	.L42:
 562:Generated_Source\PSoC5/sec_counter.c ****     {
 563:Generated_Source\PSoC5/sec_counter.c ****         (void)sec_counter_ReadCapture();
 370              		.loc 1 563 0
 371 0004 FFF7FEFF 		bl	sec_counter_ReadCapture
 372              	.LVL5:
 373              	.L41:
 561:Generated_Source\PSoC5/sec_counter.c ****     {
 374              		.loc 1 561 0
 375 0008 FFF7FEFF 		bl	sec_counter_ReadStatusRegister
 376              	.LVL6:
 377 000c 10F0400F 		tst	r0, #64
 378 0010 F8D1     		bne	.L42
 564:Generated_Source\PSoC5/sec_counter.c ****     }
 565:Generated_Source\PSoC5/sec_counter.c **** 
 566:Generated_Source\PSoC5/sec_counter.c **** }
 379              		.loc 1 566 0
 380 0012 08BD     		pop	{r3, pc}
 381              		.cfi_endproc
 382              	.LFE15:
 383              		.size	sec_counter_ClearFIFO, .-sec_counter_ClearFIFO
 384              		.section	.text.sec_counter_Init,"ax",%progbits
 385              		.align	2
 386              		.global	sec_counter_Init
 387              		.thumb
 388              		.thumb_func
 389              		.type	sec_counter_Init, %function
 390              	sec_counter_Init:
 391              	.LFB0:
  38:Generated_Source\PSoC5/sec_counter.c ****         #if (!sec_counter_UsingFixedFunction && !sec_counter_ControlRegRemoved)
 392              		.loc 1 38 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 08B5     		push	{r3, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 3, -8
 399              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/sec_counter.c ****             sec_counter_CONTROL = ctrl | sec_counter_DEFAULT_COMPARE_MODE;
 400              		.loc 1 79 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 18


 401 0002 144A     		ldr	r2, .L46
 402 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 403 0006 03F0F803 		and	r3, r3, #248
 404              	.LVL7:
  80:Generated_Source\PSoC5/sec_counter.c ****             
 405              		.loc 1 80 0
 406 000a 43F00103 		orr	r3, r3, #1
 407              	.LVL8:
 408 000e 1370     		strb	r3, [r2]
  83:Generated_Source\PSoC5/sec_counter.c ****             
 409              		.loc 1 83 0
 410 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 411 0012 03F0FC03 		and	r3, r3, #252
 412              	.LVL9:
  86:Generated_Source\PSoC5/sec_counter.c ****             #else
 413              		.loc 1 86 0
 414 0016 43F00803 		orr	r3, r3, #8
 415              	.LVL10:
 416 001a 1370     		strb	r3, [r2]
  96:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!sec_counter_UsingFixedFunction) */
 417              		.loc 1 96 0
 418 001c FFF7FEFF 		bl	sec_counter_ClearFIFO
 419              	.LVL11:
 100:Generated_Source\PSoC5/sec_counter.c ****         #if (!(sec_counter_UsingFixedFunction && (CY_PSOC5A)))
 420              		.loc 1 100 0
 421 0020 6FF00100 		mvn	r0, #1
 422 0024 FFF7FEFF 		bl	sec_counter_WritePeriod
 423              	.LVL12:
 102:Generated_Source\PSoC5/sec_counter.c ****         #endif /* (!(sec_counter_UsingFixedFunction && (CY_PSOC5A))) */
 424              		.loc 1 102 0
 425 0028 0020     		movs	r0, #0
 426 002a FFF7FEFF 		bl	sec_counter_WriteCounter
 427              	.LVL13:
 104:Generated_Source\PSoC5/sec_counter.c ****         
 428              		.loc 1 104 0
 429 002e 0020     		movs	r0, #0
 430 0030 FFF7FEFF 		bl	sec_counter_SetInterruptMode
 431              	.LVL14:
 108:Generated_Source\PSoC5/sec_counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 432              		.loc 1 108 0
 433 0034 FFF7FEFF 		bl	sec_counter_ReadStatusRegister
 434              	.LVL15:
 110:Generated_Source\PSoC5/sec_counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 435              		.loc 1 110 0
 436 0038 8020     		movs	r0, #128
 437 003a FFF7FEFF 		bl	sec_counter_WriteCompare
 438              	.LVL16:
 115:Generated_Source\PSoC5/sec_counter.c ****             
 439              		.loc 1 115 0
 440 003e FFF7FEFF 		bl	CyEnterCriticalSection
 441              	.LVL17:
 117:Generated_Source\PSoC5/sec_counter.c ****             
 442              		.loc 1 117 0
 443 0042 054A     		ldr	r2, .L46+4
 444 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 445 0046 43F01003 		orr	r3, r3, #16
 446 004a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 19


 120:Generated_Source\PSoC5/sec_counter.c ****             
 447              		.loc 1 120 0
 448 004c FFF7FEFF 		bl	CyExitCriticalSection
 449              	.LVL18:
 450 0050 08BD     		pop	{r3, pc}
 451              	.L47:
 452 0052 00BF     		.align	2
 453              	.L46:
 454 0054 71640040 		.word	1073767537
 455 0058 95640040 		.word	1073767573
 456              		.cfi_endproc
 457              	.LFE0:
 458              		.size	sec_counter_Init, .-sec_counter_Init
 459              		.section	.text.sec_counter_Start,"ax",%progbits
 460              		.align	2
 461              		.global	sec_counter_Start
 462              		.thumb
 463              		.thumb_func
 464              		.type	sec_counter_Start, %function
 465              	sec_counter_Start:
 466              	.LFB2:
 179:Generated_Source\PSoC5/sec_counter.c ****     if(sec_counter_initVar == 0u)
 467              		.loc 1 179 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 08B5     		push	{r3, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 3, -8
 474              		.cfi_offset 14, -4
 180:Generated_Source\PSoC5/sec_counter.c ****     {
 475              		.loc 1 180 0
 476 0002 054B     		ldr	r3, .L51
 477 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 0006 23B9     		cbnz	r3, .L49
 182:Generated_Source\PSoC5/sec_counter.c ****         
 479              		.loc 1 182 0
 480 0008 FFF7FEFF 		bl	sec_counter_Init
 481              	.LVL19:
 184:Generated_Source\PSoC5/sec_counter.c ****     }
 482              		.loc 1 184 0
 483 000c 0122     		movs	r2, #1
 484 000e 024B     		ldr	r3, .L51
 485 0010 1A70     		strb	r2, [r3]
 486              	.L49:
 188:Generated_Source\PSoC5/sec_counter.c **** }
 487              		.loc 1 188 0
 488 0012 FFF7FEFF 		bl	sec_counter_Enable
 489              	.LVL20:
 490 0016 08BD     		pop	{r3, pc}
 491              	.L52:
 492              		.align	2
 493              	.L51:
 494 0018 00000000 		.word	.LANCHOR0
 495              		.cfi_endproc
 496              	.LFE2:
 497              		.size	sec_counter_Start, .-sec_counter_Start
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 20


 498              		.global	sec_counter_initVar
 499              		.bss
 500              		.set	.LANCHOR0,. + 0
 501              		.type	sec_counter_initVar, %object
 502              		.size	sec_counter_initVar, 1
 503              	sec_counter_initVar:
 504 0000 00       		.space	1
 505              		.text
 506              	.Letext0:
 507              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 508              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 509              		.section	.debug_info,"",%progbits
 510              	.Ldebug_info0:
 511 0000 40030000 		.4byte	0x340
 512 0004 0400     		.2byte	0x4
 513 0006 00000000 		.4byte	.Ldebug_abbrev0
 514 000a 04       		.byte	0x4
 515 000b 01       		.uleb128 0x1
 516 000c 71020000 		.4byte	.LASF43
 517 0010 0C       		.byte	0xc
 518 0011 CC010000 		.4byte	.LASF44
 519 0015 DE000000 		.4byte	.LASF45
 520 0019 00000000 		.4byte	.Ldebug_ranges0+0
 521 001d 00000000 		.4byte	0
 522 0021 00000000 		.4byte	.Ldebug_line0
 523 0025 02       		.uleb128 0x2
 524 0026 01       		.byte	0x1
 525 0027 06       		.byte	0x6
 526 0028 9F030000 		.4byte	.LASF0
 527 002c 02       		.uleb128 0x2
 528 002d 01       		.byte	0x1
 529 002e 08       		.byte	0x8
 530 002f 32010000 		.4byte	.LASF1
 531 0033 02       		.uleb128 0x2
 532 0034 02       		.byte	0x2
 533 0035 05       		.byte	0x5
 534 0036 2C030000 		.4byte	.LASF2
 535 003a 02       		.uleb128 0x2
 536 003b 02       		.byte	0x2
 537 003c 07       		.byte	0x7
 538 003d 58000000 		.4byte	.LASF3
 539 0041 02       		.uleb128 0x2
 540 0042 04       		.byte	0x4
 541 0043 05       		.byte	0x5
 542 0044 8A030000 		.4byte	.LASF4
 543 0048 02       		.uleb128 0x2
 544 0049 04       		.byte	0x4
 545 004a 07       		.byte	0x7
 546 004b 5D010000 		.4byte	.LASF5
 547 004f 02       		.uleb128 0x2
 548 0050 08       		.byte	0x8
 549 0051 05       		.byte	0x5
 550 0052 19030000 		.4byte	.LASF6
 551 0056 02       		.uleb128 0x2
 552 0057 08       		.byte	0x8
 553 0058 07       		.byte	0x7
 554 0059 C7000000 		.4byte	.LASF7
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 21


 555 005d 03       		.uleb128 0x3
 556 005e 04       		.byte	0x4
 557 005f 05       		.byte	0x5
 558 0060 696E7400 		.ascii	"int\000"
 559 0064 02       		.uleb128 0x2
 560 0065 04       		.byte	0x4
 561 0066 07       		.byte	0x7
 562 0067 36020000 		.4byte	.LASF8
 563 006b 04       		.uleb128 0x4
 564 006c 6F010000 		.4byte	.LASF9
 565 0070 02       		.byte	0x2
 566 0071 E401     		.2byte	0x1e4
 567 0073 2C000000 		.4byte	0x2c
 568 0077 04       		.uleb128 0x4
 569 0078 05020000 		.4byte	.LASF10
 570 007c 02       		.byte	0x2
 571 007d E601     		.2byte	0x1e6
 572 007f 48000000 		.4byte	0x48
 573 0083 02       		.uleb128 0x2
 574 0084 04       		.byte	0x4
 575 0085 04       		.byte	0x4
 576 0086 B9000000 		.4byte	.LASF11
 577 008a 02       		.uleb128 0x2
 578 008b 08       		.byte	0x8
 579 008c 04       		.byte	0x4
 580 008d AD010000 		.4byte	.LASF12
 581 0091 02       		.uleb128 0x2
 582 0092 01       		.byte	0x1
 583 0093 08       		.byte	0x8
 584 0094 27030000 		.4byte	.LASF13
 585 0098 04       		.uleb128 0x4
 586 0099 58010000 		.4byte	.LASF14
 587 009d 02       		.byte	0x2
 588 009e 8E02     		.2byte	0x28e
 589 00a0 A4000000 		.4byte	0xa4
 590 00a4 05       		.uleb128 0x5
 591 00a5 6B000000 		.4byte	0x6b
 592 00a9 04       		.uleb128 0x4
 593 00aa 00000000 		.4byte	.LASF15
 594 00ae 02       		.byte	0x2
 595 00af 9002     		.2byte	0x290
 596 00b1 B5000000 		.4byte	0xb5
 597 00b5 05       		.uleb128 0x5
 598 00b6 77000000 		.4byte	0x77
 599 00ba 02       		.uleb128 0x2
 600 00bb 08       		.byte	0x8
 601 00bc 04       		.byte	0x4
 602 00bd 93030000 		.4byte	.LASF16
 603 00c1 02       		.uleb128 0x2
 604 00c2 04       		.byte	0x4
 605 00c3 07       		.byte	0x7
 606 00c4 FF020000 		.4byte	.LASF17
 607 00c8 06       		.uleb128 0x6
 608 00c9 23020000 		.4byte	.LASF18
 609 00cd 01       		.byte	0x1
 610 00ce 8F       		.byte	0x8f
 611 00cf 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 22


 612 00d3 10000000 		.4byte	.LFE1-.LFB1
 613 00d7 01       		.uleb128 0x1
 614 00d8 9C       		.byte	0x9c
 615 00d9 06       		.uleb128 0x6
 616 00da 08030000 		.4byte	.LASF19
 617 00de 01       		.byte	0x1
 618 00df D0       		.byte	0xd0
 619 00e0 00000000 		.4byte	.LFB3
 620 00e4 10000000 		.4byte	.LFE3-.LFB3
 621 00e8 01       		.uleb128 0x1
 622 00e9 9C       		.byte	0x9c
 623 00ea 07       		.uleb128 0x7
 624 00eb 6D030000 		.4byte	.LASF22
 625 00ef 01       		.byte	0x1
 626 00f0 ED       		.byte	0xed
 627 00f1 00000000 		.4byte	.LFB4
 628 00f5 0C000000 		.4byte	.LFE4-.LFB4
 629 00f9 01       		.uleb128 0x1
 630 00fa 9C       		.byte	0x9c
 631 00fb 0D010000 		.4byte	0x10d
 632 00ff 08       		.uleb128 0x8
 633 0100 7D010000 		.4byte	.LASF24
 634 0104 01       		.byte	0x1
 635 0105 ED       		.byte	0xed
 636 0106 6B000000 		.4byte	0x6b
 637 010a 01       		.uleb128 0x1
 638 010b 50       		.byte	0x50
 639 010c 00       		.byte	0
 640 010d 09       		.uleb128 0x9
 641 010e 9A000000 		.4byte	.LASF20
 642 0112 01       		.byte	0x1
 643 0113 0501     		.2byte	0x105
 644 0115 6B000000 		.4byte	0x6b
 645 0119 00000000 		.4byte	.LFB5
 646 011d 0C000000 		.4byte	.LFE5-.LFB5
 647 0121 01       		.uleb128 0x1
 648 0122 9C       		.byte	0x9c
 649 0123 09       		.uleb128 0x9
 650 0124 4D030000 		.4byte	.LASF21
 651 0128 01       		.byte	0x1
 652 0129 1B01     		.2byte	0x11b
 653 012b 6B000000 		.4byte	0x6b
 654 012f 00000000 		.4byte	.LFB6
 655 0133 0C000000 		.4byte	.LFE6-.LFB6
 656 0137 01       		.uleb128 0x1
 657 0138 9C       		.byte	0x9c
 658 0139 0A       		.uleb128 0xa
 659 013a 8C010000 		.4byte	.LASF23
 660 013e 01       		.byte	0x1
 661 013f 3001     		.2byte	0x130
 662 0141 00000000 		.4byte	.LFB7
 663 0145 0C000000 		.4byte	.LFE7-.LFB7
 664 0149 01       		.uleb128 0x1
 665 014a 9C       		.byte	0x9c
 666 014b 5E010000 		.4byte	0x15e
 667 014f 0B       		.uleb128 0xb
 668 0150 75010000 		.4byte	.LASF25
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 23


 669 0154 01       		.byte	0x1
 670 0155 3001     		.2byte	0x130
 671 0157 6B000000 		.4byte	0x6b
 672 015b 01       		.uleb128 0x1
 673 015c 50       		.byte	0x50
 674 015d 00       		.byte	0
 675 015e 0A       		.uleb128 0xa
 676 015f 21000000 		.4byte	.LASF26
 677 0163 01       		.byte	0x1
 678 0164 4601     		.2byte	0x146
 679 0166 00000000 		.4byte	.LFB8
 680 016a 0C000000 		.4byte	.LFE8-.LFB8
 681 016e 01       		.uleb128 0x1
 682 016f 9C       		.byte	0x9c
 683 0170 83010000 		.4byte	0x183
 684 0174 0B       		.uleb128 0xb
 685 0175 BF000000 		.4byte	.LASF27
 686 0179 01       		.byte	0x1
 687 017a 4601     		.2byte	0x146
 688 017c 77000000 		.4byte	0x77
 689 0180 01       		.uleb128 0x1
 690 0181 50       		.byte	0x50
 691 0182 00       		.byte	0
 692 0183 09       		.uleb128 0x9
 693 0184 59020000 		.4byte	.LASF28
 694 0188 01       		.byte	0x1
 695 0189 6501     		.2byte	0x165
 696 018b 77000000 		.4byte	0x77
 697 018f 00000000 		.4byte	.LFB9
 698 0193 14000000 		.4byte	.LFE9-.LFB9
 699 0197 01       		.uleb128 0x1
 700 0198 9C       		.byte	0x9c
 701 0199 09       		.uleb128 0x9
 702 019a B4010000 		.4byte	.LASF29
 703 019e 01       		.byte	0x1
 704 019f 8601     		.2byte	0x186
 705 01a1 77000000 		.4byte	0x77
 706 01a5 00000000 		.4byte	.LFB10
 707 01a9 0C000000 		.4byte	.LFE10-.LFB10
 708 01ad 01       		.uleb128 0x1
 709 01ae 9C       		.byte	0x9c
 710 01af 0A       		.uleb128 0xa
 711 01b0 C4030000 		.4byte	.LASF30
 712 01b4 01       		.byte	0x1
 713 01b5 9F01     		.2byte	0x19f
 714 01b7 00000000 		.4byte	.LFB11
 715 01bb 0C000000 		.4byte	.LFE11-.LFB11
 716 01bf 01       		.uleb128 0x1
 717 01c0 9C       		.byte	0x9c
 718 01c1 D4010000 		.4byte	0x1d4
 719 01c5 0B       		.uleb128 0xb
 720 01c6 51000000 		.4byte	.LASF31
 721 01ca 01       		.byte	0x1
 722 01cb 9F01     		.2byte	0x19f
 723 01cd 77000000 		.4byte	0x77
 724 01d1 01       		.uleb128 0x1
 725 01d2 50       		.byte	0x50
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 24


 726 01d3 00       		.byte	0
 727 01d4 09       		.uleb128 0x9
 728 01d5 3A000000 		.4byte	.LASF32
 729 01d9 01       		.byte	0x1
 730 01da B601     		.2byte	0x1b6
 731 01dc 77000000 		.4byte	0x77
 732 01e0 00000000 		.4byte	.LFB12
 733 01e4 0C000000 		.4byte	.LFE12-.LFB12
 734 01e8 01       		.uleb128 0x1
 735 01e9 9C       		.byte	0x9c
 736 01ea 0A       		.uleb128 0xa
 737 01eb 81000000 		.4byte	.LASF33
 738 01ef 01       		.byte	0x1
 739 01f0 D101     		.2byte	0x1d1
 740 01f2 00000000 		.4byte	.LFB13
 741 01f6 0C000000 		.4byte	.LFE13-.LFB13
 742 01fa 01       		.uleb128 0x1
 743 01fb 9C       		.byte	0x9c
 744 01fc 0F020000 		.4byte	0x20f
 745 0200 0B       		.uleb128 0xb
 746 0201 AB030000 		.4byte	.LASF34
 747 0205 01       		.byte	0x1
 748 0206 D101     		.2byte	0x1d1
 749 0208 77000000 		.4byte	0x77
 750 020c 01       		.uleb128 0x1
 751 020d 50       		.byte	0x50
 752 020e 00       		.byte	0
 753 020f 09       		.uleb128 0x9
 754 0210 40010000 		.4byte	.LASF35
 755 0214 01       		.byte	0x1
 756 0215 E901     		.2byte	0x1e9
 757 0217 77000000 		.4byte	0x77
 758 021b 00000000 		.4byte	.LFB14
 759 021f 0C000000 		.4byte	.LFE14-.LFB14
 760 0223 01       		.uleb128 0x1
 761 0224 9C       		.byte	0x9c
 762 0225 0A       		.uleb128 0xa
 763 0226 6B000000 		.4byte	.LASF36
 764 022a 01       		.byte	0x1
 765 022b 2E02     		.2byte	0x22e
 766 022d 00000000 		.4byte	.LFB15
 767 0231 14000000 		.4byte	.LFE15-.LFB15
 768 0235 01       		.uleb128 0x1
 769 0236 9C       		.byte	0x9c
 770 0237 4E020000 		.4byte	0x24e
 771 023b 0C       		.uleb128 0xc
 772 023c 08000000 		.4byte	.LVL5
 773 0240 99010000 		.4byte	0x199
 774 0244 0C       		.uleb128 0xc
 775 0245 0C000000 		.4byte	.LVL6
 776 0249 0D010000 		.4byte	0x10d
 777 024d 00       		.byte	0
 778 024e 07       		.uleb128 0x7
 779 024f B3030000 		.4byte	.LASF37
 780 0253 01       		.byte	0x1
 781 0254 25       		.byte	0x25
 782 0255 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 25


 783 0259 5C000000 		.4byte	.LFE0-.LFB0
 784 025d 01       		.uleb128 0x1
 785 025e 9C       		.byte	0x9c
 786 025f F4020000 		.4byte	0x2f4
 787 0263 0D       		.uleb128 0xd
 788 0264 48030000 		.4byte	.LASF38
 789 0268 01       		.byte	0x1
 790 0269 28       		.byte	0x28
 791 026a 6B000000 		.4byte	0x6b
 792 026e 00000000 		.4byte	.LLST0
 793 0272 0D       		.uleb128 0xd
 794 0273 06000000 		.4byte	.LASF39
 795 0277 01       		.byte	0x1
 796 0278 2D       		.byte	0x2d
 797 0279 6B000000 		.4byte	0x6b
 798 027d 1E000000 		.4byte	.LLST1
 799 0281 0C       		.uleb128 0xc
 800 0282 20000000 		.4byte	.LVL11
 801 0286 25020000 		.4byte	0x225
 802 028a 0E       		.uleb128 0xe
 803 028b 28000000 		.4byte	.LVL12
 804 028f AF010000 		.4byte	0x1af
 805 0293 9E020000 		.4byte	0x29e
 806 0297 0F       		.uleb128 0xf
 807 0298 01       		.uleb128 0x1
 808 0299 50       		.byte	0x50
 809 029a 02       		.uleb128 0x2
 810 029b 09       		.byte	0x9
 811 029c FE       		.byte	0xfe
 812 029d 00       		.byte	0
 813 029e 0E       		.uleb128 0xe
 814 029f 2E000000 		.4byte	.LVL13
 815 02a3 5E010000 		.4byte	0x15e
 816 02a7 B1020000 		.4byte	0x2b1
 817 02ab 0F       		.uleb128 0xf
 818 02ac 01       		.uleb128 0x1
 819 02ad 50       		.byte	0x50
 820 02ae 01       		.uleb128 0x1
 821 02af 30       		.byte	0x30
 822 02b0 00       		.byte	0
 823 02b1 0E       		.uleb128 0xe
 824 02b2 34000000 		.4byte	.LVL14
 825 02b6 EA000000 		.4byte	0xea
 826 02ba C4020000 		.4byte	0x2c4
 827 02be 0F       		.uleb128 0xf
 828 02bf 01       		.uleb128 0x1
 829 02c0 50       		.byte	0x50
 830 02c1 01       		.uleb128 0x1
 831 02c2 30       		.byte	0x30
 832 02c3 00       		.byte	0
 833 02c4 0C       		.uleb128 0xc
 834 02c5 38000000 		.4byte	.LVL15
 835 02c9 0D010000 		.4byte	0x10d
 836 02cd 0E       		.uleb128 0xe
 837 02ce 3E000000 		.4byte	.LVL16
 838 02d2 EA010000 		.4byte	0x1ea
 839 02d6 E1020000 		.4byte	0x2e1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 26


 840 02da 0F       		.uleb128 0xf
 841 02db 01       		.uleb128 0x1
 842 02dc 50       		.byte	0x50
 843 02dd 02       		.uleb128 0x2
 844 02de 08       		.byte	0x8
 845 02df 80       		.byte	0x80
 846 02e0 00       		.byte	0
 847 02e1 0C       		.uleb128 0xc
 848 02e2 42000000 		.4byte	.LVL17
 849 02e6 2D030000 		.4byte	0x32d
 850 02ea 0C       		.uleb128 0xc
 851 02eb 50000000 		.4byte	.LVL18
 852 02ef 38030000 		.4byte	0x338
 853 02f3 00       		.byte	0
 854 02f4 07       		.uleb128 0x7
 855 02f5 36030000 		.4byte	.LASF40
 856 02f9 01       		.byte	0x1
 857 02fa B2       		.byte	0xb2
 858 02fb 00000000 		.4byte	.LFB2
 859 02ff 1C000000 		.4byte	.LFE2-.LFB2
 860 0303 01       		.uleb128 0x1
 861 0304 9C       		.byte	0x9c
 862 0305 1C030000 		.4byte	0x31c
 863 0309 0C       		.uleb128 0xc
 864 030a 0C000000 		.4byte	.LVL19
 865 030e 4E020000 		.4byte	0x24e
 866 0312 0C       		.uleb128 0xc
 867 0313 16000000 		.4byte	.LVL20
 868 0317 C8000000 		.4byte	0xc8
 869 031b 00       		.byte	0
 870 031c 10       		.uleb128 0x10
 871 031d F1010000 		.4byte	.LASF46
 872 0321 01       		.byte	0x1
 873 0322 15       		.byte	0x15
 874 0323 6B000000 		.4byte	0x6b
 875 0327 05       		.uleb128 0x5
 876 0328 03       		.byte	0x3
 877 0329 00000000 		.4byte	sec_counter_initVar
 878 032d 11       		.uleb128 0x11
 879 032e 0C020000 		.4byte	.LASF41
 880 0332 0C020000 		.4byte	.LASF41
 881 0336 03       		.byte	0x3
 882 0337 7D       		.byte	0x7d
 883 0338 11       		.uleb128 0x11
 884 0339 43020000 		.4byte	.LASF42
 885 033d 43020000 		.4byte	.LASF42
 886 0341 03       		.byte	0x3
 887 0342 7E       		.byte	0x7e
 888 0343 00       		.byte	0
 889              		.section	.debug_abbrev,"",%progbits
 890              	.Ldebug_abbrev0:
 891 0000 01       		.uleb128 0x1
 892 0001 11       		.uleb128 0x11
 893 0002 01       		.byte	0x1
 894 0003 25       		.uleb128 0x25
 895 0004 0E       		.uleb128 0xe
 896 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 27


 897 0006 0B       		.uleb128 0xb
 898 0007 03       		.uleb128 0x3
 899 0008 0E       		.uleb128 0xe
 900 0009 1B       		.uleb128 0x1b
 901 000a 0E       		.uleb128 0xe
 902 000b 55       		.uleb128 0x55
 903 000c 17       		.uleb128 0x17
 904 000d 11       		.uleb128 0x11
 905 000e 01       		.uleb128 0x1
 906 000f 10       		.uleb128 0x10
 907 0010 17       		.uleb128 0x17
 908 0011 00       		.byte	0
 909 0012 00       		.byte	0
 910 0013 02       		.uleb128 0x2
 911 0014 24       		.uleb128 0x24
 912 0015 00       		.byte	0
 913 0016 0B       		.uleb128 0xb
 914 0017 0B       		.uleb128 0xb
 915 0018 3E       		.uleb128 0x3e
 916 0019 0B       		.uleb128 0xb
 917 001a 03       		.uleb128 0x3
 918 001b 0E       		.uleb128 0xe
 919 001c 00       		.byte	0
 920 001d 00       		.byte	0
 921 001e 03       		.uleb128 0x3
 922 001f 24       		.uleb128 0x24
 923 0020 00       		.byte	0
 924 0021 0B       		.uleb128 0xb
 925 0022 0B       		.uleb128 0xb
 926 0023 3E       		.uleb128 0x3e
 927 0024 0B       		.uleb128 0xb
 928 0025 03       		.uleb128 0x3
 929 0026 08       		.uleb128 0x8
 930 0027 00       		.byte	0
 931 0028 00       		.byte	0
 932 0029 04       		.uleb128 0x4
 933 002a 16       		.uleb128 0x16
 934 002b 00       		.byte	0
 935 002c 03       		.uleb128 0x3
 936 002d 0E       		.uleb128 0xe
 937 002e 3A       		.uleb128 0x3a
 938 002f 0B       		.uleb128 0xb
 939 0030 3B       		.uleb128 0x3b
 940 0031 05       		.uleb128 0x5
 941 0032 49       		.uleb128 0x49
 942 0033 13       		.uleb128 0x13
 943 0034 00       		.byte	0
 944 0035 00       		.byte	0
 945 0036 05       		.uleb128 0x5
 946 0037 35       		.uleb128 0x35
 947 0038 00       		.byte	0
 948 0039 49       		.uleb128 0x49
 949 003a 13       		.uleb128 0x13
 950 003b 00       		.byte	0
 951 003c 00       		.byte	0
 952 003d 06       		.uleb128 0x6
 953 003e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 28


 954 003f 00       		.byte	0
 955 0040 3F       		.uleb128 0x3f
 956 0041 19       		.uleb128 0x19
 957 0042 03       		.uleb128 0x3
 958 0043 0E       		.uleb128 0xe
 959 0044 3A       		.uleb128 0x3a
 960 0045 0B       		.uleb128 0xb
 961 0046 3B       		.uleb128 0x3b
 962 0047 0B       		.uleb128 0xb
 963 0048 27       		.uleb128 0x27
 964 0049 19       		.uleb128 0x19
 965 004a 11       		.uleb128 0x11
 966 004b 01       		.uleb128 0x1
 967 004c 12       		.uleb128 0x12
 968 004d 06       		.uleb128 0x6
 969 004e 40       		.uleb128 0x40
 970 004f 18       		.uleb128 0x18
 971 0050 9742     		.uleb128 0x2117
 972 0052 19       		.uleb128 0x19
 973 0053 00       		.byte	0
 974 0054 00       		.byte	0
 975 0055 07       		.uleb128 0x7
 976 0056 2E       		.uleb128 0x2e
 977 0057 01       		.byte	0x1
 978 0058 3F       		.uleb128 0x3f
 979 0059 19       		.uleb128 0x19
 980 005a 03       		.uleb128 0x3
 981 005b 0E       		.uleb128 0xe
 982 005c 3A       		.uleb128 0x3a
 983 005d 0B       		.uleb128 0xb
 984 005e 3B       		.uleb128 0x3b
 985 005f 0B       		.uleb128 0xb
 986 0060 27       		.uleb128 0x27
 987 0061 19       		.uleb128 0x19
 988 0062 11       		.uleb128 0x11
 989 0063 01       		.uleb128 0x1
 990 0064 12       		.uleb128 0x12
 991 0065 06       		.uleb128 0x6
 992 0066 40       		.uleb128 0x40
 993 0067 18       		.uleb128 0x18
 994 0068 9742     		.uleb128 0x2117
 995 006a 19       		.uleb128 0x19
 996 006b 01       		.uleb128 0x1
 997 006c 13       		.uleb128 0x13
 998 006d 00       		.byte	0
 999 006e 00       		.byte	0
 1000 006f 08       		.uleb128 0x8
 1001 0070 05       		.uleb128 0x5
 1002 0071 00       		.byte	0
 1003 0072 03       		.uleb128 0x3
 1004 0073 0E       		.uleb128 0xe
 1005 0074 3A       		.uleb128 0x3a
 1006 0075 0B       		.uleb128 0xb
 1007 0076 3B       		.uleb128 0x3b
 1008 0077 0B       		.uleb128 0xb
 1009 0078 49       		.uleb128 0x49
 1010 0079 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 29


 1011 007a 02       		.uleb128 0x2
 1012 007b 18       		.uleb128 0x18
 1013 007c 00       		.byte	0
 1014 007d 00       		.byte	0
 1015 007e 09       		.uleb128 0x9
 1016 007f 2E       		.uleb128 0x2e
 1017 0080 00       		.byte	0
 1018 0081 3F       		.uleb128 0x3f
 1019 0082 19       		.uleb128 0x19
 1020 0083 03       		.uleb128 0x3
 1021 0084 0E       		.uleb128 0xe
 1022 0085 3A       		.uleb128 0x3a
 1023 0086 0B       		.uleb128 0xb
 1024 0087 3B       		.uleb128 0x3b
 1025 0088 05       		.uleb128 0x5
 1026 0089 27       		.uleb128 0x27
 1027 008a 19       		.uleb128 0x19
 1028 008b 49       		.uleb128 0x49
 1029 008c 13       		.uleb128 0x13
 1030 008d 11       		.uleb128 0x11
 1031 008e 01       		.uleb128 0x1
 1032 008f 12       		.uleb128 0x12
 1033 0090 06       		.uleb128 0x6
 1034 0091 40       		.uleb128 0x40
 1035 0092 18       		.uleb128 0x18
 1036 0093 9742     		.uleb128 0x2117
 1037 0095 19       		.uleb128 0x19
 1038 0096 00       		.byte	0
 1039 0097 00       		.byte	0
 1040 0098 0A       		.uleb128 0xa
 1041 0099 2E       		.uleb128 0x2e
 1042 009a 01       		.byte	0x1
 1043 009b 3F       		.uleb128 0x3f
 1044 009c 19       		.uleb128 0x19
 1045 009d 03       		.uleb128 0x3
 1046 009e 0E       		.uleb128 0xe
 1047 009f 3A       		.uleb128 0x3a
 1048 00a0 0B       		.uleb128 0xb
 1049 00a1 3B       		.uleb128 0x3b
 1050 00a2 05       		.uleb128 0x5
 1051 00a3 27       		.uleb128 0x27
 1052 00a4 19       		.uleb128 0x19
 1053 00a5 11       		.uleb128 0x11
 1054 00a6 01       		.uleb128 0x1
 1055 00a7 12       		.uleb128 0x12
 1056 00a8 06       		.uleb128 0x6
 1057 00a9 40       		.uleb128 0x40
 1058 00aa 18       		.uleb128 0x18
 1059 00ab 9742     		.uleb128 0x2117
 1060 00ad 19       		.uleb128 0x19
 1061 00ae 01       		.uleb128 0x1
 1062 00af 13       		.uleb128 0x13
 1063 00b0 00       		.byte	0
 1064 00b1 00       		.byte	0
 1065 00b2 0B       		.uleb128 0xb
 1066 00b3 05       		.uleb128 0x5
 1067 00b4 00       		.byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 30


 1068 00b5 03       		.uleb128 0x3
 1069 00b6 0E       		.uleb128 0xe
 1070 00b7 3A       		.uleb128 0x3a
 1071 00b8 0B       		.uleb128 0xb
 1072 00b9 3B       		.uleb128 0x3b
 1073 00ba 05       		.uleb128 0x5
 1074 00bb 49       		.uleb128 0x49
 1075 00bc 13       		.uleb128 0x13
 1076 00bd 02       		.uleb128 0x2
 1077 00be 18       		.uleb128 0x18
 1078 00bf 00       		.byte	0
 1079 00c0 00       		.byte	0
 1080 00c1 0C       		.uleb128 0xc
 1081 00c2 898201   		.uleb128 0x4109
 1082 00c5 00       		.byte	0
 1083 00c6 11       		.uleb128 0x11
 1084 00c7 01       		.uleb128 0x1
 1085 00c8 31       		.uleb128 0x31
 1086 00c9 13       		.uleb128 0x13
 1087 00ca 00       		.byte	0
 1088 00cb 00       		.byte	0
 1089 00cc 0D       		.uleb128 0xd
 1090 00cd 34       		.uleb128 0x34
 1091 00ce 00       		.byte	0
 1092 00cf 03       		.uleb128 0x3
 1093 00d0 0E       		.uleb128 0xe
 1094 00d1 3A       		.uleb128 0x3a
 1095 00d2 0B       		.uleb128 0xb
 1096 00d3 3B       		.uleb128 0x3b
 1097 00d4 0B       		.uleb128 0xb
 1098 00d5 49       		.uleb128 0x49
 1099 00d6 13       		.uleb128 0x13
 1100 00d7 02       		.uleb128 0x2
 1101 00d8 17       		.uleb128 0x17
 1102 00d9 00       		.byte	0
 1103 00da 00       		.byte	0
 1104 00db 0E       		.uleb128 0xe
 1105 00dc 898201   		.uleb128 0x4109
 1106 00df 01       		.byte	0x1
 1107 00e0 11       		.uleb128 0x11
 1108 00e1 01       		.uleb128 0x1
 1109 00e2 31       		.uleb128 0x31
 1110 00e3 13       		.uleb128 0x13
 1111 00e4 01       		.uleb128 0x1
 1112 00e5 13       		.uleb128 0x13
 1113 00e6 00       		.byte	0
 1114 00e7 00       		.byte	0
 1115 00e8 0F       		.uleb128 0xf
 1116 00e9 8A8201   		.uleb128 0x410a
 1117 00ec 00       		.byte	0
 1118 00ed 02       		.uleb128 0x2
 1119 00ee 18       		.uleb128 0x18
 1120 00ef 9142     		.uleb128 0x2111
 1121 00f1 18       		.uleb128 0x18
 1122 00f2 00       		.byte	0
 1123 00f3 00       		.byte	0
 1124 00f4 10       		.uleb128 0x10
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 31


 1125 00f5 34       		.uleb128 0x34
 1126 00f6 00       		.byte	0
 1127 00f7 03       		.uleb128 0x3
 1128 00f8 0E       		.uleb128 0xe
 1129 00f9 3A       		.uleb128 0x3a
 1130 00fa 0B       		.uleb128 0xb
 1131 00fb 3B       		.uleb128 0x3b
 1132 00fc 0B       		.uleb128 0xb
 1133 00fd 49       		.uleb128 0x49
 1134 00fe 13       		.uleb128 0x13
 1135 00ff 3F       		.uleb128 0x3f
 1136 0100 19       		.uleb128 0x19
 1137 0101 02       		.uleb128 0x2
 1138 0102 18       		.uleb128 0x18
 1139 0103 00       		.byte	0
 1140 0104 00       		.byte	0
 1141 0105 11       		.uleb128 0x11
 1142 0106 2E       		.uleb128 0x2e
 1143 0107 00       		.byte	0
 1144 0108 3F       		.uleb128 0x3f
 1145 0109 19       		.uleb128 0x19
 1146 010a 3C       		.uleb128 0x3c
 1147 010b 19       		.uleb128 0x19
 1148 010c 6E       		.uleb128 0x6e
 1149 010d 0E       		.uleb128 0xe
 1150 010e 03       		.uleb128 0x3
 1151 010f 0E       		.uleb128 0xe
 1152 0110 3A       		.uleb128 0x3a
 1153 0111 0B       		.uleb128 0xb
 1154 0112 3B       		.uleb128 0x3b
 1155 0113 0B       		.uleb128 0xb
 1156 0114 00       		.byte	0
 1157 0115 00       		.byte	0
 1158 0116 00       		.byte	0
 1159              		.section	.debug_loc,"",%progbits
 1160              	.Ldebug_loc0:
 1161              	.LLST0:
 1162 0000 0A000000 		.4byte	.LVL7
 1163 0004 0E000000 		.4byte	.LVL8
 1164 0008 0100     		.2byte	0x1
 1165 000a 53       		.byte	0x53
 1166 000b 16000000 		.4byte	.LVL9
 1167 000f 1A000000 		.4byte	.LVL10
 1168 0013 0100     		.2byte	0x1
 1169 0015 53       		.byte	0x53
 1170 0016 00000000 		.4byte	0
 1171 001a 00000000 		.4byte	0
 1172              	.LLST1:
 1173 001e 42000000 		.4byte	.LVL17
 1174 0022 4F000000 		.4byte	.LVL18-1
 1175 0026 0100     		.2byte	0x1
 1176 0028 50       		.byte	0x50
 1177 0029 00000000 		.4byte	0
 1178 002d 00000000 		.4byte	0
 1179              		.section	.debug_aranges,"",%progbits
 1180 0000 94000000 		.4byte	0x94
 1181 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 32


 1182 0006 00000000 		.4byte	.Ldebug_info0
 1183 000a 04       		.byte	0x4
 1184 000b 00       		.byte	0
 1185 000c 0000     		.2byte	0
 1186 000e 0000     		.2byte	0
 1187 0010 00000000 		.4byte	.LFB1
 1188 0014 10000000 		.4byte	.LFE1-.LFB1
 1189 0018 00000000 		.4byte	.LFB3
 1190 001c 10000000 		.4byte	.LFE3-.LFB3
 1191 0020 00000000 		.4byte	.LFB4
 1192 0024 0C000000 		.4byte	.LFE4-.LFB4
 1193 0028 00000000 		.4byte	.LFB5
 1194 002c 0C000000 		.4byte	.LFE5-.LFB5
 1195 0030 00000000 		.4byte	.LFB6
 1196 0034 0C000000 		.4byte	.LFE6-.LFB6
 1197 0038 00000000 		.4byte	.LFB7
 1198 003c 0C000000 		.4byte	.LFE7-.LFB7
 1199 0040 00000000 		.4byte	.LFB8
 1200 0044 0C000000 		.4byte	.LFE8-.LFB8
 1201 0048 00000000 		.4byte	.LFB9
 1202 004c 14000000 		.4byte	.LFE9-.LFB9
 1203 0050 00000000 		.4byte	.LFB10
 1204 0054 0C000000 		.4byte	.LFE10-.LFB10
 1205 0058 00000000 		.4byte	.LFB11
 1206 005c 0C000000 		.4byte	.LFE11-.LFB11
 1207 0060 00000000 		.4byte	.LFB12
 1208 0064 0C000000 		.4byte	.LFE12-.LFB12
 1209 0068 00000000 		.4byte	.LFB13
 1210 006c 0C000000 		.4byte	.LFE13-.LFB13
 1211 0070 00000000 		.4byte	.LFB14
 1212 0074 0C000000 		.4byte	.LFE14-.LFB14
 1213 0078 00000000 		.4byte	.LFB15
 1214 007c 14000000 		.4byte	.LFE15-.LFB15
 1215 0080 00000000 		.4byte	.LFB0
 1216 0084 5C000000 		.4byte	.LFE0-.LFB0
 1217 0088 00000000 		.4byte	.LFB2
 1218 008c 1C000000 		.4byte	.LFE2-.LFB2
 1219 0090 00000000 		.4byte	0
 1220 0094 00000000 		.4byte	0
 1221              		.section	.debug_ranges,"",%progbits
 1222              	.Ldebug_ranges0:
 1223 0000 00000000 		.4byte	.LFB1
 1224 0004 10000000 		.4byte	.LFE1
 1225 0008 00000000 		.4byte	.LFB3
 1226 000c 10000000 		.4byte	.LFE3
 1227 0010 00000000 		.4byte	.LFB4
 1228 0014 0C000000 		.4byte	.LFE4
 1229 0018 00000000 		.4byte	.LFB5
 1230 001c 0C000000 		.4byte	.LFE5
 1231 0020 00000000 		.4byte	.LFB6
 1232 0024 0C000000 		.4byte	.LFE6
 1233 0028 00000000 		.4byte	.LFB7
 1234 002c 0C000000 		.4byte	.LFE7
 1235 0030 00000000 		.4byte	.LFB8
 1236 0034 0C000000 		.4byte	.LFE8
 1237 0038 00000000 		.4byte	.LFB9
 1238 003c 14000000 		.4byte	.LFE9
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 33


 1239 0040 00000000 		.4byte	.LFB10
 1240 0044 0C000000 		.4byte	.LFE10
 1241 0048 00000000 		.4byte	.LFB11
 1242 004c 0C000000 		.4byte	.LFE11
 1243 0050 00000000 		.4byte	.LFB12
 1244 0054 0C000000 		.4byte	.LFE12
 1245 0058 00000000 		.4byte	.LFB13
 1246 005c 0C000000 		.4byte	.LFE13
 1247 0060 00000000 		.4byte	.LFB14
 1248 0064 0C000000 		.4byte	.LFE14
 1249 0068 00000000 		.4byte	.LFB15
 1250 006c 14000000 		.4byte	.LFE15
 1251 0070 00000000 		.4byte	.LFB0
 1252 0074 5C000000 		.4byte	.LFE0
 1253 0078 00000000 		.4byte	.LFB2
 1254 007c 1C000000 		.4byte	.LFE2
 1255 0080 00000000 		.4byte	0
 1256 0084 00000000 		.4byte	0
 1257              		.section	.debug_line,"",%progbits
 1258              	.Ldebug_line0:
 1259 0000 89010000 		.section	.debug_str,"MS",%progbits,1
 1259      02005300 
 1259      00000201 
 1259      FB0E0D00 
 1259      01010101 
 1260              	.LASF15:
 1261 0000 72656733 		.ascii	"reg32\000"
 1261      3200
 1262              	.LASF39:
 1263 0006 7365635F 		.ascii	"sec_counter_interruptState\000"
 1263      636F756E 
 1263      7465725F 
 1263      696E7465 
 1263      72727570 
 1264              	.LASF26:
 1265 0021 7365635F 		.ascii	"sec_counter_WriteCounter\000"
 1265      636F756E 
 1265      7465725F 
 1265      57726974 
 1265      65436F75 
 1266              	.LASF32:
 1267 003a 7365635F 		.ascii	"sec_counter_ReadPeriod\000"
 1267      636F756E 
 1267      7465725F 
 1267      52656164 
 1267      50657269 
 1268              	.LASF31:
 1269 0051 70657269 		.ascii	"period\000"
 1269      6F6400
 1270              	.LASF3:
 1271 0058 73686F72 		.ascii	"short unsigned int\000"
 1271      7420756E 
 1271      7369676E 
 1271      65642069 
 1271      6E7400
 1272              	.LASF36:
 1273 006b 7365635F 		.ascii	"sec_counter_ClearFIFO\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 34


 1273      636F756E 
 1273      7465725F 
 1273      436C6561 
 1273      72464946 
 1274              	.LASF33:
 1275 0081 7365635F 		.ascii	"sec_counter_WriteCompare\000"
 1275      636F756E 
 1275      7465725F 
 1275      57726974 
 1275      65436F6D 
 1276              	.LASF20:
 1277 009a 7365635F 		.ascii	"sec_counter_ReadStatusRegister\000"
 1277      636F756E 
 1277      7465725F 
 1277      52656164 
 1277      53746174 
 1278              	.LASF11:
 1279 00b9 666C6F61 		.ascii	"float\000"
 1279      7400
 1280              	.LASF27:
 1281 00bf 636F756E 		.ascii	"counter\000"
 1281      74657200 
 1282              	.LASF7:
 1283 00c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1283      206C6F6E 
 1283      6720756E 
 1283      7369676E 
 1283      65642069 
 1284              	.LASF45:
 1285 00de 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\time_src\\b"
 1285      73657273 
 1285      5C652E69 
 1285      76616E6F 
 1285      765C446F 
 1286 010b 72616E63 		.ascii	"ranch\\Manchester encoder-decoder.cydsn\000"
 1286      685C4D61 
 1286      6E636865 
 1286      73746572 
 1286      20656E63 
 1287              	.LASF1:
 1288 0132 756E7369 		.ascii	"unsigned char\000"
 1288      676E6564 
 1288      20636861 
 1288      7200
 1289              	.LASF35:
 1290 0140 7365635F 		.ascii	"sec_counter_ReadCompare\000"
 1290      636F756E 
 1290      7465725F 
 1290      52656164 
 1290      436F6D70 
 1291              	.LASF14:
 1292 0158 72656738 		.ascii	"reg8\000"
 1292      00
 1293              	.LASF5:
 1294 015d 6C6F6E67 		.ascii	"long unsigned int\000"
 1294      20756E73 
 1294      69676E65 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 35


 1294      6420696E 
 1294      7400
 1295              	.LASF9:
 1296 016f 75696E74 		.ascii	"uint8\000"
 1296      3800
 1297              	.LASF25:
 1298 0175 636F6E74 		.ascii	"control\000"
 1298      726F6C00 
 1299              	.LASF24:
 1300 017d 696E7465 		.ascii	"interruptsMask\000"
 1300      72727570 
 1300      74734D61 
 1300      736B00
 1301              	.LASF23:
 1302 018c 7365635F 		.ascii	"sec_counter_WriteControlRegister\000"
 1302      636F756E 
 1302      7465725F 
 1302      57726974 
 1302      65436F6E 
 1303              	.LASF12:
 1304 01ad 646F7562 		.ascii	"double\000"
 1304      6C6500
 1305              	.LASF29:
 1306 01b4 7365635F 		.ascii	"sec_counter_ReadCapture\000"
 1306      636F756E 
 1306      7465725F 
 1306      52656164 
 1306      43617074 
 1307              	.LASF44:
 1308 01cc 47656E65 		.ascii	"Generated_Source\\PSoC5\\sec_counter.c\000"
 1308      72617465 
 1308      645F536F 
 1308      75726365 
 1308      5C50536F 
 1309              	.LASF46:
 1310 01f1 7365635F 		.ascii	"sec_counter_initVar\000"
 1310      636F756E 
 1310      7465725F 
 1310      696E6974 
 1310      56617200 
 1311              	.LASF10:
 1312 0205 75696E74 		.ascii	"uint32\000"
 1312      333200
 1313              	.LASF41:
 1314 020c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1314      74657243 
 1314      72697469 
 1314      63616C53 
 1314      65637469 
 1315              	.LASF18:
 1316 0223 7365635F 		.ascii	"sec_counter_Enable\000"
 1316      636F756E 
 1316      7465725F 
 1316      456E6162 
 1316      6C6500
 1317              	.LASF8:
 1318 0236 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 36


 1318      676E6564 
 1318      20696E74 
 1318      00
 1319              	.LASF42:
 1320 0243 43794578 		.ascii	"CyExitCriticalSection\000"
 1320      69744372 
 1320      69746963 
 1320      616C5365 
 1320      6374696F 
 1321              	.LASF28:
 1322 0259 7365635F 		.ascii	"sec_counter_ReadCounter\000"
 1322      636F756E 
 1322      7465725F 
 1322      52656164 
 1322      436F756E 
 1323              	.LASF43:
 1324 0271 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1324      43313120 
 1324      352E342E 
 1324      31203230 
 1324      31363036 
 1325 02a4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1325      20726576 
 1325      6973696F 
 1325      6E203233 
 1325      37373135 
 1326 02d7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1326      66756E63 
 1326      74696F6E 
 1326      2D736563 
 1326      74696F6E 
 1327              	.LASF17:
 1328 02ff 73697A65 		.ascii	"sizetype\000"
 1328      74797065 
 1328      00
 1329              	.LASF19:
 1330 0308 7365635F 		.ascii	"sec_counter_Stop\000"
 1330      636F756E 
 1330      7465725F 
 1330      53746F70 
 1330      00
 1331              	.LASF6:
 1332 0319 6C6F6E67 		.ascii	"long long int\000"
 1332      206C6F6E 
 1332      6720696E 
 1332      7400
 1333              	.LASF13:
 1334 0327 63686172 		.ascii	"char\000"
 1334      00
 1335              	.LASF2:
 1336 032c 73686F72 		.ascii	"short int\000"
 1336      7420696E 
 1336      7400
 1337              	.LASF40:
 1338 0336 7365635F 		.ascii	"sec_counter_Start\000"
 1338      636F756E 
 1338      7465725F 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccLer3vG.s 			page 37


 1338      53746172 
 1338      7400
 1339              	.LASF38:
 1340 0348 6374726C 		.ascii	"ctrl\000"
 1340      00
 1341              	.LASF21:
 1342 034d 7365635F 		.ascii	"sec_counter_ReadControlRegister\000"
 1342      636F756E 
 1342      7465725F 
 1342      52656164 
 1342      436F6E74 
 1343              	.LASF22:
 1344 036d 7365635F 		.ascii	"sec_counter_SetInterruptMode\000"
 1344      636F756E 
 1344      7465725F 
 1344      53657449 
 1344      6E746572 
 1345              	.LASF4:
 1346 038a 6C6F6E67 		.ascii	"long int\000"
 1346      20696E74 
 1346      00
 1347              	.LASF16:
 1348 0393 6C6F6E67 		.ascii	"long double\000"
 1348      20646F75 
 1348      626C6500 
 1349              	.LASF0:
 1350 039f 7369676E 		.ascii	"signed char\000"
 1350      65642063 
 1350      68617200 
 1351              	.LASF34:
 1352 03ab 636F6D70 		.ascii	"compare\000"
 1352      61726500 
 1353              	.LASF37:
 1354 03b3 7365635F 		.ascii	"sec_counter_Init\000"
 1354      636F756E 
 1354      7465725F 
 1354      496E6974 
 1354      00
 1355              	.LASF30:
 1356 03c4 7365635F 		.ascii	"sec_counter_WritePeriod\000"
 1356      636F756E 
 1356      7465725F 
 1356      57726974 
 1356      65506572 
 1357              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
