ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Enable, %function
  25              	UART_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 4


 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 184 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 186 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 5


 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  41              		.loc 1 190 0
  42 0008 0A4A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  46              		.loc 1 193 0
  47 0012 033A     		subs	r2, r2, #3
  48 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  49 0016 43F01003 		orr	r3, r3, #16
  50 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  51              		.loc 1 211 0
  52 001c 013A     		subs	r2, r2, #1
  53 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  54 0020 43F01003 		orr	r3, r3, #16
  55 0024 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  56              		.loc 1 219 0
  57 0026 FFF7FEFF 		bl	UART_IntClock_Start
  58              	.LVL2:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  59              		.loc 1 222 0
  60 002a 2046     		mov	r0, r4
  61 002c FFF7FEFF 		bl	CyExitCriticalSection
  62              	.LVL3:
  63 0030 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 6


  64              	.LVL4:
  65              	.L4:
  66 0032 00BF     		.align	2
  67              	.L3:
  68 0034 96640040 		.word	1073767574
  69              		.cfi_endproc
  70              	.LFE2:
  71              		.size	UART_Enable, .-UART_Enable
  72              		.section	.text.UART_Stop,"ax",%progbits
  73              		.align	2
  74              		.global	UART_Stop
  75              		.thumb
  76              		.thumb_func
  77              		.type	UART_Stop, %function
  78              	UART_Stop:
  79              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
  80              		.loc 1 241 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 10B5     		push	{r4, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  88              		.loc 1 243 0
  89 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  90              	.LVL5:
  91 0006 0446     		mov	r4, r0
  92              	.LVL6:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
  93              		.loc 1 247 0
  94 0008 0A4A     		ldr	r2, .L7
  95 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 7


  96 000c 03F0DF03 		and	r3, r3, #223
  97 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
  98              		.loc 1 257 0
  99 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 100              	.LVL7:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 101              		.loc 1 262 0
 102 0016 084A     		ldr	r2, .L7+4
 103 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 104 001a 03F0EF03 		and	r3, r3, #239
 105 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 106              		.loc 1 270 0
 107 0020 013A     		subs	r2, r2, #1
 108 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 109 0024 03F0EF03 		and	r3, r3, #239
 110 0028 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 111              		.loc 1 277 0
 112 002a 2046     		mov	r0, r4
 113 002c FFF7FEFF 		bl	CyExitCriticalSection
 114              	.LVL8:
 115 0030 10BD     		pop	{r4, pc}
 116              	.LVL9:
 117              	.L8:
 118 0032 00BF     		.align	2
 119              	.L7:
 120 0034 96640040 		.word	1073767574
 121 0038 93640040 		.word	1073767571
 122              		.cfi_endproc
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 8


 123              	.LFE3:
 124              		.size	UART_Stop, .-UART_Stop
 125              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 126              		.align	2
 127              		.global	UART_ReadControlRegister
 128              		.thumb
 129              		.thumb_func
 130              		.type	UART_ReadControlRegister, %function
 131              	UART_ReadControlRegister:
 132              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 133              		.loc 1 296 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 138              		.loc 1 300 0
 139 0000 014B     		ldr	r3, .L10
 140 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 141              		.loc 1 302 0
 142 0004 7047     		bx	lr
 143              	.L11:
 144 0006 00BF     		.align	2
 145              	.L10:
 146 0008 73640040 		.word	1073767539
 147              		.cfi_endproc
 148              	.LFE4:
 149              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 150              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 151              		.align	2
 152              		.global	UART_WriteControlRegister
 153              		.thumb
 154              		.thumb_func
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 9


 155              		.type	UART_WriteControlRegister, %function
 156              	UART_WriteControlRegister:
 157              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 158              		.loc 1 320 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL10:
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 164              		.loc 1 327 0
 165 0000 014B     		ldr	r3, .L13
 166 0002 1870     		strb	r0, [r3]
 167 0004 7047     		bx	lr
 168              	.L14:
 169 0006 00BF     		.align	2
 170              	.L13:
 171 0008 73640040 		.word	1073767539
 172              		.cfi_endproc
 173              	.LFE5:
 174              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 175              		.section	.text.UART_Init,"ax",%progbits
 176              		.align	2
 177              		.global	UART_Init
 178              		.thumb
 179              		.thumb_func
 180              		.type	UART_Init, %function
 181              	UART_Init:
 182              	.LFB1:
 107:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 183              		.loc 1 107 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 10


 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 08B5     		push	{r3, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 3, -8
 190              		.cfi_offset 14, -4
 124:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 191              		.loc 1 124 0
 192 0002 7222     		movs	r2, #114
 193 0004 0A4B     		ldr	r3, .L17
 194 0006 1A70     		strb	r2, [r3]
 126:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 195              		.loc 1 126 0
 196 0008 2022     		movs	r2, #32
 197 000a 033B     		subs	r3, r3, #3
 198 000c 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 199              		.loc 1 138 0
 200 000e 0622     		movs	r2, #6
 201 0010 583B     		subs	r3, r3, #88
 202 0012 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 203              		.loc 1 139 0
 204 0014 4722     		movs	r2, #71
 205 0016 1033     		adds	r3, r3, #16
 206 0018 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 207              		.loc 1 150 0
 208 001a 0022     		movs	r2, #0
 209 001c 4733     		adds	r3, r3, #71
 210 001e 1A70     		strb	r2, [r3]
 157:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 211              		.loc 1 157 0
 212 0020 FFF7FEFF 		bl	UART_ReadControlRegister
 213              	.LVL11:
 156:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 214              		.loc 1 156 0
 215 0024 00F0E700 		and	r0, r0, #231
 216 0028 FFF7FEFF 		bl	UART_WriteControlRegister
 217              	.LVL12:
 218 002c 08BD     		pop	{r3, pc}
 219              	.L18:
 220 002e 00BF     		.align	2
 221              	.L17:
 222 0030 86640040 		.word	1073767558
 223              		.cfi_endproc
 224              	.LFE1:
 225              		.size	UART_Init, .-UART_Init
 226              		.section	.text.UART_Start,"ax",%progbits
 227              		.align	2
 228              		.global	UART_Start
 229              		.thumb
 230              		.thumb_func
 231              		.type	UART_Start, %function
 232              	UART_Start:
 233              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 234              		.loc 1 77 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 11


 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 242              		.loc 1 79 0
 243 0002 054B     		ldr	r3, .L22
 244 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 0006 23B9     		cbnz	r3, .L20
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 246              		.loc 1 81 0
 247 0008 FFF7FEFF 		bl	UART_Init
 248              	.LVL13:
  82:Generated_Source\PSoC5/UART.c ****     }
 249              		.loc 1 82 0
 250 000c 0122     		movs	r2, #1
 251 000e 024B     		ldr	r3, .L22
 252 0010 1A70     		strb	r2, [r3]
 253              	.L20:
  85:Generated_Source\PSoC5/UART.c **** }
 254              		.loc 1 85 0
 255 0012 FFF7FEFF 		bl	UART_Enable
 256              	.LVL14:
 257 0016 08BD     		pop	{r3, pc}
 258              	.L23:
 259              		.align	2
 260              	.L22:
 261 0018 00000000 		.word	.LANCHOR0
 262              		.cfi_endproc
 263              	.LFE0:
 264              		.size	UART_Start, .-UART_Start
 265              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 266              		.align	2
 267              		.global	UART_SetRxInterruptMode
 268              		.thumb
 269              		.thumb_func
 270              		.type	UART_SetRxInterruptMode, %function
 271              	UART_SetRxInterruptMode:
 272              	.LFB6:
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 12


 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 273              		.loc 1 360 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278              	.LVL15:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 279              		.loc 1 361 0
 280 0000 014B     		ldr	r3, .L25
 281 0002 1870     		strb	r0, [r3]
 282 0004 7047     		bx	lr
 283              	.L26:
 284 0006 00BF     		.align	2
 285              	.L25:
 286 0008 83640040 		.word	1073767555
 287              		.cfi_endproc
 288              	.LFE6:
 289              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 290              		.section	.text.UART_ReadRxData,"ax",%progbits
 291              		.align	2
 292              		.global	UART_ReadRxData
 293              		.thumb
 294              		.thumb_func
 295              		.type	UART_ReadRxData, %function
 296              	UART_ReadRxData:
 297              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 13


 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 298              		.loc 1 393 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 14


 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 303              		.loc 1 448 0
 304 0000 014B     		ldr	r3, .L28
 305 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 306              	.LVL16:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 307              		.loc 1 453 0
 308 0004 7047     		bx	lr
 309              	.L29:
 310 0006 00BF     		.align	2
 311              	.L28:
 312 0008 43640040 		.word	1073767491
 313              		.cfi_endproc
 314              	.LFE7:
 315              		.size	UART_ReadRxData, .-UART_ReadRxData
 316              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 317              		.align	2
 318              		.global	UART_ReadRxStatus
 319              		.thumb
 320              		.thumb_func
 321              		.type	UART_ReadRxStatus, %function
 322              	UART_ReadRxStatus:
 323              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 15


 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 324              		.loc 1 486 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 329              		.loc 1 489 0
 330 0000 024B     		ldr	r3, .L31
 331 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 332              	.LVL17:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 333              		.loc 1 500 0
 334 0004 00F07F00 		and	r0, r0, #127
 335              	.LVL18:
 336 0008 7047     		bx	lr
 337              	.L32:
 338 000a 00BF     		.align	2
 339              	.L31:
 340 000c 63640040 		.word	1073767523
 341              		.cfi_endproc
 342              	.LFE8:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 16


 343              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 344              		.section	.text.UART_GetChar,"ax",%progbits
 345              		.align	2
 346              		.global	UART_GetChar
 347              		.thumb
 348              		.thumb_func
 349              		.type	UART_GetChar, %function
 350              	UART_GetChar:
 351              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 352              		.loc 1 533 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357              	.LVL19:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 17


 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 358              		.loc 1 596 0
 359 0000 084B     		ldr	r3, .L37
 360 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 18


 361 0004 DBB2     		uxtb	r3, r3
 362              	.LVL20:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 363              		.loc 1 597 0
 364 0006 13F0200F 		tst	r3, #32
 365 000a 06D0     		beq	.L35
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 366              		.loc 1 600 0
 367 000c 064A     		ldr	r2, .L37+4
 368 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 369 0010 C0B2     		uxtb	r0, r0
 370              	.LVL21:
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 371              		.loc 1 603 0
 372 0012 13F01E0F 		tst	r3, #30
 373 0016 02D1     		bne	.L36
 374 0018 7047     		bx	lr
 375              	.LVL22:
 376              	.L35:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 377              		.loc 1 534 0
 378 001a 0020     		movs	r0, #0
 379 001c 7047     		bx	lr
 380              	.LVL23:
 381              	.L36:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 382              		.loc 1 606 0
 383 001e 0020     		movs	r0, #0
 384              	.LVL24:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 385              		.loc 1 612 0
 386 0020 7047     		bx	lr
 387              	.L38:
 388 0022 00BF     		.align	2
 389              	.L37:
 390 0024 63640040 		.word	1073767523
 391 0028 43640040 		.word	1073767491
 392              		.cfi_endproc
 393              	.LFE9:
 394              		.size	UART_GetChar, .-UART_GetChar
 395              		.section	.text.UART_GetByte,"ax",%progbits
 396              		.align	2
 397              		.global	UART_GetByte
 398              		.thumb
 399              		.thumb_func
 400              		.type	UART_GetByte, %function
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 19


 401              	UART_GetByte:
 402              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 403              		.loc 1 635 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 10B5     		push	{r4, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 411              		.loc 1 646 0
 412 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 413              	.LVL25:
 414 0006 0402     		lsls	r4, r0, #8
 415 0008 FFF7FEFF 		bl	UART_ReadRxData
 416              	.LVL26:
 417 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 418              		.loc 1 649 0
 419 000e 80B2     		uxth	r0, r0
 420 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 20


 421              		.cfi_endproc
 422              	.LFE10:
 423              		.size	UART_GetByte, .-UART_GetByte
 424 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 425              		.align	2
 426              		.global	UART_GetRxBufferSize
 427              		.thumb
 428              		.thumb_func
 429              		.type	UART_GetRxBufferSize, %function
 430              	UART_GetRxBufferSize:
 431              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 432              		.loc 1 685 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 21


 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 437              		.loc 1 718 0
 438 0000 044B     		ldr	r3, .L44
 439 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440 0004 13F0200F 		tst	r3, #32
 441 0008 01D0     		beq	.L43
 442 000a 0120     		movs	r0, #1
 443 000c 7047     		bx	lr
 444              	.L43:
 445 000e 0020     		movs	r0, #0
 446              	.LVL27:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 447              		.loc 1 723 0
 448 0010 7047     		bx	lr
 449              	.L45:
 450 0012 00BF     		.align	2
 451              	.L44:
 452 0014 63640040 		.word	1073767523
 453              		.cfi_endproc
 454              	.LFE11:
 455              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 456              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 457              		.align	2
 458              		.global	UART_ClearRxBuffer
 459              		.thumb
 460              		.thumb_func
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 22


 461              		.type	UART_ClearRxBuffer, %function
 462              	UART_ClearRxBuffer:
 463              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 464              		.loc 1 758 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 08B5     		push	{r3, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 472              		.loc 1 762 0
 473 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 474              	.LVL28:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 475              		.loc 1 763 0
 476 0006 064B     		ldr	r3, .L48
 477 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 23


 478 000a 42F00102 		orr	r2, r2, #1
 479 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 480              		.loc 1 764 0
 481 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 482 0012 02F0FE02 		and	r2, r2, #254
 483 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 484              		.loc 1 765 0
 485 0018 FFF7FEFF 		bl	CyExitCriticalSection
 486              	.LVL29:
 487 001c 08BD     		pop	{r3, pc}
 488              	.L49:
 489 001e 00BF     		.align	2
 490              	.L48:
 491 0020 93640040 		.word	1073767571
 492              		.cfi_endproc
 493              	.LFE12:
 494              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 495              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 496              		.align	2
 497              		.global	UART_SetRxAddressMode
 498              		.thumb
 499              		.thumb_func
 500              		.type	UART_SetRxAddressMode, %function
 501              	UART_SetRxAddressMode:
 502              	.LFB13:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 24


 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 503              		.loc 1 815 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508              	.LVL30:
 509 0000 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE13:
 512              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 513 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 514              		.align	2
 515              		.global	UART_SetRxAddress1
 516              		.thumb
 517              		.thumb_func
 518              		.type	UART_SetRxAddress1, %function
 519              	UART_SetRxAddress1:
 520              	.LFB14:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 25


 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 521              		.loc 1 858 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL31:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 527              		.loc 1 859 0
 528 0000 014B     		ldr	r3, .L52
 529 0002 1870     		strb	r0, [r3]
 530 0004 7047     		bx	lr
 531              	.L53:
 532 0006 00BF     		.align	2
 533              	.L52:
 534 0008 23640040 		.word	1073767459
 535              		.cfi_endproc
 536              	.LFE14:
 537              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 538              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 539              		.align	2
 540              		.global	UART_SetRxAddress2
 541              		.thumb
 542              		.thumb_func
 543              		.type	UART_SetRxAddress2, %function
 544              	UART_SetRxAddress2:
 545              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 26


 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 546              		.loc 1 878 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551              	.LVL32:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 552              		.loc 1 879 0
 553 0000 014B     		ldr	r3, .L55
 554 0002 1870     		strb	r0, [r3]
 555 0004 7047     		bx	lr
 556              	.L56:
 557 0006 00BF     		.align	2
 558              	.L55:
 559 0008 33640040 		.word	1073767475
 560              		.cfi_endproc
 561              	.LFE15:
 562              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 563              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 564              		.align	2
 565              		.global	UART_SetTxInterruptMode
 566              		.thumb
 567              		.thumb_func
 568              		.type	UART_SetTxInterruptMode, %function
 569              	UART_SetTxInterruptMode:
 570              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 27


 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 571              		.loc 1 909 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL33:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 577              		.loc 1 910 0
 578 0000 014B     		ldr	r3, .L58
 579 0002 1870     		strb	r0, [r3]
 580 0004 7047     		bx	lr
 581              	.L59:
 582 0006 00BF     		.align	2
 583              	.L58:
 584 0008 82640040 		.word	1073767554
 585              		.cfi_endproc
 586              	.LFE16:
 587              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 588              		.section	.text.UART_WriteTxData,"ax",%progbits
 589              		.align	2
 590              		.global	UART_WriteTxData
 591              		.thumb
 592              		.thumb_func
 593              		.type	UART_WriteTxData, %function
 594              	UART_WriteTxData:
 595              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 28


 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 596              		.loc 1 943 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL34:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 602              		.loc 1 945 0
 603 0000 024B     		ldr	r3, .L62
 604 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 0004 0BB1     		cbz	r3, .L60
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 606              		.loc 1 976 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 29


 607 0006 024B     		ldr	r3, .L62+4
 608 0008 1870     		strb	r0, [r3]
 609              	.L60:
 610 000a 7047     		bx	lr
 611              	.L63:
 612              		.align	2
 613              	.L62:
 614 000c 00000000 		.word	.LANCHOR0
 615 0010 40640040 		.word	1073767488
 616              		.cfi_endproc
 617              	.LFE17:
 618              		.size	UART_WriteTxData, .-UART_WriteTxData
 619              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 620              		.align	2
 621              		.global	UART_ReadTxStatus
 622              		.thumb
 623              		.thumb_func
 624              		.type	UART_ReadTxStatus, %function
 625              	UART_ReadTxStatus:
 626              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 627              		.loc 1 1004 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 632              		.loc 1 1005 0
 633 0000 014B     		ldr	r3, .L65
 634 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 30


1006:Generated_Source\PSoC5/UART.c ****     }
 635              		.loc 1 1006 0
 636 0004 7047     		bx	lr
 637              	.L66:
 638 0006 00BF     		.align	2
 639              	.L65:
 640 0008 62640040 		.word	1073767522
 641              		.cfi_endproc
 642              	.LFE18:
 643              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 644              		.section	.text.UART_PutChar,"ax",%progbits
 645              		.align	2
 646              		.global	UART_PutChar
 647              		.thumb
 648              		.thumb_func
 649              		.type	UART_PutChar, %function
 650              	UART_PutChar:
 651              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 652              		.loc 1 1042 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 31


 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL35:
 658              	.L68:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 32


1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 659              		.loc 1 1107 0 discriminator 1
 660 0000 034B     		ldr	r3, .L69
 661 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 662 0004 13F0040F 		tst	r3, #4
 663 0008 FAD1     		bne	.L68
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 664              		.loc 1 1113 0
 665 000a 024B     		ldr	r3, .L69+4
 666 000c 1870     		strb	r0, [r3]
 667 000e 7047     		bx	lr
 668              	.L70:
 669              		.align	2
 670              	.L69:
 671 0010 62640040 		.word	1073767522
 672 0014 40640040 		.word	1073767488
 673              		.cfi_endproc
 674              	.LFE19:
 675              		.size	UART_PutChar, .-UART_PutChar
 676              		.section	.text.UART_PutString,"ax",%progbits
 677              		.align	2
 678              		.global	UART_PutString
 679              		.thumb
 680              		.thumb_func
 681              		.type	UART_PutString, %function
 682              	UART_PutString:
 683              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 33


1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 684              		.loc 1 1146 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              	.LVL36:
 689 0000 38B5     		push	{r3, r4, r5, lr}
 690              		.cfi_def_cfa_offset 16
 691              		.cfi_offset 3, -16
 692              		.cfi_offset 4, -12
 693              		.cfi_offset 5, -8
 694              		.cfi_offset 14, -4
 695              	.LVL37:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 696              		.loc 1 1150 0
 697 0002 074B     		ldr	r3, .L77
 698 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 699 0006 2BB9     		cbnz	r3, .L75
 700 0008 38BD     		pop	{r3, r4, r5, pc}
 701              	.LVL38:
 702              	.L74:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 703              		.loc 1 1155 0
 704 000a FFF7FEFF 		bl	UART_PutChar
 705              	.LVL39:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 706              		.loc 1 1156 0
 707 000e 0134     		adds	r4, r4, #1
 708              	.LVL40:
 709 0010 A4B2     		uxth	r4, r4
 710              	.LVL41:
 711 0012 01E0     		b	.L72
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 34


 712              	.LVL42:
 713              	.L75:
 714 0014 0546     		mov	r5, r0
 715 0016 0024     		movs	r4, #0
 716              	.LVL43:
 717              	.L72:
1153:Generated_Source\PSoC5/UART.c ****             {
 718              		.loc 1 1153 0
 719 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 720 001a 0028     		cmp	r0, #0
 721 001c F5D1     		bne	.L74
 722 001e 38BD     		pop	{r3, r4, r5, pc}
 723              	.LVL44:
 724              	.L78:
 725              		.align	2
 726              	.L77:
 727 0020 00000000 		.word	.LANCHOR0
 728              		.cfi_endproc
 729              	.LFE20:
 730              		.size	UART_PutString, .-UART_PutString
 731              		.section	.text.UART_PutArray,"ax",%progbits
 732              		.align	2
 733              		.global	UART_PutArray
 734              		.thumb
 735              		.thumb_func
 736              		.type	UART_PutArray, %function
 737              	UART_PutArray:
 738              	.LFB21:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 35


1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 739              		.loc 1 1193 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              	.LVL45:
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 744              		.loc 1 1197 0
 745 0000 084B     		ldr	r3, .L85
 746 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 0004 33B9     		cbnz	r3, .L83
 748 0006 7047     		bx	lr
 749              	.LVL46:
 750              	.L82:
 751              		.cfi_def_cfa_offset 16
 752              		.cfi_offset 4, -16
 753              		.cfi_offset 5, -12
 754              		.cfi_offset 6, -8
 755              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 756              		.loc 1 1201 0
 757 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 758 000a FFF7FEFF 		bl	UART_PutChar
 759              	.LVL47:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 760              		.loc 1 1202 0
 761 000e 0134     		adds	r4, r4, #1
 762              	.LVL48:
 763 0010 E4B2     		uxtb	r4, r4
 764              	.LVL49:
 765 0012 03E0     		b	.L80
 766              	.LVL50:
 767              	.L83:
 768              		.cfi_def_cfa_offset 0
 769              		.cfi_restore 4
 770              		.cfi_restore 5
 771              		.cfi_restore 6
 772              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 773              		.loc 1 1193 0
 774 0014 70B5     		push	{r4, r5, r6, lr}
 775              		.cfi_def_cfa_offset 16
 776              		.cfi_offset 4, -16
 777              		.cfi_offset 5, -12
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 36


 778              		.cfi_offset 6, -8
 779              		.cfi_offset 14, -4
 780 0016 0D46     		mov	r5, r1
 781 0018 0646     		mov	r6, r0
 782 001a 0024     		movs	r4, #0
 783              	.LVL51:
 784              	.L80:
1199:Generated_Source\PSoC5/UART.c ****             {
 785              		.loc 1 1199 0
 786 001c AC42     		cmp	r4, r5
 787 001e F3D3     		bcc	.L82
 788 0020 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL52:
 790              	.L86:
 791 0022 00BF     		.align	2
 792              	.L85:
 793 0024 00000000 		.word	.LANCHOR0
 794              		.cfi_endproc
 795              	.LFE21:
 796              		.size	UART_PutArray, .-UART_PutArray
 797              		.section	.text.UART_PutCRLF,"ax",%progbits
 798              		.align	2
 799              		.global	UART_PutCRLF
 800              		.thumb
 801              		.thumb_func
 802              		.type	UART_PutCRLF, %function
 803              	UART_PutCRLF:
 804              	.LFB22:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 37


 805              		.loc 1 1231 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL53:
 810 0000 08B5     		push	{r3, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 3, -8
 813              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 814              		.loc 1 1233 0
 815 0002 064B     		ldr	r3, .L90
 816 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 817 0006 3BB1     		cbz	r3, .L87
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 818              		.loc 1 1235 0
 819 0008 FFF7FEFF 		bl	UART_PutChar
 820              	.LVL54:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 821              		.loc 1 1236 0
 822 000c 0D20     		movs	r0, #13
 823 000e FFF7FEFF 		bl	UART_PutChar
 824              	.LVL55:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 825              		.loc 1 1237 0
 826 0012 0A20     		movs	r0, #10
 827 0014 FFF7FEFF 		bl	UART_PutChar
 828              	.LVL56:
 829              	.L87:
 830 0018 08BD     		pop	{r3, pc}
 831              	.L91:
 832 001a 00BF     		.align	2
 833              	.L90:
 834 001c 00000000 		.word	.LANCHOR0
 835              		.cfi_endproc
 836              	.LFE22:
 837              		.size	UART_PutCRLF, .-UART_PutCRLF
 838              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 839              		.align	2
 840              		.global	UART_GetTxBufferSize
 841              		.thumb
 842              		.thumb_func
 843              		.type	UART_GetTxBufferSize, %function
 844              	UART_GetTxBufferSize:
 845              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 38


1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 846              		.loc 1 1275 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 39


1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 851              		.loc 1 1301 0
 852 0000 074B     		ldr	r3, .L96
 853 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 854 0004 DBB2     		uxtb	r3, r3
 855              	.LVL57:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 856              		.loc 1 1304 0
 857 0006 13F0040F 		tst	r3, #4
 858 000a 04D1     		bne	.L94
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 859              		.loc 1 1308 0
 860 000c 13F0020F 		tst	r3, #2
 861 0010 03D0     		beq	.L95
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
 862              		.loc 1 1310 0
 863 0012 0020     		movs	r0, #0
 864 0014 7047     		bx	lr
 865              	.L94:
1306:Generated_Source\PSoC5/UART.c ****         }
 866              		.loc 1 1306 0
 867 0016 0420     		movs	r0, #4
 868 0018 7047     		bx	lr
 869              	.L95:
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
 870              		.loc 1 1315 0
 871 001a 0120     		movs	r0, #1
 872              	.LVL58:
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 873              		.loc 1 1321 0
 874 001c 7047     		bx	lr
 875              	.L97:
 876 001e 00BF     		.align	2
 877              	.L96:
 878 0020 62640040 		.word	1073767522
 879              		.cfi_endproc
 880              	.LFE23:
 881              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 882              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 883              		.align	2
 884              		.global	UART_ClearTxBuffer
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 40


 885              		.thumb
 886              		.thumb_func
 887              		.type	UART_ClearTxBuffer, %function
 888              	UART_ClearTxBuffer:
 889              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 890              		.loc 1 1355 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894 0000 08B5     		push	{r3, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 3, -8
 897              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 898              		.loc 1 1358 0
 899 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 900              	.LVL59:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 901              		.loc 1 1360 0
 902 0006 064B     		ldr	r3, .L100
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 41


 903 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 904 000a 42F00102 		orr	r2, r2, #1
 905 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 906              		.loc 1 1361 0
 907 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 908 0012 02F0FE02 		and	r2, r2, #254
 909 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 910              		.loc 1 1362 0
 911 0018 FFF7FEFF 		bl	CyExitCriticalSection
 912              	.LVL60:
 913 001c 08BD     		pop	{r3, pc}
 914              	.L101:
 915 001e 00BF     		.align	2
 916              	.L100:
 917 0020 90640040 		.word	1073767568
 918              		.cfi_endproc
 919              	.LFE24:
 920              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 921              		.section	.text.UART_SendBreak,"ax",%progbits
 922              		.align	2
 923              		.global	UART_SendBreak
 924              		.thumb
 925              		.thumb_func
 926              		.type	UART_SendBreak, %function
 927              	UART_SendBreak:
 928              	.LFB25:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 42


1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 929              		.loc 1 1441 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL61:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 43


1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 934              		.loc 1 1444 0
 935 0000 1A4B     		ldr	r3, .L111
 936 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 0004 8BB3     		cbz	r3, .L110
1441:Generated_Source\PSoC5/UART.c **** 
 938              		.loc 1 1441 0
 939 0006 10B5     		push	{r4, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 4, -8
 942              		.cfi_offset 14, -4
 943 0008 0446     		mov	r4, r0
 944              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 44


1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 945              		.loc 1 1490 0
 946 000a 08B1     		cbz	r0, .L104
 947              		.loc 1 1490 0 is_stmt 0 discriminator 1
 948 000c 0328     		cmp	r0, #3
 949 000e 14D1     		bne	.L105
 950              	.L104:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
 951              		.loc 1 1496 0 is_stmt 1
 952 0010 FFF7FEFF 		bl	UART_ReadControlRegister
 953              	.LVL62:
 954 0014 40F00200 		orr	r0, r0, #2
 955 0018 C0B2     		uxtb	r0, r0
 956 001a FFF7FEFF 		bl	UART_WriteControlRegister
 957              	.LVL63:
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 958              		.loc 1 1501 0
 959 001e 144B     		ldr	r3, .L111+4
 960 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 961 0022 124A     		ldr	r2, .L111
 962 0024 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 963              		.loc 1 1502 0
 964 0026 6722     		movs	r2, #103
 965 0028 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 966              		.loc 1 1509 0
 967 002a 0022     		movs	r2, #0
 968 002c 0533     		adds	r3, r3, #5
 969 002e 1A70     		strb	r2, [r3]
 970              	.L106:
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 971              		.loc 1 1513 0 discriminator 1
 972 0030 104B     		ldr	r3, .L111+8
 973 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974              	.LVL64:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 45


 975              		.loc 1 1515 0 discriminator 1
 976 0034 13F0020F 		tst	r3, #2
 977 0038 FAD1     		bne	.L106
 978              	.LVL65:
 979              	.L105:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 980              		.loc 1 1518 0
 981 003a 012C     		cmp	r4, #1
 982 003c 01D0     		beq	.L107
 983              		.loc 1 1518 0 is_stmt 0 discriminator 1
 984 003e 032C     		cmp	r4, #3
 985 0040 04D1     		bne	.L108
 986              	.L107:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 987              		.loc 1 1523 0 is_stmt 1 discriminator 1
 988 0042 0C4B     		ldr	r3, .L111+8
 989 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990              	.LVL66:
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 991              		.loc 1 1525 0 discriminator 1
 992 0046 13F0010F 		tst	r3, #1
 993 004a FAD0     		beq	.L107
 994              	.LVL67:
 995              	.L108:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 996              		.loc 1 1529 0
 997 004c 013C     		subs	r4, r4, #1
 998 004e E4B2     		uxtb	r4, r4
1528:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 999              		.loc 1 1528 0
 1000 0050 022C     		cmp	r4, #2
 1001 0052 09D8     		bhi	.L102
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1002              		.loc 1 1534 0
 1003 0054 054B     		ldr	r3, .L111
 1004 0056 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1005 0058 054B     		ldr	r3, .L111+4
 1006 005a 1A70     		strb	r2, [r3]
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 46


1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
 1007              		.loc 1 1541 0
 1008 005c FFF7FEFF 		bl	UART_ReadControlRegister
 1009              	.LVL68:
 1010 0060 00F0FD00 		and	r0, r0, #253
 1011 0064 FFF7FEFF 		bl	UART_WriteControlRegister
 1012              	.LVL69:
 1013              	.L102:
 1014 0068 10BD     		pop	{r4, pc}
 1015              	.LVL70:
 1016              	.L110:
 1017              		.cfi_def_cfa_offset 0
 1018              		.cfi_restore 4
 1019              		.cfi_restore 14
 1020 006a 7047     		bx	lr
 1021              	.L112:
 1022              		.align	2
 1023              	.L111:
 1024 006c 00000000 		.word	.LANCHOR0
 1025 0070 3B640040 		.word	1073767483
 1026 0074 62640040 		.word	1073767522
 1027              	.LBE2:
 1028              		.cfi_endproc
 1029              	.LFE25:
 1030              		.size	UART_SendBreak, .-UART_SendBreak
 1031              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1032              		.align	2
 1033              		.global	UART_SetTxAddressMode
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	UART_SetTxAddressMode, %function
 1037              	UART_SetTxAddressMode:
 1038              	.LFB26:
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 47


1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1039              		.loc 1 1573 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              	.LVL71:
 1044 0000 08B5     		push	{r3, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 3, -8
 1047              		.cfi_offset 14, -4
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
 1048              		.loc 1 1575 0
 1049 0002 38B1     		cbz	r0, .L114
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
 1050              		.loc 1 1578 0
 1051 0004 FFF7FEFF 		bl	UART_ReadControlRegister
 1052              	.LVL72:
 1053 0008 40F00400 		orr	r0, r0, #4
 1054 000c C0B2     		uxtb	r0, r0
 1055 000e FFF7FEFF 		bl	UART_WriteControlRegister
 1056              	.LVL73:
 1057 0012 08BD     		pop	{r3, pc}
 1058              	.LVL74:
 1059              	.L114:
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
 1060              		.loc 1 1585 0
 1061 0014 FFF7FEFF 		bl	UART_ReadControlRegister
 1062              	.LVL75:
 1063 0018 00F0FB00 		and	r0, r0, #251
 1064 001c FFF7FEFF 		bl	UART_WriteControlRegister
 1065              	.LVL76:
 1066 0020 08BD     		pop	{r3, pc}
 1067              		.cfi_endproc
 1068              	.LFE26:
 1069              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1070              		.global	UART_initVar
 1071 0022 00BF     		.bss
 1072              		.set	.LANCHOR0,. + 0
 1073              		.type	UART_initVar, %object
 1074              		.size	UART_initVar, 1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 48


 1075              	UART_initVar:
 1076 0000 00       		.space	1
 1077              		.type	txPeriod.5123, %object
 1078              		.size	txPeriod.5123, 1
 1079              	txPeriod.5123:
 1080 0001 00       		.space	1
 1081              		.text
 1082              	.Letext0:
 1083              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1084              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1085              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1086              		.section	.debug_info,"",%progbits
 1087              	.Ldebug_info0:
 1088 0000 69060000 		.4byte	0x669
 1089 0004 0400     		.2byte	0x4
 1090 0006 00000000 		.4byte	.Ldebug_abbrev0
 1091 000a 04       		.byte	0x4
 1092 000b 01       		.uleb128 0x1
 1093 000c 14030000 		.4byte	.LASF65
 1094 0010 0C       		.byte	0xc
 1095 0011 8E020000 		.4byte	.LASF66
 1096 0015 83000000 		.4byte	.LASF67
 1097 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1098 001d 00000000 		.4byte	0
 1099 0021 00000000 		.4byte	.Ldebug_line0
 1100 0025 02       		.uleb128 0x2
 1101 0026 01       		.byte	0x1
 1102 0027 06       		.byte	0x6
 1103 0028 77000000 		.4byte	.LASF0
 1104 002c 02       		.uleb128 0x2
 1105 002d 01       		.byte	0x1
 1106 002e 08       		.byte	0x8
 1107 002f DC020000 		.4byte	.LASF1
 1108 0033 02       		.uleb128 0x2
 1109 0034 02       		.byte	0x2
 1110 0035 05       		.byte	0x5
 1111 0036 FB020000 		.4byte	.LASF2
 1112 003a 02       		.uleb128 0x2
 1113 003b 02       		.byte	0x2
 1114 003c 07       		.byte	0x7
 1115 003d C8010000 		.4byte	.LASF3
 1116 0041 02       		.uleb128 0x2
 1117 0042 04       		.byte	0x4
 1118 0043 05       		.byte	0x5
 1119 0044 E0000000 		.4byte	.LASF4
 1120 0048 02       		.uleb128 0x2
 1121 0049 04       		.byte	0x4
 1122 004a 07       		.byte	0x7
 1123 004b 8C010000 		.4byte	.LASF5
 1124 004f 02       		.uleb128 0x2
 1125 0050 08       		.byte	0x8
 1126 0051 05       		.byte	0x5
 1127 0052 69000000 		.4byte	.LASF6
 1128 0056 02       		.uleb128 0x2
 1129 0057 08       		.byte	0x8
 1130 0058 07       		.byte	0x7
 1131 0059 2F000000 		.4byte	.LASF7
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 49


 1132 005d 03       		.uleb128 0x3
 1133 005e 04       		.byte	0x4
 1134 005f 05       		.byte	0x5
 1135 0060 696E7400 		.ascii	"int\000"
 1136 0064 02       		.uleb128 0x2
 1137 0065 04       		.byte	0x4
 1138 0066 07       		.byte	0x7
 1139 0067 5F010000 		.4byte	.LASF8
 1140 006b 04       		.uleb128 0x4
 1141 006c 06010000 		.4byte	.LASF9
 1142 0070 02       		.byte	0x2
 1143 0071 E401     		.2byte	0x1e4
 1144 0073 2C000000 		.4byte	0x2c
 1145 0077 04       		.uleb128 0x4
 1146 0078 00000000 		.4byte	.LASF10
 1147 007c 02       		.byte	0x2
 1148 007d E501     		.2byte	0x1e5
 1149 007f 3A000000 		.4byte	0x3a
 1150 0083 02       		.uleb128 0x2
 1151 0084 04       		.byte	0x4
 1152 0085 04       		.byte	0x4
 1153 0086 45040000 		.4byte	.LASF11
 1154 008a 02       		.uleb128 0x2
 1155 008b 08       		.byte	0x8
 1156 008c 04       		.byte	0x4
 1157 008d 25010000 		.4byte	.LASF12
 1158 0091 04       		.uleb128 0x4
 1159 0092 D6030000 		.4byte	.LASF13
 1160 0096 02       		.byte	0x2
 1161 0097 F501     		.2byte	0x1f5
 1162 0099 9D000000 		.4byte	0x9d
 1163 009d 02       		.uleb128 0x2
 1164 009e 01       		.byte	0x1
 1165 009f 08       		.byte	0x8
 1166 00a0 D1030000 		.4byte	.LASF14
 1167 00a4 04       		.uleb128 0x4
 1168 00a5 C1020000 		.4byte	.LASF15
 1169 00a9 02       		.byte	0x2
 1170 00aa 8E02     		.2byte	0x28e
 1171 00ac B0000000 		.4byte	0xb0
 1172 00b0 05       		.uleb128 0x5
 1173 00b1 6B000000 		.4byte	0x6b
 1174 00b5 02       		.uleb128 0x2
 1175 00b6 08       		.byte	0x8
 1176 00b7 04       		.byte	0x4
 1177 00b8 38020000 		.4byte	.LASF16
 1178 00bc 02       		.uleb128 0x2
 1179 00bd 04       		.byte	0x4
 1180 00be 07       		.byte	0x7
 1181 00bf 2F020000 		.4byte	.LASF17
 1182 00c3 06       		.uleb128 0x6
 1183 00c4 B3030000 		.4byte	.LASF18
 1184 00c8 01       		.byte	0x1
 1185 00c9 B7       		.byte	0xb7
 1186 00ca 00000000 		.4byte	.LFB2
 1187 00ce 38000000 		.4byte	.LFE2-.LFB2
 1188 00d2 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 50


 1189 00d3 9C       		.byte	0x9c
 1190 00d4 0A010000 		.4byte	0x10a
 1191 00d8 07       		.uleb128 0x7
 1192 00d9 01040000 		.4byte	.LASF20
 1193 00dd 01       		.byte	0x1
 1194 00de B9       		.byte	0xb9
 1195 00df 6B000000 		.4byte	0x6b
 1196 00e3 00000000 		.4byte	.LLST0
 1197 00e7 08       		.uleb128 0x8
 1198 00e8 06000000 		.4byte	.LVL0
 1199 00ec 40060000 		.4byte	0x640
 1200 00f0 08       		.uleb128 0x8
 1201 00f1 2A000000 		.4byte	.LVL2
 1202 00f5 4B060000 		.4byte	0x64b
 1203 00f9 09       		.uleb128 0x9
 1204 00fa 30000000 		.4byte	.LVL3
 1205 00fe 56060000 		.4byte	0x656
 1206 0102 0A       		.uleb128 0xa
 1207 0103 01       		.uleb128 0x1
 1208 0104 50       		.byte	0x50
 1209 0105 02       		.uleb128 0x2
 1210 0106 74       		.byte	0x74
 1211 0107 00       		.sleb128 0
 1212 0108 00       		.byte	0
 1213 0109 00       		.byte	0
 1214 010a 06       		.uleb128 0x6
 1215 010b 3B040000 		.4byte	.LASF19
 1216 010f 01       		.byte	0x1
 1217 0110 F0       		.byte	0xf0
 1218 0111 00000000 		.4byte	.LFB3
 1219 0115 3C000000 		.4byte	.LFE3-.LFB3
 1220 0119 01       		.uleb128 0x1
 1221 011a 9C       		.byte	0x9c
 1222 011b 51010000 		.4byte	0x151
 1223 011f 07       		.uleb128 0x7
 1224 0120 01040000 		.4byte	.LASF20
 1225 0124 01       		.byte	0x1
 1226 0125 F2       		.byte	0xf2
 1227 0126 6B000000 		.4byte	0x6b
 1228 012a 13000000 		.4byte	.LLST1
 1229 012e 08       		.uleb128 0x8
 1230 012f 06000000 		.4byte	.LVL5
 1231 0133 40060000 		.4byte	0x640
 1232 0137 08       		.uleb128 0x8
 1233 0138 16000000 		.4byte	.LVL7
 1234 013c 61060000 		.4byte	0x661
 1235 0140 09       		.uleb128 0x9
 1236 0141 30000000 		.4byte	.LVL8
 1237 0145 56060000 		.4byte	0x656
 1238 0149 0A       		.uleb128 0xa
 1239 014a 01       		.uleb128 0x1
 1240 014b 50       		.byte	0x50
 1241 014c 02       		.uleb128 0x2
 1242 014d 74       		.byte	0x74
 1243 014e 00       		.sleb128 0
 1244 014f 00       		.byte	0
 1245 0150 00       		.byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 51


 1246 0151 0B       		.uleb128 0xb
 1247 0152 0C010000 		.4byte	.LASF45
 1248 0156 01       		.byte	0x1
 1249 0157 2701     		.2byte	0x127
 1250 0159 6B000000 		.4byte	0x6b
 1251 015d 00000000 		.4byte	.LFB4
 1252 0161 0C000000 		.4byte	.LFE4-.LFB4
 1253 0165 01       		.uleb128 0x1
 1254 0166 9C       		.byte	0x9c
 1255 0167 0C       		.uleb128 0xc
 1256 0168 5A040000 		.4byte	.LASF21
 1257 016c 01       		.byte	0x1
 1258 016d 3F01     		.2byte	0x13f
 1259 016f 00000000 		.4byte	.LFB5
 1260 0173 0C000000 		.4byte	.LFE5-.LFB5
 1261 0177 01       		.uleb128 0x1
 1262 0178 9C       		.byte	0x9c
 1263 0179 8C010000 		.4byte	0x18c
 1264 017d 0D       		.uleb128 0xd
 1265 017e 38010000 		.4byte	.LASF25
 1266 0182 01       		.byte	0x1
 1267 0183 3F01     		.2byte	0x13f
 1268 0185 6B000000 		.4byte	0x6b
 1269 0189 01       		.uleb128 0x1
 1270 018a 50       		.byte	0x50
 1271 018b 00       		.byte	0
 1272 018c 06       		.uleb128 0x6
 1273 018d 40010000 		.4byte	.LASF22
 1274 0191 01       		.byte	0x1
 1275 0192 6A       		.byte	0x6a
 1276 0193 00000000 		.4byte	.LFB1
 1277 0197 34000000 		.4byte	.LFE1-.LFB1
 1278 019b 01       		.uleb128 0x1
 1279 019c 9C       		.byte	0x9c
 1280 019d B4010000 		.4byte	0x1b4
 1281 01a1 08       		.uleb128 0x8
 1282 01a2 24000000 		.4byte	.LVL11
 1283 01a6 51010000 		.4byte	0x151
 1284 01aa 08       		.uleb128 0x8
 1285 01ab 2C000000 		.4byte	.LVL12
 1286 01af 67010000 		.4byte	0x167
 1287 01b3 00       		.byte	0
 1288 01b4 06       		.uleb128 0x6
 1289 01b5 46000000 		.4byte	.LASF23
 1290 01b9 01       		.byte	0x1
 1291 01ba 4C       		.byte	0x4c
 1292 01bb 00000000 		.4byte	.LFB0
 1293 01bf 1C000000 		.4byte	.LFE0-.LFB0
 1294 01c3 01       		.uleb128 0x1
 1295 01c4 9C       		.byte	0x9c
 1296 01c5 DC010000 		.4byte	0x1dc
 1297 01c9 08       		.uleb128 0x8
 1298 01ca 0C000000 		.4byte	.LVL13
 1299 01ce 8C010000 		.4byte	0x18c
 1300 01d2 08       		.uleb128 0x8
 1301 01d3 16000000 		.4byte	.LVL14
 1302 01d7 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 52


 1303 01db 00       		.byte	0
 1304 01dc 0C       		.uleb128 0xc
 1305 01dd DC030000 		.4byte	.LASF24
 1306 01e1 01       		.byte	0x1
 1307 01e2 6701     		.2byte	0x167
 1308 01e4 00000000 		.4byte	.LFB6
 1309 01e8 0C000000 		.4byte	.LFE6-.LFB6
 1310 01ec 01       		.uleb128 0x1
 1311 01ed 9C       		.byte	0x9c
 1312 01ee 01020000 		.4byte	0x201
 1313 01f2 0D       		.uleb128 0xd
 1314 01f3 E4010000 		.4byte	.LASF26
 1315 01f7 01       		.byte	0x1
 1316 01f8 6701     		.2byte	0x167
 1317 01fa 6B000000 		.4byte	0x6b
 1318 01fe 01       		.uleb128 0x1
 1319 01ff 50       		.byte	0x50
 1320 0200 00       		.byte	0
 1321 0201 0E       		.uleb128 0xe
 1322 0202 F6000000 		.4byte	.LASF28
 1323 0206 01       		.byte	0x1
 1324 0207 8801     		.2byte	0x188
 1325 0209 6B000000 		.4byte	0x6b
 1326 020d 00000000 		.4byte	.LFB7
 1327 0211 0C000000 		.4byte	.LFE7-.LFB7
 1328 0215 01       		.uleb128 0x1
 1329 0216 9C       		.byte	0x9c
 1330 0217 2A020000 		.4byte	0x22a
 1331 021b 0F       		.uleb128 0xf
 1332 021c AC030000 		.4byte	.LASF27
 1333 0220 01       		.byte	0x1
 1334 0221 8A01     		.2byte	0x18a
 1335 0223 6B000000 		.4byte	0x6b
 1336 0227 01       		.uleb128 0x1
 1337 0228 50       		.byte	0x50
 1338 0229 00       		.byte	0
 1339 022a 0E       		.uleb128 0xe
 1340 022b BF030000 		.4byte	.LASF29
 1341 022f 01       		.byte	0x1
 1342 0230 E501     		.2byte	0x1e5
 1343 0232 6B000000 		.4byte	0x6b
 1344 0236 00000000 		.4byte	.LFB8
 1345 023a 10000000 		.4byte	.LFE8-.LFB8
 1346 023e 01       		.uleb128 0x1
 1347 023f 9C       		.byte	0x9c
 1348 0240 55020000 		.4byte	0x255
 1349 0244 10       		.uleb128 0x10
 1350 0245 34040000 		.4byte	.LASF30
 1351 0249 01       		.byte	0x1
 1352 024a E701     		.2byte	0x1e7
 1353 024c 6B000000 		.4byte	0x6b
 1354 0250 26000000 		.4byte	.LLST2
 1355 0254 00       		.byte	0
 1356 0255 0E       		.uleb128 0xe
 1357 0256 F4030000 		.4byte	.LASF31
 1358 025a 01       		.byte	0x1
 1359 025b 1402     		.2byte	0x214
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 53


 1360 025d 6B000000 		.4byte	0x6b
 1361 0261 00000000 		.4byte	.LFB9
 1362 0265 2C000000 		.4byte	.LFE9-.LFB9
 1363 0269 01       		.uleb128 0x1
 1364 026a 9C       		.byte	0x9c
 1365 026b 8E020000 		.4byte	0x28e
 1366 026f 10       		.uleb128 0x10
 1367 0270 AC030000 		.4byte	.LASF27
 1368 0274 01       		.byte	0x1
 1369 0275 1602     		.2byte	0x216
 1370 0277 6B000000 		.4byte	0x6b
 1371 027b 3E000000 		.4byte	.LLST3
 1372 027f 0F       		.uleb128 0xf
 1373 0280 72020000 		.4byte	.LASF32
 1374 0284 01       		.byte	0x1
 1375 0285 1702     		.2byte	0x217
 1376 0287 6B000000 		.4byte	0x6b
 1377 028b 01       		.uleb128 0x1
 1378 028c 53       		.byte	0x53
 1379 028d 00       		.byte	0
 1380 028e 0E       		.uleb128 0xe
 1381 028f 52010000 		.4byte	.LASF33
 1382 0293 01       		.byte	0x1
 1383 0294 7A02     		.2byte	0x27a
 1384 0296 77000000 		.4byte	0x77
 1385 029a 00000000 		.4byte	.LFB10
 1386 029e 12000000 		.4byte	.LFE10-.LFB10
 1387 02a2 01       		.uleb128 0x1
 1388 02a3 9C       		.byte	0x9c
 1389 02a4 BB020000 		.4byte	0x2bb
 1390 02a8 08       		.uleb128 0x8
 1391 02a9 06000000 		.4byte	.LVL25
 1392 02ad 2A020000 		.4byte	0x22a
 1393 02b1 08       		.uleb128 0x8
 1394 02b2 0C000000 		.4byte	.LVL26
 1395 02b6 01020000 		.4byte	0x201
 1396 02ba 00       		.byte	0
 1397 02bb 0E       		.uleb128 0xe
 1398 02bc 1F040000 		.4byte	.LASF34
 1399 02c0 01       		.byte	0x1
 1400 02c1 AB02     		.2byte	0x2ab
 1401 02c3 6B000000 		.4byte	0x6b
 1402 02c7 00000000 		.4byte	.LFB11
 1403 02cb 18000000 		.4byte	.LFE11-.LFB11
 1404 02cf 01       		.uleb128 0x1
 1405 02d0 9C       		.byte	0x9c
 1406 02d1 E4020000 		.4byte	0x2e4
 1407 02d5 0F       		.uleb128 0xf
 1408 02d6 C3010000 		.4byte	.LASF35
 1409 02da 01       		.byte	0x1
 1410 02db AE02     		.2byte	0x2ae
 1411 02dd 6B000000 		.4byte	0x6b
 1412 02e1 01       		.uleb128 0x1
 1413 02e2 50       		.byte	0x50
 1414 02e3 00       		.byte	0
 1415 02e4 0C       		.uleb128 0xc
 1416 02e5 74040000 		.4byte	.LASF36
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 54


 1417 02e9 01       		.byte	0x1
 1418 02ea F502     		.2byte	0x2f5
 1419 02ec 00000000 		.4byte	.LFB12
 1420 02f0 24000000 		.4byte	.LFE12-.LFB12
 1421 02f4 01       		.uleb128 0x1
 1422 02f5 9C       		.byte	0x9c
 1423 02f6 1D030000 		.4byte	0x31d
 1424 02fa 10       		.uleb128 0x10
 1425 02fb 01040000 		.4byte	.LASF20
 1426 02ff 01       		.byte	0x1
 1427 0300 F702     		.2byte	0x2f7
 1428 0302 6B000000 		.4byte	0x6b
 1429 0306 74000000 		.4byte	.LLST4
 1430 030a 08       		.uleb128 0x8
 1431 030b 06000000 		.4byte	.LVL28
 1432 030f 40060000 		.4byte	0x640
 1433 0313 08       		.uleb128 0x8
 1434 0314 1C000000 		.4byte	.LVL29
 1435 0318 56060000 		.4byte	0x656
 1436 031c 00       		.byte	0
 1437 031d 0C       		.uleb128 0xc
 1438 031e C6020000 		.4byte	.LASF37
 1439 0322 01       		.byte	0x1
 1440 0323 2D03     		.2byte	0x32d
 1441 0325 00000000 		.4byte	.LFB13
 1442 0329 02000000 		.4byte	.LFE13-.LFB13
 1443 032d 01       		.uleb128 0x1
 1444 032e 9C       		.byte	0x9c
 1445 032f 42030000 		.4byte	0x342
 1446 0333 0D       		.uleb128 0xd
 1447 0334 2C010000 		.4byte	.LASF38
 1448 0338 01       		.byte	0x1
 1449 0339 2D03     		.2byte	0x32d
 1450 033b 6B000000 		.4byte	0x6b
 1451 033f 01       		.uleb128 0x1
 1452 0340 50       		.byte	0x50
 1453 0341 00       		.byte	0
 1454 0342 0C       		.uleb128 0xc
 1455 0343 4C020000 		.4byte	.LASF39
 1456 0347 01       		.byte	0x1
 1457 0348 5903     		.2byte	0x359
 1458 034a 00000000 		.4byte	.LFB14
 1459 034e 0C000000 		.4byte	.LFE14-.LFB14
 1460 0352 01       		.uleb128 0x1
 1461 0353 9C       		.byte	0x9c
 1462 0354 67030000 		.4byte	0x367
 1463 0358 0D       		.uleb128 0xd
 1464 0359 44020000 		.4byte	.LASF40
 1465 035d 01       		.byte	0x1
 1466 035e 5903     		.2byte	0x359
 1467 0360 6B000000 		.4byte	0x6b
 1468 0364 01       		.uleb128 0x1
 1469 0365 50       		.byte	0x50
 1470 0366 00       		.byte	0
 1471 0367 0C       		.uleb128 0xc
 1472 0368 5F020000 		.4byte	.LASF41
 1473 036c 01       		.byte	0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 55


 1474 036d 6D03     		.2byte	0x36d
 1475 036f 00000000 		.4byte	.LFB15
 1476 0373 0C000000 		.4byte	.LFE15-.LFB15
 1477 0377 01       		.uleb128 0x1
 1478 0378 9C       		.byte	0x9c
 1479 0379 8C030000 		.4byte	0x38c
 1480 037d 0D       		.uleb128 0xd
 1481 037e 44020000 		.4byte	.LASF40
 1482 0382 01       		.byte	0x1
 1483 0383 6D03     		.2byte	0x36d
 1484 0385 6B000000 		.4byte	0x6b
 1485 0389 01       		.uleb128 0x1
 1486 038a 50       		.byte	0x50
 1487 038b 00       		.byte	0
 1488 038c 0C       		.uleb128 0xc
 1489 038d 51000000 		.4byte	.LASF42
 1490 0391 01       		.byte	0x1
 1491 0392 8C03     		.2byte	0x38c
 1492 0394 00000000 		.4byte	.LFB16
 1493 0398 0C000000 		.4byte	.LFE16-.LFB16
 1494 039c 01       		.uleb128 0x1
 1495 039d 9C       		.byte	0x9c
 1496 039e B1030000 		.4byte	0x3b1
 1497 03a2 0D       		.uleb128 0xd
 1498 03a3 E4010000 		.4byte	.LASF26
 1499 03a7 01       		.byte	0x1
 1500 03a8 8C03     		.2byte	0x38c
 1501 03aa 6B000000 		.4byte	0x6b
 1502 03ae 01       		.uleb128 0x1
 1503 03af 50       		.byte	0x50
 1504 03b0 00       		.byte	0
 1505 03b1 0C       		.uleb128 0xc
 1506 03b2 EA020000 		.4byte	.LASF43
 1507 03b6 01       		.byte	0x1
 1508 03b7 AE03     		.2byte	0x3ae
 1509 03b9 00000000 		.4byte	.LFB17
 1510 03bd 14000000 		.4byte	.LFE17-.LFB17
 1511 03c1 01       		.uleb128 0x1
 1512 03c2 9C       		.byte	0x9c
 1513 03c3 D6030000 		.4byte	0x3d6
 1514 03c7 0D       		.uleb128 0xd
 1515 03c8 1D000000 		.4byte	.LASF44
 1516 03cc 01       		.byte	0x1
 1517 03cd AE03     		.2byte	0x3ae
 1518 03cf 6B000000 		.4byte	0x6b
 1519 03d3 01       		.uleb128 0x1
 1520 03d4 50       		.byte	0x50
 1521 03d5 00       		.byte	0
 1522 03d6 0B       		.uleb128 0xb
 1523 03d7 01020000 		.4byte	.LASF46
 1524 03db 01       		.byte	0x1
 1525 03dc EB03     		.2byte	0x3eb
 1526 03de 6B000000 		.4byte	0x6b
 1527 03e2 00000000 		.4byte	.LFB18
 1528 03e6 0C000000 		.4byte	.LFE18-.LFB18
 1529 03ea 01       		.uleb128 0x1
 1530 03eb 9C       		.byte	0x9c
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 56


 1531 03ec 0C       		.uleb128 0xc
 1532 03ed E9000000 		.4byte	.LASF47
 1533 03f1 01       		.byte	0x1
 1534 03f2 1104     		.2byte	0x411
 1535 03f4 00000000 		.4byte	.LFB19
 1536 03f8 18000000 		.4byte	.LFE19-.LFB19
 1537 03fc 01       		.uleb128 0x1
 1538 03fd 9C       		.byte	0x9c
 1539 03fe 11040000 		.4byte	0x411
 1540 0402 0D       		.uleb128 0xd
 1541 0403 1D000000 		.4byte	.LASF44
 1542 0407 01       		.byte	0x1
 1543 0408 1104     		.2byte	0x411
 1544 040a 6B000000 		.4byte	0x6b
 1545 040e 01       		.uleb128 0x1
 1546 040f 50       		.byte	0x50
 1547 0410 00       		.byte	0
 1548 0411 0C       		.uleb128 0xc
 1549 0412 4B040000 		.4byte	.LASF48
 1550 0416 01       		.byte	0x1
 1551 0417 7904     		.2byte	0x479
 1552 0419 00000000 		.4byte	.LFB20
 1553 041d 24000000 		.4byte	.LFE20-.LFB20
 1554 0421 01       		.uleb128 0x1
 1555 0422 9C       		.byte	0x9c
 1556 0423 51040000 		.4byte	0x451
 1557 0427 11       		.uleb128 0x11
 1558 0428 28000000 		.4byte	.LASF49
 1559 042c 01       		.byte	0x1
 1560 042d 7904     		.2byte	0x479
 1561 042f 51040000 		.4byte	0x451
 1562 0433 87000000 		.4byte	.LLST5
 1563 0437 10       		.uleb128 0x10
 1564 0438 DB010000 		.4byte	.LASF50
 1565 043c 01       		.byte	0x1
 1566 043d 7B04     		.2byte	0x47b
 1567 043f 77000000 		.4byte	0x77
 1568 0443 C9000000 		.4byte	.LLST6
 1569 0447 08       		.uleb128 0x8
 1570 0448 0E000000 		.4byte	.LVL39
 1571 044c EC030000 		.4byte	0x3ec
 1572 0450 00       		.byte	0
 1573 0451 12       		.uleb128 0x12
 1574 0452 04       		.byte	0x4
 1575 0453 57040000 		.4byte	0x457
 1576 0457 13       		.uleb128 0x13
 1577 0458 91000000 		.4byte	0x91
 1578 045c 0C       		.uleb128 0xc
 1579 045d 9E010000 		.4byte	.LASF51
 1580 0461 01       		.byte	0x1
 1581 0462 A704     		.2byte	0x4a7
 1582 0464 00000000 		.4byte	.LFB21
 1583 0468 28000000 		.4byte	.LFE21-.LFB21
 1584 046c 01       		.uleb128 0x1
 1585 046d 9C       		.byte	0x9c
 1586 046e AC040000 		.4byte	0x4ac
 1587 0472 11       		.uleb128 0x11
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 57


 1588 0473 28000000 		.4byte	.LASF49
 1589 0477 01       		.byte	0x1
 1590 0478 A704     		.2byte	0x4a7
 1591 047a AC040000 		.4byte	0x4ac
 1592 047e 0A010000 		.4byte	.LLST7
 1593 0482 11       		.uleb128 0x11
 1594 0483 A2030000 		.4byte	.LASF52
 1595 0487 01       		.byte	0x1
 1596 0488 A704     		.2byte	0x4a7
 1597 048a 6B000000 		.4byte	0x6b
 1598 048e 4C010000 		.4byte	.LLST8
 1599 0492 10       		.uleb128 0x10
 1600 0493 DB010000 		.4byte	.LASF50
 1601 0497 01       		.byte	0x1
 1602 0498 AA04     		.2byte	0x4aa
 1603 049a 6B000000 		.4byte	0x6b
 1604 049e 86010000 		.4byte	.LLST9
 1605 04a2 08       		.uleb128 0x8
 1606 04a3 0E000000 		.4byte	.LVL47
 1607 04a7 EC030000 		.4byte	0x3ec
 1608 04ab 00       		.byte	0
 1609 04ac 12       		.uleb128 0x12
 1610 04ad 04       		.byte	0x4
 1611 04ae B2040000 		.4byte	0x4b2
 1612 04b2 13       		.uleb128 0x13
 1613 04b3 6B000000 		.4byte	0x6b
 1614 04b7 0C       		.uleb128 0xc
 1615 04b8 7F010000 		.4byte	.LASF53
 1616 04bc 01       		.byte	0x1
 1617 04bd CE04     		.2byte	0x4ce
 1618 04bf 00000000 		.4byte	.LFB22
 1619 04c3 20000000 		.4byte	.LFE22-.LFB22
 1620 04c7 01       		.uleb128 0x1
 1621 04c8 9C       		.byte	0x9c
 1622 04c9 09050000 		.4byte	0x509
 1623 04cd 11       		.uleb128 0x11
 1624 04ce 1D000000 		.4byte	.LASF44
 1625 04d2 01       		.byte	0x1
 1626 04d3 CE04     		.2byte	0x4ce
 1627 04d5 6B000000 		.4byte	0x6b
 1628 04d9 C7010000 		.4byte	.LLST10
 1629 04dd 08       		.uleb128 0x8
 1630 04de 0C000000 		.4byte	.LVL54
 1631 04e2 EC030000 		.4byte	0x3ec
 1632 04e6 14       		.uleb128 0x14
 1633 04e7 12000000 		.4byte	.LVL55
 1634 04eb EC030000 		.4byte	0x3ec
 1635 04ef F9040000 		.4byte	0x4f9
 1636 04f3 0A       		.uleb128 0xa
 1637 04f4 01       		.uleb128 0x1
 1638 04f5 50       		.byte	0x50
 1639 04f6 01       		.uleb128 0x1
 1640 04f7 3D       		.byte	0x3d
 1641 04f8 00       		.byte	0
 1642 04f9 09       		.uleb128 0x9
 1643 04fa 18000000 		.4byte	.LVL56
 1644 04fe EC030000 		.4byte	0x3ec
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 58


 1645 0502 0A       		.uleb128 0xa
 1646 0503 01       		.uleb128 0x1
 1647 0504 50       		.byte	0x50
 1648 0505 01       		.uleb128 0x1
 1649 0506 3A       		.byte	0x3a
 1650 0507 00       		.byte	0
 1651 0508 00       		.byte	0
 1652 0509 0E       		.uleb128 0xe
 1653 050a AC020000 		.4byte	.LASF54
 1654 050e 01       		.byte	0x1
 1655 050f F904     		.2byte	0x4f9
 1656 0511 6B000000 		.4byte	0x6b
 1657 0515 00000000 		.4byte	.LFB23
 1658 0519 24000000 		.4byte	.LFE23-.LFB23
 1659 051d 01       		.uleb128 0x1
 1660 051e 9C       		.byte	0x9c
 1661 051f 34050000 		.4byte	0x534
 1662 0523 10       		.uleb128 0x10
 1663 0524 C3010000 		.4byte	.LASF35
 1664 0528 01       		.byte	0x1
 1665 0529 FC04     		.2byte	0x4fc
 1666 052b 6B000000 		.4byte	0x6b
 1667 052f E8010000 		.4byte	.LLST11
 1668 0533 00       		.byte	0
 1669 0534 0C       		.uleb128 0xc
 1670 0535 6C010000 		.4byte	.LASF55
 1671 0539 01       		.byte	0x1
 1672 053a 4A05     		.2byte	0x54a
 1673 053c 00000000 		.4byte	.LFB24
 1674 0540 24000000 		.4byte	.LFE24-.LFB24
 1675 0544 01       		.uleb128 0x1
 1676 0545 9C       		.byte	0x9c
 1677 0546 6D050000 		.4byte	0x56d
 1678 054a 10       		.uleb128 0x10
 1679 054b 01040000 		.4byte	.LASF20
 1680 054f 01       		.byte	0x1
 1681 0550 4C05     		.2byte	0x54c
 1682 0552 6B000000 		.4byte	0x6b
 1683 0556 06020000 		.4byte	.LLST12
 1684 055a 08       		.uleb128 0x8
 1685 055b 06000000 		.4byte	.LVL59
 1686 055f 40060000 		.4byte	0x640
 1687 0563 08       		.uleb128 0x8
 1688 0564 1C000000 		.4byte	.LVL60
 1689 0568 56060000 		.4byte	0x656
 1690 056c 00       		.byte	0
 1691 056d 0C       		.uleb128 0xc
 1692 056e 05030000 		.4byte	.LASF56
 1693 0572 01       		.byte	0x1
 1694 0573 A005     		.2byte	0x5a0
 1695 0575 00000000 		.4byte	.LFB25
 1696 0579 78000000 		.4byte	.LFE25-.LFB25
 1697 057d 01       		.uleb128 0x1
 1698 057e 9C       		.byte	0x9c
 1699 057f E4050000 		.4byte	0x5e4
 1700 0583 11       		.uleb128 0x11
 1701 0584 4A010000 		.4byte	.LASF57
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 59


 1702 0588 01       		.byte	0x1
 1703 0589 A005     		.2byte	0x5a0
 1704 058b 6B000000 		.4byte	0x6b
 1705 058f 19020000 		.4byte	.LLST13
 1706 0593 15       		.uleb128 0x15
 1707 0594 0A000000 		.4byte	.LBB2
 1708 0598 6E000000 		.4byte	.LBE2-.LBB2
 1709 059c 10       		.uleb128 0x10
 1710 059d 27020000 		.4byte	.LASF58
 1711 05a1 01       		.byte	0x1
 1712 05a2 A805     		.2byte	0x5a8
 1713 05a4 6B000000 		.4byte	0x6b
 1714 05a8 45020000 		.4byte	.LLST14
 1715 05ac 0F       		.uleb128 0xf
 1716 05ad D7000000 		.4byte	.LASF59
 1717 05b1 01       		.byte	0x1
 1718 05b2 D005     		.2byte	0x5d0
 1719 05b4 6B000000 		.4byte	0x6b
 1720 05b8 05       		.uleb128 0x5
 1721 05b9 03       		.byte	0x3
 1722 05ba 01000000 		.4byte	txPeriod.5123
 1723 05be 08       		.uleb128 0x8
 1724 05bf 14000000 		.4byte	.LVL62
 1725 05c3 51010000 		.4byte	0x151
 1726 05c7 08       		.uleb128 0x8
 1727 05c8 1E000000 		.4byte	.LVL63
 1728 05cc 67010000 		.4byte	0x167
 1729 05d0 08       		.uleb128 0x8
 1730 05d1 60000000 		.4byte	.LVL68
 1731 05d5 51010000 		.4byte	0x151
 1732 05d9 08       		.uleb128 0x8
 1733 05da 68000000 		.4byte	.LVL69
 1734 05de 67010000 		.4byte	0x167
 1735 05e2 00       		.byte	0
 1736 05e3 00       		.byte	0
 1737 05e4 0C       		.uleb128 0xc
 1738 05e5 EB010000 		.4byte	.LASF60
 1739 05e9 01       		.byte	0x1
 1740 05ea 2406     		.2byte	0x624
 1741 05ec 00000000 		.4byte	.LFB26
 1742 05f0 22000000 		.4byte	.LFE26-.LFB26
 1743 05f4 01       		.uleb128 0x1
 1744 05f5 9C       		.byte	0x9c
 1745 05f6 2F060000 		.4byte	0x62f
 1746 05fa 11       		.uleb128 0x11
 1747 05fb 2C010000 		.4byte	.LASF38
 1748 05ff 01       		.byte	0x1
 1749 0600 2406     		.2byte	0x624
 1750 0602 6B000000 		.4byte	0x6b
 1751 0606 63020000 		.4byte	.LLST15
 1752 060a 08       		.uleb128 0x8
 1753 060b 08000000 		.4byte	.LVL72
 1754 060f 51010000 		.4byte	0x151
 1755 0613 08       		.uleb128 0x8
 1756 0614 12000000 		.4byte	.LVL73
 1757 0618 67010000 		.4byte	0x167
 1758 061c 08       		.uleb128 0x8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 60


 1759 061d 18000000 		.4byte	.LVL75
 1760 0621 51010000 		.4byte	0x151
 1761 0625 08       		.uleb128 0x8
 1762 0626 20000000 		.4byte	.LVL76
 1763 062a 67010000 		.4byte	0x167
 1764 062e 00       		.byte	0
 1765 062f 16       		.uleb128 0x16
 1766 0630 12040000 		.4byte	.LASF68
 1767 0634 01       		.byte	0x1
 1768 0635 1B       		.byte	0x1b
 1769 0636 6B000000 		.4byte	0x6b
 1770 063a 05       		.uleb128 0x5
 1771 063b 03       		.byte	0x3
 1772 063c 00000000 		.4byte	UART_initVar
 1773 0640 17       		.uleb128 0x17
 1774 0641 AC010000 		.4byte	.LASF61
 1775 0645 AC010000 		.4byte	.LASF61
 1776 0649 03       		.byte	0x3
 1777 064a 7D       		.byte	0x7d
 1778 064b 17       		.uleb128 0x17
 1779 064c 13020000 		.4byte	.LASF62
 1780 0650 13020000 		.4byte	.LASF62
 1781 0654 04       		.byte	0x4
 1782 0655 27       		.byte	0x27
 1783 0656 17       		.uleb128 0x17
 1784 0657 07000000 		.4byte	.LASF63
 1785 065b 07000000 		.4byte	.LASF63
 1786 065f 03       		.byte	0x3
 1787 0660 7E       		.byte	0x7e
 1788 0661 17       		.uleb128 0x17
 1789 0662 7B020000 		.4byte	.LASF64
 1790 0666 7B020000 		.4byte	.LASF64
 1791 066a 04       		.byte	0x4
 1792 066b 28       		.byte	0x28
 1793 066c 00       		.byte	0
 1794              		.section	.debug_abbrev,"",%progbits
 1795              	.Ldebug_abbrev0:
 1796 0000 01       		.uleb128 0x1
 1797 0001 11       		.uleb128 0x11
 1798 0002 01       		.byte	0x1
 1799 0003 25       		.uleb128 0x25
 1800 0004 0E       		.uleb128 0xe
 1801 0005 13       		.uleb128 0x13
 1802 0006 0B       		.uleb128 0xb
 1803 0007 03       		.uleb128 0x3
 1804 0008 0E       		.uleb128 0xe
 1805 0009 1B       		.uleb128 0x1b
 1806 000a 0E       		.uleb128 0xe
 1807 000b 55       		.uleb128 0x55
 1808 000c 17       		.uleb128 0x17
 1809 000d 11       		.uleb128 0x11
 1810 000e 01       		.uleb128 0x1
 1811 000f 10       		.uleb128 0x10
 1812 0010 17       		.uleb128 0x17
 1813 0011 00       		.byte	0
 1814 0012 00       		.byte	0
 1815 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 61


 1816 0014 24       		.uleb128 0x24
 1817 0015 00       		.byte	0
 1818 0016 0B       		.uleb128 0xb
 1819 0017 0B       		.uleb128 0xb
 1820 0018 3E       		.uleb128 0x3e
 1821 0019 0B       		.uleb128 0xb
 1822 001a 03       		.uleb128 0x3
 1823 001b 0E       		.uleb128 0xe
 1824 001c 00       		.byte	0
 1825 001d 00       		.byte	0
 1826 001e 03       		.uleb128 0x3
 1827 001f 24       		.uleb128 0x24
 1828 0020 00       		.byte	0
 1829 0021 0B       		.uleb128 0xb
 1830 0022 0B       		.uleb128 0xb
 1831 0023 3E       		.uleb128 0x3e
 1832 0024 0B       		.uleb128 0xb
 1833 0025 03       		.uleb128 0x3
 1834 0026 08       		.uleb128 0x8
 1835 0027 00       		.byte	0
 1836 0028 00       		.byte	0
 1837 0029 04       		.uleb128 0x4
 1838 002a 16       		.uleb128 0x16
 1839 002b 00       		.byte	0
 1840 002c 03       		.uleb128 0x3
 1841 002d 0E       		.uleb128 0xe
 1842 002e 3A       		.uleb128 0x3a
 1843 002f 0B       		.uleb128 0xb
 1844 0030 3B       		.uleb128 0x3b
 1845 0031 05       		.uleb128 0x5
 1846 0032 49       		.uleb128 0x49
 1847 0033 13       		.uleb128 0x13
 1848 0034 00       		.byte	0
 1849 0035 00       		.byte	0
 1850 0036 05       		.uleb128 0x5
 1851 0037 35       		.uleb128 0x35
 1852 0038 00       		.byte	0
 1853 0039 49       		.uleb128 0x49
 1854 003a 13       		.uleb128 0x13
 1855 003b 00       		.byte	0
 1856 003c 00       		.byte	0
 1857 003d 06       		.uleb128 0x6
 1858 003e 2E       		.uleb128 0x2e
 1859 003f 01       		.byte	0x1
 1860 0040 3F       		.uleb128 0x3f
 1861 0041 19       		.uleb128 0x19
 1862 0042 03       		.uleb128 0x3
 1863 0043 0E       		.uleb128 0xe
 1864 0044 3A       		.uleb128 0x3a
 1865 0045 0B       		.uleb128 0xb
 1866 0046 3B       		.uleb128 0x3b
 1867 0047 0B       		.uleb128 0xb
 1868 0048 27       		.uleb128 0x27
 1869 0049 19       		.uleb128 0x19
 1870 004a 11       		.uleb128 0x11
 1871 004b 01       		.uleb128 0x1
 1872 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 62


 1873 004d 06       		.uleb128 0x6
 1874 004e 40       		.uleb128 0x40
 1875 004f 18       		.uleb128 0x18
 1876 0050 9742     		.uleb128 0x2117
 1877 0052 19       		.uleb128 0x19
 1878 0053 01       		.uleb128 0x1
 1879 0054 13       		.uleb128 0x13
 1880 0055 00       		.byte	0
 1881 0056 00       		.byte	0
 1882 0057 07       		.uleb128 0x7
 1883 0058 34       		.uleb128 0x34
 1884 0059 00       		.byte	0
 1885 005a 03       		.uleb128 0x3
 1886 005b 0E       		.uleb128 0xe
 1887 005c 3A       		.uleb128 0x3a
 1888 005d 0B       		.uleb128 0xb
 1889 005e 3B       		.uleb128 0x3b
 1890 005f 0B       		.uleb128 0xb
 1891 0060 49       		.uleb128 0x49
 1892 0061 13       		.uleb128 0x13
 1893 0062 02       		.uleb128 0x2
 1894 0063 17       		.uleb128 0x17
 1895 0064 00       		.byte	0
 1896 0065 00       		.byte	0
 1897 0066 08       		.uleb128 0x8
 1898 0067 898201   		.uleb128 0x4109
 1899 006a 00       		.byte	0
 1900 006b 11       		.uleb128 0x11
 1901 006c 01       		.uleb128 0x1
 1902 006d 31       		.uleb128 0x31
 1903 006e 13       		.uleb128 0x13
 1904 006f 00       		.byte	0
 1905 0070 00       		.byte	0
 1906 0071 09       		.uleb128 0x9
 1907 0072 898201   		.uleb128 0x4109
 1908 0075 01       		.byte	0x1
 1909 0076 11       		.uleb128 0x11
 1910 0077 01       		.uleb128 0x1
 1911 0078 31       		.uleb128 0x31
 1912 0079 13       		.uleb128 0x13
 1913 007a 00       		.byte	0
 1914 007b 00       		.byte	0
 1915 007c 0A       		.uleb128 0xa
 1916 007d 8A8201   		.uleb128 0x410a
 1917 0080 00       		.byte	0
 1918 0081 02       		.uleb128 0x2
 1919 0082 18       		.uleb128 0x18
 1920 0083 9142     		.uleb128 0x2111
 1921 0085 18       		.uleb128 0x18
 1922 0086 00       		.byte	0
 1923 0087 00       		.byte	0
 1924 0088 0B       		.uleb128 0xb
 1925 0089 2E       		.uleb128 0x2e
 1926 008a 00       		.byte	0
 1927 008b 3F       		.uleb128 0x3f
 1928 008c 19       		.uleb128 0x19
 1929 008d 03       		.uleb128 0x3
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 63


 1930 008e 0E       		.uleb128 0xe
 1931 008f 3A       		.uleb128 0x3a
 1932 0090 0B       		.uleb128 0xb
 1933 0091 3B       		.uleb128 0x3b
 1934 0092 05       		.uleb128 0x5
 1935 0093 27       		.uleb128 0x27
 1936 0094 19       		.uleb128 0x19
 1937 0095 49       		.uleb128 0x49
 1938 0096 13       		.uleb128 0x13
 1939 0097 11       		.uleb128 0x11
 1940 0098 01       		.uleb128 0x1
 1941 0099 12       		.uleb128 0x12
 1942 009a 06       		.uleb128 0x6
 1943 009b 40       		.uleb128 0x40
 1944 009c 18       		.uleb128 0x18
 1945 009d 9742     		.uleb128 0x2117
 1946 009f 19       		.uleb128 0x19
 1947 00a0 00       		.byte	0
 1948 00a1 00       		.byte	0
 1949 00a2 0C       		.uleb128 0xc
 1950 00a3 2E       		.uleb128 0x2e
 1951 00a4 01       		.byte	0x1
 1952 00a5 3F       		.uleb128 0x3f
 1953 00a6 19       		.uleb128 0x19
 1954 00a7 03       		.uleb128 0x3
 1955 00a8 0E       		.uleb128 0xe
 1956 00a9 3A       		.uleb128 0x3a
 1957 00aa 0B       		.uleb128 0xb
 1958 00ab 3B       		.uleb128 0x3b
 1959 00ac 05       		.uleb128 0x5
 1960 00ad 27       		.uleb128 0x27
 1961 00ae 19       		.uleb128 0x19
 1962 00af 11       		.uleb128 0x11
 1963 00b0 01       		.uleb128 0x1
 1964 00b1 12       		.uleb128 0x12
 1965 00b2 06       		.uleb128 0x6
 1966 00b3 40       		.uleb128 0x40
 1967 00b4 18       		.uleb128 0x18
 1968 00b5 9742     		.uleb128 0x2117
 1969 00b7 19       		.uleb128 0x19
 1970 00b8 01       		.uleb128 0x1
 1971 00b9 13       		.uleb128 0x13
 1972 00ba 00       		.byte	0
 1973 00bb 00       		.byte	0
 1974 00bc 0D       		.uleb128 0xd
 1975 00bd 05       		.uleb128 0x5
 1976 00be 00       		.byte	0
 1977 00bf 03       		.uleb128 0x3
 1978 00c0 0E       		.uleb128 0xe
 1979 00c1 3A       		.uleb128 0x3a
 1980 00c2 0B       		.uleb128 0xb
 1981 00c3 3B       		.uleb128 0x3b
 1982 00c4 05       		.uleb128 0x5
 1983 00c5 49       		.uleb128 0x49
 1984 00c6 13       		.uleb128 0x13
 1985 00c7 02       		.uleb128 0x2
 1986 00c8 18       		.uleb128 0x18
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 64


 1987 00c9 00       		.byte	0
 1988 00ca 00       		.byte	0
 1989 00cb 0E       		.uleb128 0xe
 1990 00cc 2E       		.uleb128 0x2e
 1991 00cd 01       		.byte	0x1
 1992 00ce 3F       		.uleb128 0x3f
 1993 00cf 19       		.uleb128 0x19
 1994 00d0 03       		.uleb128 0x3
 1995 00d1 0E       		.uleb128 0xe
 1996 00d2 3A       		.uleb128 0x3a
 1997 00d3 0B       		.uleb128 0xb
 1998 00d4 3B       		.uleb128 0x3b
 1999 00d5 05       		.uleb128 0x5
 2000 00d6 27       		.uleb128 0x27
 2001 00d7 19       		.uleb128 0x19
 2002 00d8 49       		.uleb128 0x49
 2003 00d9 13       		.uleb128 0x13
 2004 00da 11       		.uleb128 0x11
 2005 00db 01       		.uleb128 0x1
 2006 00dc 12       		.uleb128 0x12
 2007 00dd 06       		.uleb128 0x6
 2008 00de 40       		.uleb128 0x40
 2009 00df 18       		.uleb128 0x18
 2010 00e0 9742     		.uleb128 0x2117
 2011 00e2 19       		.uleb128 0x19
 2012 00e3 01       		.uleb128 0x1
 2013 00e4 13       		.uleb128 0x13
 2014 00e5 00       		.byte	0
 2015 00e6 00       		.byte	0
 2016 00e7 0F       		.uleb128 0xf
 2017 00e8 34       		.uleb128 0x34
 2018 00e9 00       		.byte	0
 2019 00ea 03       		.uleb128 0x3
 2020 00eb 0E       		.uleb128 0xe
 2021 00ec 3A       		.uleb128 0x3a
 2022 00ed 0B       		.uleb128 0xb
 2023 00ee 3B       		.uleb128 0x3b
 2024 00ef 05       		.uleb128 0x5
 2025 00f0 49       		.uleb128 0x49
 2026 00f1 13       		.uleb128 0x13
 2027 00f2 02       		.uleb128 0x2
 2028 00f3 18       		.uleb128 0x18
 2029 00f4 00       		.byte	0
 2030 00f5 00       		.byte	0
 2031 00f6 10       		.uleb128 0x10
 2032 00f7 34       		.uleb128 0x34
 2033 00f8 00       		.byte	0
 2034 00f9 03       		.uleb128 0x3
 2035 00fa 0E       		.uleb128 0xe
 2036 00fb 3A       		.uleb128 0x3a
 2037 00fc 0B       		.uleb128 0xb
 2038 00fd 3B       		.uleb128 0x3b
 2039 00fe 05       		.uleb128 0x5
 2040 00ff 49       		.uleb128 0x49
 2041 0100 13       		.uleb128 0x13
 2042 0101 02       		.uleb128 0x2
 2043 0102 17       		.uleb128 0x17
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 65


 2044 0103 00       		.byte	0
 2045 0104 00       		.byte	0
 2046 0105 11       		.uleb128 0x11
 2047 0106 05       		.uleb128 0x5
 2048 0107 00       		.byte	0
 2049 0108 03       		.uleb128 0x3
 2050 0109 0E       		.uleb128 0xe
 2051 010a 3A       		.uleb128 0x3a
 2052 010b 0B       		.uleb128 0xb
 2053 010c 3B       		.uleb128 0x3b
 2054 010d 05       		.uleb128 0x5
 2055 010e 49       		.uleb128 0x49
 2056 010f 13       		.uleb128 0x13
 2057 0110 02       		.uleb128 0x2
 2058 0111 17       		.uleb128 0x17
 2059 0112 00       		.byte	0
 2060 0113 00       		.byte	0
 2061 0114 12       		.uleb128 0x12
 2062 0115 0F       		.uleb128 0xf
 2063 0116 00       		.byte	0
 2064 0117 0B       		.uleb128 0xb
 2065 0118 0B       		.uleb128 0xb
 2066 0119 49       		.uleb128 0x49
 2067 011a 13       		.uleb128 0x13
 2068 011b 00       		.byte	0
 2069 011c 00       		.byte	0
 2070 011d 13       		.uleb128 0x13
 2071 011e 26       		.uleb128 0x26
 2072 011f 00       		.byte	0
 2073 0120 49       		.uleb128 0x49
 2074 0121 13       		.uleb128 0x13
 2075 0122 00       		.byte	0
 2076 0123 00       		.byte	0
 2077 0124 14       		.uleb128 0x14
 2078 0125 898201   		.uleb128 0x4109
 2079 0128 01       		.byte	0x1
 2080 0129 11       		.uleb128 0x11
 2081 012a 01       		.uleb128 0x1
 2082 012b 31       		.uleb128 0x31
 2083 012c 13       		.uleb128 0x13
 2084 012d 01       		.uleb128 0x1
 2085 012e 13       		.uleb128 0x13
 2086 012f 00       		.byte	0
 2087 0130 00       		.byte	0
 2088 0131 15       		.uleb128 0x15
 2089 0132 0B       		.uleb128 0xb
 2090 0133 01       		.byte	0x1
 2091 0134 11       		.uleb128 0x11
 2092 0135 01       		.uleb128 0x1
 2093 0136 12       		.uleb128 0x12
 2094 0137 06       		.uleb128 0x6
 2095 0138 00       		.byte	0
 2096 0139 00       		.byte	0
 2097 013a 16       		.uleb128 0x16
 2098 013b 34       		.uleb128 0x34
 2099 013c 00       		.byte	0
 2100 013d 03       		.uleb128 0x3
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 66


 2101 013e 0E       		.uleb128 0xe
 2102 013f 3A       		.uleb128 0x3a
 2103 0140 0B       		.uleb128 0xb
 2104 0141 3B       		.uleb128 0x3b
 2105 0142 0B       		.uleb128 0xb
 2106 0143 49       		.uleb128 0x49
 2107 0144 13       		.uleb128 0x13
 2108 0145 3F       		.uleb128 0x3f
 2109 0146 19       		.uleb128 0x19
 2110 0147 02       		.uleb128 0x2
 2111 0148 18       		.uleb128 0x18
 2112 0149 00       		.byte	0
 2113 014a 00       		.byte	0
 2114 014b 17       		.uleb128 0x17
 2115 014c 2E       		.uleb128 0x2e
 2116 014d 00       		.byte	0
 2117 014e 3F       		.uleb128 0x3f
 2118 014f 19       		.uleb128 0x19
 2119 0150 3C       		.uleb128 0x3c
 2120 0151 19       		.uleb128 0x19
 2121 0152 6E       		.uleb128 0x6e
 2122 0153 0E       		.uleb128 0xe
 2123 0154 03       		.uleb128 0x3
 2124 0155 0E       		.uleb128 0xe
 2125 0156 3A       		.uleb128 0x3a
 2126 0157 0B       		.uleb128 0xb
 2127 0158 3B       		.uleb128 0x3b
 2128 0159 0B       		.uleb128 0xb
 2129 015a 00       		.byte	0
 2130 015b 00       		.byte	0
 2131 015c 00       		.byte	0
 2132              		.section	.debug_loc,"",%progbits
 2133              	.Ldebug_loc0:
 2134              	.LLST0:
 2135 0000 08000000 		.4byte	.LVL1
 2136 0004 32000000 		.4byte	.LVL4
 2137 0008 0100     		.2byte	0x1
 2138 000a 54       		.byte	0x54
 2139 000b 00000000 		.4byte	0
 2140 000f 00000000 		.4byte	0
 2141              	.LLST1:
 2142 0013 08000000 		.4byte	.LVL6
 2143 0017 32000000 		.4byte	.LVL9
 2144 001b 0100     		.2byte	0x1
 2145 001d 54       		.byte	0x54
 2146 001e 00000000 		.4byte	0
 2147 0022 00000000 		.4byte	0
 2148              	.LLST2:
 2149 0026 04000000 		.4byte	.LVL17
 2150 002a 08000000 		.4byte	.LVL18
 2151 002e 0600     		.2byte	0x6
 2152 0030 70       		.byte	0x70
 2153 0031 00       		.sleb128 0
 2154 0032 08       		.byte	0x8
 2155 0033 7F       		.byte	0x7f
 2156 0034 1A       		.byte	0x1a
 2157 0035 9F       		.byte	0x9f
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 67


 2158 0036 00000000 		.4byte	0
 2159 003a 00000000 		.4byte	0
 2160              	.LLST3:
 2161 003e 00000000 		.4byte	.LVL19
 2162 0042 12000000 		.4byte	.LVL21
 2163 0046 0200     		.2byte	0x2
 2164 0048 30       		.byte	0x30
 2165 0049 9F       		.byte	0x9f
 2166 004a 12000000 		.4byte	.LVL21
 2167 004e 1A000000 		.4byte	.LVL22
 2168 0052 0100     		.2byte	0x1
 2169 0054 50       		.byte	0x50
 2170 0055 1A000000 		.4byte	.LVL22
 2171 0059 1E000000 		.4byte	.LVL23
 2172 005d 0200     		.2byte	0x2
 2173 005f 30       		.byte	0x30
 2174 0060 9F       		.byte	0x9f
 2175 0061 1E000000 		.4byte	.LVL23
 2176 0065 2C000000 		.4byte	.LFE9
 2177 0069 0100     		.2byte	0x1
 2178 006b 50       		.byte	0x50
 2179 006c 00000000 		.4byte	0
 2180 0070 00000000 		.4byte	0
 2181              	.LLST4:
 2182 0074 06000000 		.4byte	.LVL28
 2183 0078 1B000000 		.4byte	.LVL29-1
 2184 007c 0100     		.2byte	0x1
 2185 007e 50       		.byte	0x50
 2186 007f 00000000 		.4byte	0
 2187 0083 00000000 		.4byte	0
 2188              	.LLST5:
 2189 0087 00000000 		.4byte	.LVL36
 2190 008b 0A000000 		.4byte	.LVL38
 2191 008f 0100     		.2byte	0x1
 2192 0091 50       		.byte	0x50
 2193 0092 0A000000 		.4byte	.LVL38
 2194 0096 14000000 		.4byte	.LVL42
 2195 009a 0100     		.2byte	0x1
 2196 009c 55       		.byte	0x55
 2197 009d 14000000 		.4byte	.LVL42
 2198 00a1 18000000 		.4byte	.LVL43
 2199 00a5 0100     		.2byte	0x1
 2200 00a7 50       		.byte	0x50
 2201 00a8 18000000 		.4byte	.LVL43
 2202 00ac 20000000 		.4byte	.LVL44
 2203 00b0 0100     		.2byte	0x1
 2204 00b2 55       		.byte	0x55
 2205 00b3 20000000 		.4byte	.LVL44
 2206 00b7 24000000 		.4byte	.LFE20
 2207 00bb 0400     		.2byte	0x4
 2208 00bd F3       		.byte	0xf3
 2209 00be 01       		.uleb128 0x1
 2210 00bf 50       		.byte	0x50
 2211 00c0 9F       		.byte	0x9f
 2212 00c1 00000000 		.4byte	0
 2213 00c5 00000000 		.4byte	0
 2214              	.LLST6:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 68


 2215 00c9 02000000 		.4byte	.LVL37
 2216 00cd 0A000000 		.4byte	.LVL38
 2217 00d1 0200     		.2byte	0x2
 2218 00d3 30       		.byte	0x30
 2219 00d4 9F       		.byte	0x9f
 2220 00d5 0A000000 		.4byte	.LVL38
 2221 00d9 10000000 		.4byte	.LVL40
 2222 00dd 0100     		.2byte	0x1
 2223 00df 54       		.byte	0x54
 2224 00e0 12000000 		.4byte	.LVL41
 2225 00e4 14000000 		.4byte	.LVL42
 2226 00e8 0100     		.2byte	0x1
 2227 00ea 54       		.byte	0x54
 2228 00eb 14000000 		.4byte	.LVL42
 2229 00ef 18000000 		.4byte	.LVL43
 2230 00f3 0200     		.2byte	0x2
 2231 00f5 30       		.byte	0x30
 2232 00f6 9F       		.byte	0x9f
 2233 00f7 18000000 		.4byte	.LVL43
 2234 00fb 20000000 		.4byte	.LVL44
 2235 00ff 0100     		.2byte	0x1
 2236 0101 54       		.byte	0x54
 2237 0102 00000000 		.4byte	0
 2238 0106 00000000 		.4byte	0
 2239              	.LLST7:
 2240 010a 00000000 		.4byte	.LVL45
 2241 010e 08000000 		.4byte	.LVL46
 2242 0112 0100     		.2byte	0x1
 2243 0114 50       		.byte	0x50
 2244 0115 08000000 		.4byte	.LVL46
 2245 0119 14000000 		.4byte	.LVL50
 2246 011d 0100     		.2byte	0x1
 2247 011f 56       		.byte	0x56
 2248 0120 14000000 		.4byte	.LVL50
 2249 0124 1C000000 		.4byte	.LVL51
 2250 0128 0100     		.2byte	0x1
 2251 012a 50       		.byte	0x50
 2252 012b 1C000000 		.4byte	.LVL51
 2253 012f 22000000 		.4byte	.LVL52
 2254 0133 0100     		.2byte	0x1
 2255 0135 56       		.byte	0x56
 2256 0136 22000000 		.4byte	.LVL52
 2257 013a 28000000 		.4byte	.LFE21
 2258 013e 0400     		.2byte	0x4
 2259 0140 F3       		.byte	0xf3
 2260 0141 01       		.uleb128 0x1
 2261 0142 50       		.byte	0x50
 2262 0143 9F       		.byte	0x9f
 2263 0144 00000000 		.4byte	0
 2264 0148 00000000 		.4byte	0
 2265              	.LLST8:
 2266 014c 00000000 		.4byte	.LVL45
 2267 0150 08000000 		.4byte	.LVL46
 2268 0154 0100     		.2byte	0x1
 2269 0156 51       		.byte	0x51
 2270 0157 08000000 		.4byte	.LVL46
 2271 015b 14000000 		.4byte	.LVL50
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 69


 2272 015f 0400     		.2byte	0x4
 2273 0161 F3       		.byte	0xf3
 2274 0162 01       		.uleb128 0x1
 2275 0163 51       		.byte	0x51
 2276 0164 9F       		.byte	0x9f
 2277 0165 14000000 		.4byte	.LVL50
 2278 0169 1C000000 		.4byte	.LVL51
 2279 016d 0100     		.2byte	0x1
 2280 016f 51       		.byte	0x51
 2281 0170 1C000000 		.4byte	.LVL51
 2282 0174 28000000 		.4byte	.LFE21
 2283 0178 0400     		.2byte	0x4
 2284 017a F3       		.byte	0xf3
 2285 017b 01       		.uleb128 0x1
 2286 017c 51       		.byte	0x51
 2287 017d 9F       		.byte	0x9f
 2288 017e 00000000 		.4byte	0
 2289 0182 00000000 		.4byte	0
 2290              	.LLST9:
 2291 0186 00000000 		.4byte	.LVL45
 2292 018a 08000000 		.4byte	.LVL46
 2293 018e 0200     		.2byte	0x2
 2294 0190 30       		.byte	0x30
 2295 0191 9F       		.byte	0x9f
 2296 0192 08000000 		.4byte	.LVL46
 2297 0196 10000000 		.4byte	.LVL48
 2298 019a 0100     		.2byte	0x1
 2299 019c 54       		.byte	0x54
 2300 019d 12000000 		.4byte	.LVL49
 2301 01a1 14000000 		.4byte	.LVL50
 2302 01a5 0100     		.2byte	0x1
 2303 01a7 54       		.byte	0x54
 2304 01a8 14000000 		.4byte	.LVL50
 2305 01ac 1C000000 		.4byte	.LVL51
 2306 01b0 0200     		.2byte	0x2
 2307 01b2 30       		.byte	0x30
 2308 01b3 9F       		.byte	0x9f
 2309 01b4 1C000000 		.4byte	.LVL51
 2310 01b8 22000000 		.4byte	.LVL52
 2311 01bc 0100     		.2byte	0x1
 2312 01be 54       		.byte	0x54
 2313 01bf 00000000 		.4byte	0
 2314 01c3 00000000 		.4byte	0
 2315              	.LLST10:
 2316 01c7 00000000 		.4byte	.LVL53
 2317 01cb 0B000000 		.4byte	.LVL54-1
 2318 01cf 0100     		.2byte	0x1
 2319 01d1 50       		.byte	0x50
 2320 01d2 0B000000 		.4byte	.LVL54-1
 2321 01d6 20000000 		.4byte	.LFE22
 2322 01da 0400     		.2byte	0x4
 2323 01dc F3       		.byte	0xf3
 2324 01dd 01       		.uleb128 0x1
 2325 01de 50       		.byte	0x50
 2326 01df 9F       		.byte	0x9f
 2327 01e0 00000000 		.4byte	0
 2328 01e4 00000000 		.4byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 70


 2329              	.LLST11:
 2330 01e8 06000000 		.4byte	.LVL57
 2331 01ec 1C000000 		.4byte	.LVL58
 2332 01f0 0100     		.2byte	0x1
 2333 01f2 53       		.byte	0x53
 2334 01f3 1C000000 		.4byte	.LVL58
 2335 01f7 24000000 		.4byte	.LFE23
 2336 01fb 0100     		.2byte	0x1
 2337 01fd 50       		.byte	0x50
 2338 01fe 00000000 		.4byte	0
 2339 0202 00000000 		.4byte	0
 2340              	.LLST12:
 2341 0206 06000000 		.4byte	.LVL59
 2342 020a 1B000000 		.4byte	.LVL60-1
 2343 020e 0100     		.2byte	0x1
 2344 0210 50       		.byte	0x50
 2345 0211 00000000 		.4byte	0
 2346 0215 00000000 		.4byte	0
 2347              	.LLST13:
 2348 0219 00000000 		.4byte	.LVL61
 2349 021d 13000000 		.4byte	.LVL62-1
 2350 0221 0100     		.2byte	0x1
 2351 0223 50       		.byte	0x50
 2352 0224 13000000 		.4byte	.LVL62-1
 2353 0228 6A000000 		.4byte	.LVL70
 2354 022c 0400     		.2byte	0x4
 2355 022e F3       		.byte	0xf3
 2356 022f 01       		.uleb128 0x1
 2357 0230 50       		.byte	0x50
 2358 0231 9F       		.byte	0x9f
 2359 0232 6A000000 		.4byte	.LVL70
 2360 0236 78000000 		.4byte	.LFE25
 2361 023a 0100     		.2byte	0x1
 2362 023c 50       		.byte	0x50
 2363 023d 00000000 		.4byte	0
 2364 0241 00000000 		.4byte	0
 2365              	.LLST14:
 2366 0245 34000000 		.4byte	.LVL64
 2367 0249 3A000000 		.4byte	.LVL65
 2368 024d 0100     		.2byte	0x1
 2369 024f 53       		.byte	0x53
 2370 0250 46000000 		.4byte	.LVL66
 2371 0254 4C000000 		.4byte	.LVL67
 2372 0258 0100     		.2byte	0x1
 2373 025a 53       		.byte	0x53
 2374 025b 00000000 		.4byte	0
 2375 025f 00000000 		.4byte	0
 2376              	.LLST15:
 2377 0263 00000000 		.4byte	.LVL71
 2378 0267 07000000 		.4byte	.LVL72-1
 2379 026b 0100     		.2byte	0x1
 2380 026d 50       		.byte	0x50
 2381 026e 07000000 		.4byte	.LVL72-1
 2382 0272 14000000 		.4byte	.LVL74
 2383 0276 0400     		.2byte	0x4
 2384 0278 F3       		.byte	0xf3
 2385 0279 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 71


 2386 027a 50       		.byte	0x50
 2387 027b 9F       		.byte	0x9f
 2388 027c 14000000 		.4byte	.LVL74
 2389 0280 17000000 		.4byte	.LVL75-1
 2390 0284 0100     		.2byte	0x1
 2391 0286 50       		.byte	0x50
 2392 0287 17000000 		.4byte	.LVL75-1
 2393 028b 22000000 		.4byte	.LFE26
 2394 028f 0400     		.2byte	0x4
 2395 0291 F3       		.byte	0xf3
 2396 0292 01       		.uleb128 0x1
 2397 0293 50       		.byte	0x50
 2398 0294 9F       		.byte	0x9f
 2399 0295 00000000 		.4byte	0
 2400 0299 00000000 		.4byte	0
 2401              		.section	.debug_aranges,"",%progbits
 2402 0000 EC000000 		.4byte	0xec
 2403 0004 0200     		.2byte	0x2
 2404 0006 00000000 		.4byte	.Ldebug_info0
 2405 000a 04       		.byte	0x4
 2406 000b 00       		.byte	0
 2407 000c 0000     		.2byte	0
 2408 000e 0000     		.2byte	0
 2409 0010 00000000 		.4byte	.LFB2
 2410 0014 38000000 		.4byte	.LFE2-.LFB2
 2411 0018 00000000 		.4byte	.LFB3
 2412 001c 3C000000 		.4byte	.LFE3-.LFB3
 2413 0020 00000000 		.4byte	.LFB4
 2414 0024 0C000000 		.4byte	.LFE4-.LFB4
 2415 0028 00000000 		.4byte	.LFB5
 2416 002c 0C000000 		.4byte	.LFE5-.LFB5
 2417 0030 00000000 		.4byte	.LFB1
 2418 0034 34000000 		.4byte	.LFE1-.LFB1
 2419 0038 00000000 		.4byte	.LFB0
 2420 003c 1C000000 		.4byte	.LFE0-.LFB0
 2421 0040 00000000 		.4byte	.LFB6
 2422 0044 0C000000 		.4byte	.LFE6-.LFB6
 2423 0048 00000000 		.4byte	.LFB7
 2424 004c 0C000000 		.4byte	.LFE7-.LFB7
 2425 0050 00000000 		.4byte	.LFB8
 2426 0054 10000000 		.4byte	.LFE8-.LFB8
 2427 0058 00000000 		.4byte	.LFB9
 2428 005c 2C000000 		.4byte	.LFE9-.LFB9
 2429 0060 00000000 		.4byte	.LFB10
 2430 0064 12000000 		.4byte	.LFE10-.LFB10
 2431 0068 00000000 		.4byte	.LFB11
 2432 006c 18000000 		.4byte	.LFE11-.LFB11
 2433 0070 00000000 		.4byte	.LFB12
 2434 0074 24000000 		.4byte	.LFE12-.LFB12
 2435 0078 00000000 		.4byte	.LFB13
 2436 007c 02000000 		.4byte	.LFE13-.LFB13
 2437 0080 00000000 		.4byte	.LFB14
 2438 0084 0C000000 		.4byte	.LFE14-.LFB14
 2439 0088 00000000 		.4byte	.LFB15
 2440 008c 0C000000 		.4byte	.LFE15-.LFB15
 2441 0090 00000000 		.4byte	.LFB16
 2442 0094 0C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 72


 2443 0098 00000000 		.4byte	.LFB17
 2444 009c 14000000 		.4byte	.LFE17-.LFB17
 2445 00a0 00000000 		.4byte	.LFB18
 2446 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2447 00a8 00000000 		.4byte	.LFB19
 2448 00ac 18000000 		.4byte	.LFE19-.LFB19
 2449 00b0 00000000 		.4byte	.LFB20
 2450 00b4 24000000 		.4byte	.LFE20-.LFB20
 2451 00b8 00000000 		.4byte	.LFB21
 2452 00bc 28000000 		.4byte	.LFE21-.LFB21
 2453 00c0 00000000 		.4byte	.LFB22
 2454 00c4 20000000 		.4byte	.LFE22-.LFB22
 2455 00c8 00000000 		.4byte	.LFB23
 2456 00cc 24000000 		.4byte	.LFE23-.LFB23
 2457 00d0 00000000 		.4byte	.LFB24
 2458 00d4 24000000 		.4byte	.LFE24-.LFB24
 2459 00d8 00000000 		.4byte	.LFB25
 2460 00dc 78000000 		.4byte	.LFE25-.LFB25
 2461 00e0 00000000 		.4byte	.LFB26
 2462 00e4 22000000 		.4byte	.LFE26-.LFB26
 2463 00e8 00000000 		.4byte	0
 2464 00ec 00000000 		.4byte	0
 2465              		.section	.debug_ranges,"",%progbits
 2466              	.Ldebug_ranges0:
 2467 0000 00000000 		.4byte	.LFB2
 2468 0004 38000000 		.4byte	.LFE2
 2469 0008 00000000 		.4byte	.LFB3
 2470 000c 3C000000 		.4byte	.LFE3
 2471 0010 00000000 		.4byte	.LFB4
 2472 0014 0C000000 		.4byte	.LFE4
 2473 0018 00000000 		.4byte	.LFB5
 2474 001c 0C000000 		.4byte	.LFE5
 2475 0020 00000000 		.4byte	.LFB1
 2476 0024 34000000 		.4byte	.LFE1
 2477 0028 00000000 		.4byte	.LFB0
 2478 002c 1C000000 		.4byte	.LFE0
 2479 0030 00000000 		.4byte	.LFB6
 2480 0034 0C000000 		.4byte	.LFE6
 2481 0038 00000000 		.4byte	.LFB7
 2482 003c 0C000000 		.4byte	.LFE7
 2483 0040 00000000 		.4byte	.LFB8
 2484 0044 10000000 		.4byte	.LFE8
 2485 0048 00000000 		.4byte	.LFB9
 2486 004c 2C000000 		.4byte	.LFE9
 2487 0050 00000000 		.4byte	.LFB10
 2488 0054 12000000 		.4byte	.LFE10
 2489 0058 00000000 		.4byte	.LFB11
 2490 005c 18000000 		.4byte	.LFE11
 2491 0060 00000000 		.4byte	.LFB12
 2492 0064 24000000 		.4byte	.LFE12
 2493 0068 00000000 		.4byte	.LFB13
 2494 006c 02000000 		.4byte	.LFE13
 2495 0070 00000000 		.4byte	.LFB14
 2496 0074 0C000000 		.4byte	.LFE14
 2497 0078 00000000 		.4byte	.LFB15
 2498 007c 0C000000 		.4byte	.LFE15
 2499 0080 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 73


 2500 0084 0C000000 		.4byte	.LFE16
 2501 0088 00000000 		.4byte	.LFB17
 2502 008c 14000000 		.4byte	.LFE17
 2503 0090 00000000 		.4byte	.LFB18
 2504 0094 0C000000 		.4byte	.LFE18
 2505 0098 00000000 		.4byte	.LFB19
 2506 009c 18000000 		.4byte	.LFE19
 2507 00a0 00000000 		.4byte	.LFB20
 2508 00a4 24000000 		.4byte	.LFE20
 2509 00a8 00000000 		.4byte	.LFB21
 2510 00ac 28000000 		.4byte	.LFE21
 2511 00b0 00000000 		.4byte	.LFB22
 2512 00b4 20000000 		.4byte	.LFE22
 2513 00b8 00000000 		.4byte	.LFB23
 2514 00bc 24000000 		.4byte	.LFE23
 2515 00c0 00000000 		.4byte	.LFB24
 2516 00c4 24000000 		.4byte	.LFE24
 2517 00c8 00000000 		.4byte	.LFB25
 2518 00cc 78000000 		.4byte	.LFE25
 2519 00d0 00000000 		.4byte	.LFB26
 2520 00d4 22000000 		.4byte	.LFE26
 2521 00d8 00000000 		.4byte	0
 2522 00dc 00000000 		.4byte	0
 2523              		.section	.debug_line,"",%progbits
 2524              	.Ldebug_line0:
 2525 0000 C0020000 		.section	.debug_str,"MS",%progbits,1
 2525      02005F00 
 2525      00000201 
 2525      FB0E0D00 
 2525      01010101 
 2526              	.LASF10:
 2527 0000 75696E74 		.ascii	"uint16\000"
 2527      313600
 2528              	.LASF63:
 2529 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2529      69744372 
 2529      69746963 
 2529      616C5365 
 2529      6374696F 
 2530              	.LASF44:
 2531 001d 74784461 		.ascii	"txDataByte\000"
 2531      74614279 
 2531      746500
 2532              	.LASF49:
 2533 0028 73747269 		.ascii	"string\000"
 2533      6E6700
 2534              	.LASF7:
 2535 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2535      206C6F6E 
 2535      6720756E 
 2535      7369676E 
 2535      65642069 
 2536              	.LASF23:
 2537 0046 55415254 		.ascii	"UART_Start\000"
 2537      5F537461 
 2537      727400
 2538              	.LASF42:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 74


 2539 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2539      5F536574 
 2539      5478496E 
 2539      74657272 
 2539      7570744D 
 2540              	.LASF6:
 2541 0069 6C6F6E67 		.ascii	"long long int\000"
 2541      206C6F6E 
 2541      6720696E 
 2541      7400
 2542              	.LASF0:
 2543 0077 7369676E 		.ascii	"signed char\000"
 2543      65642063 
 2543      68617200 
 2544              	.LASF67:
 2545 0083 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\time_src\\b"
 2545      73657273 
 2545      5C652E69 
 2545      76616E6F 
 2545      765C446F 
 2546 00b0 72616E63 		.ascii	"ranch\\Manchester encoder-decoder.cydsn\000"
 2546      685C4D61 
 2546      6E636865 
 2546      73746572 
 2546      20656E63 
 2547              	.LASF59:
 2548 00d7 74785065 		.ascii	"txPeriod\000"
 2548      72696F64 
 2548      00
 2549              	.LASF4:
 2550 00e0 6C6F6E67 		.ascii	"long int\000"
 2550      20696E74 
 2550      00
 2551              	.LASF47:
 2552 00e9 55415254 		.ascii	"UART_PutChar\000"
 2552      5F507574 
 2552      43686172 
 2552      00
 2553              	.LASF28:
 2554 00f6 55415254 		.ascii	"UART_ReadRxData\000"
 2554      5F526561 
 2554      64527844 
 2554      61746100 
 2555              	.LASF9:
 2556 0106 75696E74 		.ascii	"uint8\000"
 2556      3800
 2557              	.LASF45:
 2558 010c 55415254 		.ascii	"UART_ReadControlRegister\000"
 2558      5F526561 
 2558      64436F6E 
 2558      74726F6C 
 2558      52656769 
 2559              	.LASF12:
 2560 0125 646F7562 		.ascii	"double\000"
 2560      6C6500
 2561              	.LASF38:
 2562 012c 61646472 		.ascii	"addressMode\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 75


 2562      6573734D 
 2562      6F646500 
 2563              	.LASF25:
 2564 0138 636F6E74 		.ascii	"control\000"
 2564      726F6C00 
 2565              	.LASF22:
 2566 0140 55415254 		.ascii	"UART_Init\000"
 2566      5F496E69 
 2566      7400
 2567              	.LASF57:
 2568 014a 7265744D 		.ascii	"retMode\000"
 2568      6F646500 
 2569              	.LASF33:
 2570 0152 55415254 		.ascii	"UART_GetByte\000"
 2570      5F476574 
 2570      42797465 
 2570      00
 2571              	.LASF8:
 2572 015f 756E7369 		.ascii	"unsigned int\000"
 2572      676E6564 
 2572      20696E74 
 2572      00
 2573              	.LASF55:
 2574 016c 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2574      5F436C65 
 2574      61725478 
 2574      42756666 
 2574      657200
 2575              	.LASF53:
 2576 017f 55415254 		.ascii	"UART_PutCRLF\000"
 2576      5F507574 
 2576      43524C46 
 2576      00
 2577              	.LASF5:
 2578 018c 6C6F6E67 		.ascii	"long unsigned int\000"
 2578      20756E73 
 2578      69676E65 
 2578      6420696E 
 2578      7400
 2579              	.LASF51:
 2580 019e 55415254 		.ascii	"UART_PutArray\000"
 2580      5F507574 
 2580      41727261 
 2580      7900
 2581              	.LASF61:
 2582 01ac 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2582      74657243 
 2582      72697469 
 2582      63616C53 
 2582      65637469 
 2583              	.LASF35:
 2584 01c3 73697A65 		.ascii	"size\000"
 2584      00
 2585              	.LASF3:
 2586 01c8 73686F72 		.ascii	"short unsigned int\000"
 2586      7420756E 
 2586      7369676E 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 76


 2586      65642069 
 2586      6E7400
 2587              	.LASF50:
 2588 01db 62756649 		.ascii	"bufIndex\000"
 2588      6E646578 
 2588      00
 2589              	.LASF26:
 2590 01e4 696E7453 		.ascii	"intSrc\000"
 2590      726300
 2591              	.LASF60:
 2592 01eb 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2592      5F536574 
 2592      54784164 
 2592      64726573 
 2592      734D6F64 
 2593              	.LASF46:
 2594 0201 55415254 		.ascii	"UART_ReadTxStatus\000"
 2594      5F526561 
 2594      64547853 
 2594      74617475 
 2594      7300
 2595              	.LASF62:
 2596 0213 55415254 		.ascii	"UART_IntClock_Start\000"
 2596      5F496E74 
 2596      436C6F63 
 2596      6B5F5374 
 2596      61727400 
 2597              	.LASF58:
 2598 0227 746D7053 		.ascii	"tmpStat\000"
 2598      74617400 
 2599              	.LASF17:
 2600 022f 73697A65 		.ascii	"sizetype\000"
 2600      74797065 
 2600      00
 2601              	.LASF16:
 2602 0238 6C6F6E67 		.ascii	"long double\000"
 2602      20646F75 
 2602      626C6500 
 2603              	.LASF40:
 2604 0244 61646472 		.ascii	"address\000"
 2604      65737300 
 2605              	.LASF39:
 2606 024c 55415254 		.ascii	"UART_SetRxAddress1\000"
 2606      5F536574 
 2606      52784164 
 2606      64726573 
 2606      733100
 2607              	.LASF41:
 2608 025f 55415254 		.ascii	"UART_SetRxAddress2\000"
 2608      5F536574 
 2608      52784164 
 2608      64726573 
 2608      733200
 2609              	.LASF32:
 2610 0272 72785374 		.ascii	"rxStatus\000"
 2610      61747573 
 2610      00
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 77


 2611              	.LASF64:
 2612 027b 55415254 		.ascii	"UART_IntClock_Stop\000"
 2612      5F496E74 
 2612      436C6F63 
 2612      6B5F5374 
 2612      6F7000
 2613              	.LASF66:
 2614 028e 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2614      72617465 
 2614      645F536F 
 2614      75726365 
 2614      5C50536F 
 2615              	.LASF54:
 2616 02ac 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2616      5F476574 
 2616      54784275 
 2616      66666572 
 2616      53697A65 
 2617              	.LASF15:
 2618 02c1 72656738 		.ascii	"reg8\000"
 2618      00
 2619              	.LASF37:
 2620 02c6 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2620      5F536574 
 2620      52784164 
 2620      64726573 
 2620      734D6F64 
 2621              	.LASF1:
 2622 02dc 756E7369 		.ascii	"unsigned char\000"
 2622      676E6564 
 2622      20636861 
 2622      7200
 2623              	.LASF43:
 2624 02ea 55415254 		.ascii	"UART_WriteTxData\000"
 2624      5F577269 
 2624      74655478 
 2624      44617461 
 2624      00
 2625              	.LASF2:
 2626 02fb 73686F72 		.ascii	"short int\000"
 2626      7420696E 
 2626      7400
 2627              	.LASF56:
 2628 0305 55415254 		.ascii	"UART_SendBreak\000"
 2628      5F53656E 
 2628      64427265 
 2628      616B00
 2629              	.LASF65:
 2630 0314 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2630      43313120 
 2630      352E342E 
 2630      31203230 
 2630      31363036 
 2631 0347 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2631      20726576 
 2631      6973696F 
 2631      6E203233 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 78


 2631      37373135 
 2632 037a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2632      66756E63 
 2632      74696F6E 
 2632      2D736563 
 2632      74696F6E 
 2633              	.LASF52:
 2634 03a2 62797465 		.ascii	"byteCount\000"
 2634      436F756E 
 2634      7400
 2635              	.LASF27:
 2636 03ac 72784461 		.ascii	"rxData\000"
 2636      746100
 2637              	.LASF18:
 2638 03b3 55415254 		.ascii	"UART_Enable\000"
 2638      5F456E61 
 2638      626C6500 
 2639              	.LASF29:
 2640 03bf 55415254 		.ascii	"UART_ReadRxStatus\000"
 2640      5F526561 
 2640      64527853 
 2640      74617475 
 2640      7300
 2641              	.LASF14:
 2642 03d1 63686172 		.ascii	"char\000"
 2642      00
 2643              	.LASF13:
 2644 03d6 63686172 		.ascii	"char8\000"
 2644      3800
 2645              	.LASF24:
 2646 03dc 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2646      5F536574 
 2646      5278496E 
 2646      74657272 
 2646      7570744D 
 2647              	.LASF31:
 2648 03f4 55415254 		.ascii	"UART_GetChar\000"
 2648      5F476574 
 2648      43686172 
 2648      00
 2649              	.LASF20:
 2650 0401 656E6162 		.ascii	"enableInterrupts\000"
 2650      6C65496E 
 2650      74657272 
 2650      75707473 
 2650      00
 2651              	.LASF68:
 2652 0412 55415254 		.ascii	"UART_initVar\000"
 2652      5F696E69 
 2652      74566172 
 2652      00
 2653              	.LASF34:
 2654 041f 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2654      5F476574 
 2654      52784275 
 2654      66666572 
 2654      53697A65 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\cctkzOqk.s 			page 79


 2655              	.LASF30:
 2656 0434 73746174 		.ascii	"status\000"
 2656      757300
 2657              	.LASF19:
 2658 043b 55415254 		.ascii	"UART_Stop\000"
 2658      5F53746F 
 2658      7000
 2659              	.LASF11:
 2660 0445 666C6F61 		.ascii	"float\000"
 2660      7400
 2661              	.LASF48:
 2662 044b 55415254 		.ascii	"UART_PutString\000"
 2662      5F507574 
 2662      53747269 
 2662      6E6700
 2663              	.LASF21:
 2664 045a 55415254 		.ascii	"UART_WriteControlRegister\000"
 2664      5F577269 
 2664      7465436F 
 2664      6E74726F 
 2664      6C526567 
 2665              	.LASF36:
 2666 0474 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2666      5F436C65 
 2666      61725278 
 2666      42756666 
 2666      657200
 2667              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
