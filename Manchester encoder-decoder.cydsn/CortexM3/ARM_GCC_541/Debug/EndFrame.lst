ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"EndFrame.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EndFrame_SetVector,"ax",%progbits
  20              		.align	2
  21              		.global	EndFrame_SetVector
  22              		.thumb
  23              		.thumb_func
  24              		.type	EndFrame_SetVector, %function
  25              	EndFrame_SetVector:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC5\\EndFrame.c"
   1:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/EndFrame.c **** * File Name: EndFrame.c  
   3:Generated_Source\PSoC5/EndFrame.c **** * Version 1.70
   4:Generated_Source\PSoC5/EndFrame.c **** *
   5:Generated_Source\PSoC5/EndFrame.c **** *  Description:
   6:Generated_Source\PSoC5/EndFrame.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/EndFrame.c **** *
   8:Generated_Source\PSoC5/EndFrame.c **** *
   9:Generated_Source\PSoC5/EndFrame.c **** *  Note:
  10:Generated_Source\PSoC5/EndFrame.c **** *
  11:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
  12:Generated_Source\PSoC5/EndFrame.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/EndFrame.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/EndFrame.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/EndFrame.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/EndFrame.c **** 
  18:Generated_Source\PSoC5/EndFrame.c **** 
  19:Generated_Source\PSoC5/EndFrame.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/EndFrame.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/EndFrame.c **** #include <EndFrame.h>
  22:Generated_Source\PSoC5/EndFrame.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/EndFrame.c **** 
  24:Generated_Source\PSoC5/EndFrame.c **** #if !defined(EndFrame__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/EndFrame.c **** 
  26:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/EndFrame.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/EndFrame.c **** /* `#START EndFrame_intc` */
  30:Generated_Source\PSoC5/EndFrame.c **** #include <BitCounterDec.h>
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 2


  31:Generated_Source\PSoC5/EndFrame.c **** #include <RecieveShiftReg.h>
  32:Generated_Source\PSoC5/EndFrame.c **** #include <reciver.h>
  33:Generated_Source\PSoC5/EndFrame.c **** extern int storeflag;
  34:Generated_Source\PSoC5/EndFrame.c **** /* `#END` */
  35:Generated_Source\PSoC5/EndFrame.c **** 
  36:Generated_Source\PSoC5/EndFrame.c **** #ifndef CYINT_IRQ_BASE
  37:Generated_Source\PSoC5/EndFrame.c **** #define CYINT_IRQ_BASE      16
  38:Generated_Source\PSoC5/EndFrame.c **** #endif /* CYINT_IRQ_BASE */
  39:Generated_Source\PSoC5/EndFrame.c **** #ifndef CYINT_VECT_TABLE
  40:Generated_Source\PSoC5/EndFrame.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  41:Generated_Source\PSoC5/EndFrame.c **** #endif /* CYINT_VECT_TABLE */
  42:Generated_Source\PSoC5/EndFrame.c **** 
  43:Generated_Source\PSoC5/EndFrame.c **** /* Declared in startup, used to set unused interrupts to. */
  44:Generated_Source\PSoC5/EndFrame.c **** CY_ISR_PROTO(IntDefaultHandler);
  45:Generated_Source\PSoC5/EndFrame.c **** 
  46:Generated_Source\PSoC5/EndFrame.c **** 
  47:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
  48:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_Start
  49:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
  50:Generated_Source\PSoC5/EndFrame.c **** *
  51:Generated_Source\PSoC5/EndFrame.c **** * Summary:
  52:Generated_Source\PSoC5/EndFrame.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  53:Generated_Source\PSoC5/EndFrame.c **** *  sets the default interrupt vector, sets the priority from the value in the
  54:Generated_Source\PSoC5/EndFrame.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  55:Generated_Source\PSoC5/EndFrame.c **** *  interrupt controller.
  56:Generated_Source\PSoC5/EndFrame.c **** *
  57:Generated_Source\PSoC5/EndFrame.c **** * Parameters:  
  58:Generated_Source\PSoC5/EndFrame.c **** *   None
  59:Generated_Source\PSoC5/EndFrame.c **** *
  60:Generated_Source\PSoC5/EndFrame.c **** * Return:
  61:Generated_Source\PSoC5/EndFrame.c **** *   None
  62:Generated_Source\PSoC5/EndFrame.c **** *
  63:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
  64:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_Start(void)
  65:Generated_Source\PSoC5/EndFrame.c **** {
  66:Generated_Source\PSoC5/EndFrame.c ****     /* For all we know the interrupt is active. */
  67:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_Disable();
  68:Generated_Source\PSoC5/EndFrame.c **** 
  69:Generated_Source\PSoC5/EndFrame.c ****     /* Set the ISR to point to the EndFrame Interrupt. */
  70:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_SetVector(&EndFrame_Interrupt);
  71:Generated_Source\PSoC5/EndFrame.c **** 
  72:Generated_Source\PSoC5/EndFrame.c ****     /* Set the priority. */
  73:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_SetPriority((uint8)EndFrame_INTC_PRIOR_NUMBER);
  74:Generated_Source\PSoC5/EndFrame.c **** 
  75:Generated_Source\PSoC5/EndFrame.c ****     /* Enable it. */
  76:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_Enable();
  77:Generated_Source\PSoC5/EndFrame.c **** }
  78:Generated_Source\PSoC5/EndFrame.c **** 
  79:Generated_Source\PSoC5/EndFrame.c **** 
  80:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
  81:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_StartEx
  82:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
  83:Generated_Source\PSoC5/EndFrame.c **** *
  84:Generated_Source\PSoC5/EndFrame.c **** * Summary:
  85:Generated_Source\PSoC5/EndFrame.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  86:Generated_Source\PSoC5/EndFrame.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  87:Generated_Source\PSoC5/EndFrame.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 3


  88:Generated_Source\PSoC5/EndFrame.c **** *  the interrupt to the interrupt controller.
  89:Generated_Source\PSoC5/EndFrame.c **** *  
  90:Generated_Source\PSoC5/EndFrame.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  91:Generated_Source\PSoC5/EndFrame.c **** *  used to provide consistent definition across compilers:
  92:Generated_Source\PSoC5/EndFrame.c **** *  
  93:Generated_Source\PSoC5/EndFrame.c **** *  Function definition example:
  94:Generated_Source\PSoC5/EndFrame.c **** *   CY_ISR(MyISR)
  95:Generated_Source\PSoC5/EndFrame.c **** *   {
  96:Generated_Source\PSoC5/EndFrame.c **** *   }
  97:Generated_Source\PSoC5/EndFrame.c **** *   Function prototype example:
  98:Generated_Source\PSoC5/EndFrame.c **** *   CY_ISR_PROTO(MyISR);
  99:Generated_Source\PSoC5/EndFrame.c **** *
 100:Generated_Source\PSoC5/EndFrame.c **** * Parameters:  
 101:Generated_Source\PSoC5/EndFrame.c **** *   address: Address of the ISR to set in the interrupt vector table.
 102:Generated_Source\PSoC5/EndFrame.c **** *
 103:Generated_Source\PSoC5/EndFrame.c **** * Return:
 104:Generated_Source\PSoC5/EndFrame.c **** *   None
 105:Generated_Source\PSoC5/EndFrame.c **** *
 106:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 107:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_StartEx(cyisraddress address)
 108:Generated_Source\PSoC5/EndFrame.c **** {
 109:Generated_Source\PSoC5/EndFrame.c ****     /* For all we know the interrupt is active. */
 110:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_Disable();
 111:Generated_Source\PSoC5/EndFrame.c **** 
 112:Generated_Source\PSoC5/EndFrame.c ****     /* Set the ISR to point to the EndFrame Interrupt. */
 113:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_SetVector(address);
 114:Generated_Source\PSoC5/EndFrame.c **** 
 115:Generated_Source\PSoC5/EndFrame.c ****     /* Set the priority. */
 116:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_SetPriority((uint8)EndFrame_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/EndFrame.c **** 
 118:Generated_Source\PSoC5/EndFrame.c ****     /* Enable it. */
 119:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_Enable();
 120:Generated_Source\PSoC5/EndFrame.c **** }
 121:Generated_Source\PSoC5/EndFrame.c **** 
 122:Generated_Source\PSoC5/EndFrame.c **** 
 123:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 124:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_Stop
 125:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 126:Generated_Source\PSoC5/EndFrame.c **** *
 127:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 128:Generated_Source\PSoC5/EndFrame.c **** *   Disables and removes the interrupt.
 129:Generated_Source\PSoC5/EndFrame.c **** *
 130:Generated_Source\PSoC5/EndFrame.c **** * Parameters:  
 131:Generated_Source\PSoC5/EndFrame.c **** *   None
 132:Generated_Source\PSoC5/EndFrame.c **** *
 133:Generated_Source\PSoC5/EndFrame.c **** * Return:
 134:Generated_Source\PSoC5/EndFrame.c **** *   None
 135:Generated_Source\PSoC5/EndFrame.c **** *
 136:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 137:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_Stop(void)
 138:Generated_Source\PSoC5/EndFrame.c **** {
 139:Generated_Source\PSoC5/EndFrame.c ****     /* Disable this interrupt. */
 140:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_Disable();
 141:Generated_Source\PSoC5/EndFrame.c **** 
 142:Generated_Source\PSoC5/EndFrame.c ****     /* Set the ISR to point to the passive one. */
 143:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_SetVector(&IntDefaultHandler);
 144:Generated_Source\PSoC5/EndFrame.c **** }
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 4


 145:Generated_Source\PSoC5/EndFrame.c **** 
 146:Generated_Source\PSoC5/EndFrame.c **** 
 147:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 148:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_Interrupt
 149:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 150:Generated_Source\PSoC5/EndFrame.c **** *
 151:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 152:Generated_Source\PSoC5/EndFrame.c **** *   The default Interrupt Service Routine for EndFrame.
 153:Generated_Source\PSoC5/EndFrame.c **** *
 154:Generated_Source\PSoC5/EndFrame.c **** *   Add custom code between the coments to keep the next version of this file
 155:Generated_Source\PSoC5/EndFrame.c **** *   from over writting your code.
 156:Generated_Source\PSoC5/EndFrame.c **** *
 157:Generated_Source\PSoC5/EndFrame.c **** * Parameters:  
 158:Generated_Source\PSoC5/EndFrame.c **** *
 159:Generated_Source\PSoC5/EndFrame.c **** * Return:
 160:Generated_Source\PSoC5/EndFrame.c **** *   None
 161:Generated_Source\PSoC5/EndFrame.c **** *
 162:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/EndFrame.c **** CY_ISR(EndFrame_Interrupt)
 164:Generated_Source\PSoC5/EndFrame.c **** {
 165:Generated_Source\PSoC5/EndFrame.c ****     #ifdef EndFrame_INTERRUPT_INTERRUPT_CALLBACK
 166:Generated_Source\PSoC5/EndFrame.c ****         EndFrame_Interrupt_InterruptCallback();
 167:Generated_Source\PSoC5/EndFrame.c ****     #endif /* EndFrame_INTERRUPT_INTERRUPT_CALLBACK */ 
 168:Generated_Source\PSoC5/EndFrame.c **** 
 169:Generated_Source\PSoC5/EndFrame.c ****     /*  Place your Interrupt code here. */
 170:Generated_Source\PSoC5/EndFrame.c ****     /* `#START EndFrame_Interrupt` */
 171:Generated_Source\PSoC5/EndFrame.c ****     
 172:Generated_Source\PSoC5/EndFrame.c ****     BitCounterDec_WriteCounter(31);
 173:Generated_Source\PSoC5/EndFrame.c ****     ClearRcStatus();
 174:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_ClearPending();
 175:Generated_Source\PSoC5/EndFrame.c ****     /* `#END` */
 176:Generated_Source\PSoC5/EndFrame.c **** }
 177:Generated_Source\PSoC5/EndFrame.c **** 
 178:Generated_Source\PSoC5/EndFrame.c **** 
 179:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 180:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_SetVector
 181:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 182:Generated_Source\PSoC5/EndFrame.c **** *
 183:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 184:Generated_Source\PSoC5/EndFrame.c **** *   Change the ISR vector for the Interrupt. Note calling EndFrame_Start
 185:Generated_Source\PSoC5/EndFrame.c **** *   will override any effect this method would have had. To set the vector 
 186:Generated_Source\PSoC5/EndFrame.c **** *   before the component has been started use EndFrame_StartEx instead.
 187:Generated_Source\PSoC5/EndFrame.c **** * 
 188:Generated_Source\PSoC5/EndFrame.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 189:Generated_Source\PSoC5/EndFrame.c **** *   used to provide consistent definition across compilers:
 190:Generated_Source\PSoC5/EndFrame.c **** *
 191:Generated_Source\PSoC5/EndFrame.c **** *   Function definition example:
 192:Generated_Source\PSoC5/EndFrame.c **** *   CY_ISR(MyISR)
 193:Generated_Source\PSoC5/EndFrame.c **** *   {
 194:Generated_Source\PSoC5/EndFrame.c **** *   }
 195:Generated_Source\PSoC5/EndFrame.c **** *
 196:Generated_Source\PSoC5/EndFrame.c **** *   Function prototype example:
 197:Generated_Source\PSoC5/EndFrame.c **** *     CY_ISR_PROTO(MyISR);
 198:Generated_Source\PSoC5/EndFrame.c **** *
 199:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 200:Generated_Source\PSoC5/EndFrame.c **** *   address: Address of the ISR to set in the interrupt vector table.
 201:Generated_Source\PSoC5/EndFrame.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 5


 202:Generated_Source\PSoC5/EndFrame.c **** * Return:
 203:Generated_Source\PSoC5/EndFrame.c **** *   None
 204:Generated_Source\PSoC5/EndFrame.c **** *
 205:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 206:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_SetVector(cyisraddress address)
 207:Generated_Source\PSoC5/EndFrame.c **** {
  28              		.loc 1 207 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 208:Generated_Source\PSoC5/EndFrame.c ****     cyisraddress * ramVectorTable;
 209:Generated_Source\PSoC5/EndFrame.c **** 
 210:Generated_Source\PSoC5/EndFrame.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
  34              		.loc 1 210 0
  35 0000 014B     		ldr	r3, .L2
  36 0002 1B68     		ldr	r3, [r3]
  37              	.LVL1:
 211:Generated_Source\PSoC5/EndFrame.c **** 
 212:Generated_Source\PSoC5/EndFrame.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)EndFrame__INTC_NUMBER] = address;
  38              		.loc 1 212 0
  39 0004 1864     		str	r0, [r3, #64]
  40 0006 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 0008 08ED00E0 		.word	-536810232
  45              		.cfi_endproc
  46              	.LFE4:
  47              		.size	EndFrame_SetVector, .-EndFrame_SetVector
  48              		.section	.text.EndFrame_GetVector,"ax",%progbits
  49              		.align	2
  50              		.global	EndFrame_GetVector
  51              		.thumb
  52              		.thumb_func
  53              		.type	EndFrame_GetVector, %function
  54              	EndFrame_GetVector:
  55              	.LFB5:
 213:Generated_Source\PSoC5/EndFrame.c **** }
 214:Generated_Source\PSoC5/EndFrame.c **** 
 215:Generated_Source\PSoC5/EndFrame.c **** 
 216:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 217:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_GetVector
 218:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 219:Generated_Source\PSoC5/EndFrame.c **** *
 220:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 221:Generated_Source\PSoC5/EndFrame.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 222:Generated_Source\PSoC5/EndFrame.c **** *
 223:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 224:Generated_Source\PSoC5/EndFrame.c **** *   None
 225:Generated_Source\PSoC5/EndFrame.c **** *
 226:Generated_Source\PSoC5/EndFrame.c **** * Return:
 227:Generated_Source\PSoC5/EndFrame.c **** *   Address of the ISR in the interrupt vector table.
 228:Generated_Source\PSoC5/EndFrame.c **** *
 229:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 230:Generated_Source\PSoC5/EndFrame.c **** cyisraddress EndFrame_GetVector(void)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 6


 231:Generated_Source\PSoC5/EndFrame.c **** {
  56              		.loc 1 231 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 232:Generated_Source\PSoC5/EndFrame.c ****     cyisraddress * ramVectorTable;
 233:Generated_Source\PSoC5/EndFrame.c **** 
 234:Generated_Source\PSoC5/EndFrame.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
  61              		.loc 1 234 0
  62 0000 014B     		ldr	r3, .L5
  63 0002 1B68     		ldr	r3, [r3]
  64              	.LVL2:
 235:Generated_Source\PSoC5/EndFrame.c **** 
 236:Generated_Source\PSoC5/EndFrame.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)EndFrame__INTC_NUMBER];
 237:Generated_Source\PSoC5/EndFrame.c **** }
  65              		.loc 1 237 0
  66 0004 186C     		ldr	r0, [r3, #64]
  67 0006 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 0008 08ED00E0 		.word	-536810232
  72              		.cfi_endproc
  73              	.LFE5:
  74              		.size	EndFrame_GetVector, .-EndFrame_GetVector
  75              		.section	.text.EndFrame_SetPriority,"ax",%progbits
  76              		.align	2
  77              		.global	EndFrame_SetPriority
  78              		.thumb
  79              		.thumb_func
  80              		.type	EndFrame_SetPriority, %function
  81              	EndFrame_SetPriority:
  82              	.LFB6:
 238:Generated_Source\PSoC5/EndFrame.c **** 
 239:Generated_Source\PSoC5/EndFrame.c **** 
 240:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 241:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_SetPriority
 242:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 243:Generated_Source\PSoC5/EndFrame.c **** *
 244:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 245:Generated_Source\PSoC5/EndFrame.c **** *   Sets the Priority of the Interrupt. 
 246:Generated_Source\PSoC5/EndFrame.c **** *
 247:Generated_Source\PSoC5/EndFrame.c **** *   Note calling EndFrame_Start or EndFrame_StartEx will 
 248:Generated_Source\PSoC5/EndFrame.c **** *   override any effect this API would have had. This API should only be called
 249:Generated_Source\PSoC5/EndFrame.c **** *   after EndFrame_Start or EndFrame_StartEx has been called. 
 250:Generated_Source\PSoC5/EndFrame.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 251:Generated_Source\PSoC5/EndFrame.c **** *   Interrupt Editor.
 252:Generated_Source\PSoC5/EndFrame.c **** *
 253:Generated_Source\PSoC5/EndFrame.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 254:Generated_Source\PSoC5/EndFrame.c **** *
 255:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 256:Generated_Source\PSoC5/EndFrame.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 257:Generated_Source\PSoC5/EndFrame.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 258:Generated_Source\PSoC5/EndFrame.c **** *             PSoC 4: Priority is from 0 to 3.
 259:Generated_Source\PSoC5/EndFrame.c **** *
 260:Generated_Source\PSoC5/EndFrame.c **** * Return:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 7


 261:Generated_Source\PSoC5/EndFrame.c **** *   None
 262:Generated_Source\PSoC5/EndFrame.c **** *
 263:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 264:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_SetPriority(uint8 priority)
 265:Generated_Source\PSoC5/EndFrame.c **** {
  83              		.loc 1 265 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL3:
 266:Generated_Source\PSoC5/EndFrame.c ****     *EndFrame_INTC_PRIOR = priority << 5;
  89              		.loc 1 266 0
  90 0000 4001     		lsls	r0, r0, #5
  91              	.LVL4:
  92 0002 C0B2     		uxtb	r0, r0
  93 0004 014B     		ldr	r3, .L8
  94 0006 1870     		strb	r0, [r3]
  95 0008 7047     		bx	lr
  96              	.L9:
  97 000a 00BF     		.align	2
  98              	.L8:
  99 000c 00E400E0 		.word	-536812544
 100              		.cfi_endproc
 101              	.LFE6:
 102              		.size	EndFrame_SetPriority, .-EndFrame_SetPriority
 103              		.section	.text.EndFrame_GetPriority,"ax",%progbits
 104              		.align	2
 105              		.global	EndFrame_GetPriority
 106              		.thumb
 107              		.thumb_func
 108              		.type	EndFrame_GetPriority, %function
 109              	EndFrame_GetPriority:
 110              	.LFB7:
 267:Generated_Source\PSoC5/EndFrame.c **** }
 268:Generated_Source\PSoC5/EndFrame.c **** 
 269:Generated_Source\PSoC5/EndFrame.c **** 
 270:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 271:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_GetPriority
 272:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 273:Generated_Source\PSoC5/EndFrame.c **** *
 274:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 275:Generated_Source\PSoC5/EndFrame.c **** *   Gets the Priority of the Interrupt.
 276:Generated_Source\PSoC5/EndFrame.c **** *
 277:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 278:Generated_Source\PSoC5/EndFrame.c **** *   None
 279:Generated_Source\PSoC5/EndFrame.c **** *
 280:Generated_Source\PSoC5/EndFrame.c **** * Return:
 281:Generated_Source\PSoC5/EndFrame.c **** *   Priority of the interrupt, 0 being the highest priority
 282:Generated_Source\PSoC5/EndFrame.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 283:Generated_Source\PSoC5/EndFrame.c **** *    PSoC 4: Priority is from 0 to 3.
 284:Generated_Source\PSoC5/EndFrame.c **** *
 285:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 286:Generated_Source\PSoC5/EndFrame.c **** uint8 EndFrame_GetPriority(void)
 287:Generated_Source\PSoC5/EndFrame.c **** {
 111              		.loc 1 287 0
 112              		.cfi_startproc
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 8


 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 288:Generated_Source\PSoC5/EndFrame.c ****     uint8 priority;
 289:Generated_Source\PSoC5/EndFrame.c **** 
 290:Generated_Source\PSoC5/EndFrame.c **** 
 291:Generated_Source\PSoC5/EndFrame.c ****     priority = *EndFrame_INTC_PRIOR >> 5;
 116              		.loc 1 291 0
 117 0000 014B     		ldr	r3, .L11
 118 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 119              	.LVL5:
 292:Generated_Source\PSoC5/EndFrame.c **** 
 293:Generated_Source\PSoC5/EndFrame.c ****     return priority;
 294:Generated_Source\PSoC5/EndFrame.c **** }
 120              		.loc 1 294 0
 121 0004 4009     		lsrs	r0, r0, #5
 122              	.LVL6:
 123 0006 7047     		bx	lr
 124              	.L12:
 125              		.align	2
 126              	.L11:
 127 0008 00E400E0 		.word	-536812544
 128              		.cfi_endproc
 129              	.LFE7:
 130              		.size	EndFrame_GetPriority, .-EndFrame_GetPriority
 131              		.section	.text.EndFrame_Enable,"ax",%progbits
 132              		.align	2
 133              		.global	EndFrame_Enable
 134              		.thumb
 135              		.thumb_func
 136              		.type	EndFrame_Enable, %function
 137              	EndFrame_Enable:
 138              	.LFB8:
 295:Generated_Source\PSoC5/EndFrame.c **** 
 296:Generated_Source\PSoC5/EndFrame.c **** 
 297:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 298:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_Enable
 299:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 300:Generated_Source\PSoC5/EndFrame.c **** *
 301:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 302:Generated_Source\PSoC5/EndFrame.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 303:Generated_Source\PSoC5/EndFrame.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 304:Generated_Source\PSoC5/EndFrame.c **** *   function, which sets the vector and the priority, has been called.
 305:Generated_Source\PSoC5/EndFrame.c **** *
 306:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 307:Generated_Source\PSoC5/EndFrame.c **** *   None
 308:Generated_Source\PSoC5/EndFrame.c **** *
 309:Generated_Source\PSoC5/EndFrame.c **** * Return:
 310:Generated_Source\PSoC5/EndFrame.c **** *   None
 311:Generated_Source\PSoC5/EndFrame.c **** *
 312:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 313:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_Enable(void)
 314:Generated_Source\PSoC5/EndFrame.c **** {
 139              		.loc 1 314 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 9


 143              		@ link register save eliminated.
 315:Generated_Source\PSoC5/EndFrame.c ****     /* Enable the general interrupt. */
 316:Generated_Source\PSoC5/EndFrame.c ****     *EndFrame_INTC_SET_EN = EndFrame__INTC_MASK;
 144              		.loc 1 316 0
 145 0000 0122     		movs	r2, #1
 146 0002 014B     		ldr	r3, .L14
 147 0004 1A60     		str	r2, [r3]
 148 0006 7047     		bx	lr
 149              	.L15:
 150              		.align	2
 151              	.L14:
 152 0008 00E100E0 		.word	-536813312
 153              		.cfi_endproc
 154              	.LFE8:
 155              		.size	EndFrame_Enable, .-EndFrame_Enable
 156              		.section	.text.EndFrame_GetState,"ax",%progbits
 157              		.align	2
 158              		.global	EndFrame_GetState
 159              		.thumb
 160              		.thumb_func
 161              		.type	EndFrame_GetState, %function
 162              	EndFrame_GetState:
 163              	.LFB9:
 317:Generated_Source\PSoC5/EndFrame.c **** }
 318:Generated_Source\PSoC5/EndFrame.c **** 
 319:Generated_Source\PSoC5/EndFrame.c **** 
 320:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_GetState
 322:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 323:Generated_Source\PSoC5/EndFrame.c **** *
 324:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 325:Generated_Source\PSoC5/EndFrame.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 326:Generated_Source\PSoC5/EndFrame.c **** *
 327:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 328:Generated_Source\PSoC5/EndFrame.c **** *   None
 329:Generated_Source\PSoC5/EndFrame.c **** *
 330:Generated_Source\PSoC5/EndFrame.c **** * Return:
 331:Generated_Source\PSoC5/EndFrame.c **** *   1 if enabled, 0 if disabled.
 332:Generated_Source\PSoC5/EndFrame.c **** *
 333:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 334:Generated_Source\PSoC5/EndFrame.c **** uint8 EndFrame_GetState(void)
 335:Generated_Source\PSoC5/EndFrame.c **** {
 164              		.loc 1 335 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 336:Generated_Source\PSoC5/EndFrame.c ****     /* Get the state of the general interrupt. */
 337:Generated_Source\PSoC5/EndFrame.c ****     return ((*EndFrame_INTC_SET_EN & (uint32)EndFrame__INTC_MASK) != 0u) ? 1u:0u;
 169              		.loc 1 337 0
 170 0000 024B     		ldr	r3, .L17
 171 0002 1868     		ldr	r0, [r3]
 338:Generated_Source\PSoC5/EndFrame.c **** }
 172              		.loc 1 338 0
 173 0004 00F00100 		and	r0, r0, #1
 174 0008 7047     		bx	lr
 175              	.L18:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 10


 176 000a 00BF     		.align	2
 177              	.L17:
 178 000c 00E100E0 		.word	-536813312
 179              		.cfi_endproc
 180              	.LFE9:
 181              		.size	EndFrame_GetState, .-EndFrame_GetState
 182              		.section	.text.EndFrame_Disable,"ax",%progbits
 183              		.align	2
 184              		.global	EndFrame_Disable
 185              		.thumb
 186              		.thumb_func
 187              		.type	EndFrame_Disable, %function
 188              	EndFrame_Disable:
 189              	.LFB10:
 339:Generated_Source\PSoC5/EndFrame.c **** 
 340:Generated_Source\PSoC5/EndFrame.c **** 
 341:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 342:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_Disable
 343:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 344:Generated_Source\PSoC5/EndFrame.c **** *
 345:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 346:Generated_Source\PSoC5/EndFrame.c **** *   Disables the Interrupt in the interrupt controller.
 347:Generated_Source\PSoC5/EndFrame.c **** *
 348:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 349:Generated_Source\PSoC5/EndFrame.c **** *   None
 350:Generated_Source\PSoC5/EndFrame.c **** *
 351:Generated_Source\PSoC5/EndFrame.c **** * Return:
 352:Generated_Source\PSoC5/EndFrame.c **** *   None
 353:Generated_Source\PSoC5/EndFrame.c **** *
 354:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 355:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_Disable(void)
 356:Generated_Source\PSoC5/EndFrame.c **** {
 190              		.loc 1 356 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 357:Generated_Source\PSoC5/EndFrame.c ****     /* Disable the general interrupt. */
 358:Generated_Source\PSoC5/EndFrame.c ****     *EndFrame_INTC_CLR_EN = EndFrame__INTC_MASK;
 195              		.loc 1 358 0
 196 0000 0122     		movs	r2, #1
 197 0002 014B     		ldr	r3, .L20
 198 0004 1A60     		str	r2, [r3]
 199 0006 7047     		bx	lr
 200              	.L21:
 201              		.align	2
 202              	.L20:
 203 0008 80E100E0 		.word	-536813184
 204              		.cfi_endproc
 205              	.LFE10:
 206              		.size	EndFrame_Disable, .-EndFrame_Disable
 207              		.section	.text.EndFrame_Start,"ax",%progbits
 208              		.align	2
 209              		.global	EndFrame_Start
 210              		.thumb
 211              		.thumb_func
 212              		.type	EndFrame_Start, %function
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 11


 213              	EndFrame_Start:
 214              	.LFB0:
  65:Generated_Source\PSoC5/EndFrame.c ****     /* For all we know the interrupt is active. */
 215              		.loc 1 65 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 3, -8
 222              		.cfi_offset 14, -4
  67:Generated_Source\PSoC5/EndFrame.c **** 
 223              		.loc 1 67 0
 224 0002 FFF7FEFF 		bl	EndFrame_Disable
 225              	.LVL7:
  70:Generated_Source\PSoC5/EndFrame.c **** 
 226              		.loc 1 70 0
 227 0006 0448     		ldr	r0, .L24
 228 0008 FFF7FEFF 		bl	EndFrame_SetVector
 229              	.LVL8:
  73:Generated_Source\PSoC5/EndFrame.c **** 
 230              		.loc 1 73 0
 231 000c 0720     		movs	r0, #7
 232 000e FFF7FEFF 		bl	EndFrame_SetPriority
 233              	.LVL9:
  76:Generated_Source\PSoC5/EndFrame.c **** }
 234              		.loc 1 76 0
 235 0012 FFF7FEFF 		bl	EndFrame_Enable
 236              	.LVL10:
 237 0016 08BD     		pop	{r3, pc}
 238              	.L25:
 239              		.align	2
 240              	.L24:
 241 0018 00000000 		.word	EndFrame_Interrupt
 242              		.cfi_endproc
 243              	.LFE0:
 244              		.size	EndFrame_Start, .-EndFrame_Start
 245              		.section	.text.EndFrame_StartEx,"ax",%progbits
 246              		.align	2
 247              		.global	EndFrame_StartEx
 248              		.thumb
 249              		.thumb_func
 250              		.type	EndFrame_StartEx, %function
 251              	EndFrame_StartEx:
 252              	.LFB1:
 108:Generated_Source\PSoC5/EndFrame.c ****     /* For all we know the interrupt is active. */
 253              		.loc 1 108 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL11:
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262 0002 0446     		mov	r4, r0
 110:Generated_Source\PSoC5/EndFrame.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 12


 263              		.loc 1 110 0
 264 0004 FFF7FEFF 		bl	EndFrame_Disable
 265              	.LVL12:
 113:Generated_Source\PSoC5/EndFrame.c **** 
 266              		.loc 1 113 0
 267 0008 2046     		mov	r0, r4
 268 000a FFF7FEFF 		bl	EndFrame_SetVector
 269              	.LVL13:
 116:Generated_Source\PSoC5/EndFrame.c **** 
 270              		.loc 1 116 0
 271 000e 0720     		movs	r0, #7
 272 0010 FFF7FEFF 		bl	EndFrame_SetPriority
 273              	.LVL14:
 119:Generated_Source\PSoC5/EndFrame.c **** }
 274              		.loc 1 119 0
 275 0014 FFF7FEFF 		bl	EndFrame_Enable
 276              	.LVL15:
 277 0018 10BD     		pop	{r4, pc}
 278              		.cfi_endproc
 279              	.LFE1:
 280              		.size	EndFrame_StartEx, .-EndFrame_StartEx
 281 001a 00BF     		.section	.text.EndFrame_Stop,"ax",%progbits
 282              		.align	2
 283              		.global	EndFrame_Stop
 284              		.thumb
 285              		.thumb_func
 286              		.type	EndFrame_Stop, %function
 287              	EndFrame_Stop:
 288              	.LFB2:
 138:Generated_Source\PSoC5/EndFrame.c ****     /* Disable this interrupt. */
 289              		.loc 1 138 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 140:Generated_Source\PSoC5/EndFrame.c **** 
 297              		.loc 1 140 0
 298 0002 FFF7FEFF 		bl	EndFrame_Disable
 299              	.LVL16:
 143:Generated_Source\PSoC5/EndFrame.c **** }
 300              		.loc 1 143 0
 301 0006 0248     		ldr	r0, .L30
 302 0008 FFF7FEFF 		bl	EndFrame_SetVector
 303              	.LVL17:
 304 000c 08BD     		pop	{r3, pc}
 305              	.L31:
 306 000e 00BF     		.align	2
 307              	.L30:
 308 0010 00000000 		.word	IntDefaultHandler
 309              		.cfi_endproc
 310              	.LFE2:
 311              		.size	EndFrame_Stop, .-EndFrame_Stop
 312              		.section	.text.EndFrame_SetPending,"ax",%progbits
 313              		.align	2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 13


 314              		.global	EndFrame_SetPending
 315              		.thumb
 316              		.thumb_func
 317              		.type	EndFrame_SetPending, %function
 318              	EndFrame_SetPending:
 319              	.LFB11:
 359:Generated_Source\PSoC5/EndFrame.c **** }
 360:Generated_Source\PSoC5/EndFrame.c **** 
 361:Generated_Source\PSoC5/EndFrame.c **** 
 362:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 363:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_SetPending
 364:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 365:Generated_Source\PSoC5/EndFrame.c **** *
 366:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 367:Generated_Source\PSoC5/EndFrame.c **** *   Causes the Interrupt to enter the pending state, a software method of
 368:Generated_Source\PSoC5/EndFrame.c **** *   generating the interrupt.
 369:Generated_Source\PSoC5/EndFrame.c **** *
 370:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 371:Generated_Source\PSoC5/EndFrame.c **** *   None
 372:Generated_Source\PSoC5/EndFrame.c **** *
 373:Generated_Source\PSoC5/EndFrame.c **** * Return:
 374:Generated_Source\PSoC5/EndFrame.c **** *   None
 375:Generated_Source\PSoC5/EndFrame.c **** *
 376:Generated_Source\PSoC5/EndFrame.c **** * Side Effects:
 377:Generated_Source\PSoC5/EndFrame.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 378:Generated_Source\PSoC5/EndFrame.c **** *   entered (depending on the priority of this interrupt and other pending 
 379:Generated_Source\PSoC5/EndFrame.c **** *   interrupts).
 380:Generated_Source\PSoC5/EndFrame.c **** *
 381:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 382:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_SetPending(void)
 383:Generated_Source\PSoC5/EndFrame.c **** {
 320              		.loc 1 383 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 384:Generated_Source\PSoC5/EndFrame.c ****     *EndFrame_INTC_SET_PD = EndFrame__INTC_MASK;
 325              		.loc 1 384 0
 326 0000 0122     		movs	r2, #1
 327 0002 014B     		ldr	r3, .L33
 328 0004 1A60     		str	r2, [r3]
 329 0006 7047     		bx	lr
 330              	.L34:
 331              		.align	2
 332              	.L33:
 333 0008 00E200E0 		.word	-536813056
 334              		.cfi_endproc
 335              	.LFE11:
 336              		.size	EndFrame_SetPending, .-EndFrame_SetPending
 337              		.section	.text.EndFrame_ClearPending,"ax",%progbits
 338              		.align	2
 339              		.global	EndFrame_ClearPending
 340              		.thumb
 341              		.thumb_func
 342              		.type	EndFrame_ClearPending, %function
 343              	EndFrame_ClearPending:
 344              	.LFB12:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 14


 385:Generated_Source\PSoC5/EndFrame.c **** }
 386:Generated_Source\PSoC5/EndFrame.c **** 
 387:Generated_Source\PSoC5/EndFrame.c **** 
 388:Generated_Source\PSoC5/EndFrame.c **** /*******************************************************************************
 389:Generated_Source\PSoC5/EndFrame.c **** * Function Name: EndFrame_ClearPending
 390:Generated_Source\PSoC5/EndFrame.c **** ********************************************************************************
 391:Generated_Source\PSoC5/EndFrame.c **** *
 392:Generated_Source\PSoC5/EndFrame.c **** * Summary:
 393:Generated_Source\PSoC5/EndFrame.c **** *   Clears a pending interrupt in the interrupt controller.
 394:Generated_Source\PSoC5/EndFrame.c **** *
 395:Generated_Source\PSoC5/EndFrame.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 396:Generated_Source\PSoC5/EndFrame.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 397:Generated_Source\PSoC5/EndFrame.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 398:Generated_Source\PSoC5/EndFrame.c **** *   pending state even though the interrupt itself is cleared using this API.
 399:Generated_Source\PSoC5/EndFrame.c **** *
 400:Generated_Source\PSoC5/EndFrame.c **** * Parameters:
 401:Generated_Source\PSoC5/EndFrame.c **** *   None
 402:Generated_Source\PSoC5/EndFrame.c **** *
 403:Generated_Source\PSoC5/EndFrame.c **** * Return:
 404:Generated_Source\PSoC5/EndFrame.c **** *   None
 405:Generated_Source\PSoC5/EndFrame.c **** *
 406:Generated_Source\PSoC5/EndFrame.c **** *******************************************************************************/
 407:Generated_Source\PSoC5/EndFrame.c **** void EndFrame_ClearPending(void)
 408:Generated_Source\PSoC5/EndFrame.c **** {
 345              		.loc 1 408 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 409:Generated_Source\PSoC5/EndFrame.c ****     *EndFrame_INTC_CLR_PD = EndFrame__INTC_MASK;
 350              		.loc 1 409 0
 351 0000 0122     		movs	r2, #1
 352 0002 014B     		ldr	r3, .L36
 353 0004 1A60     		str	r2, [r3]
 354 0006 7047     		bx	lr
 355              	.L37:
 356              		.align	2
 357              	.L36:
 358 0008 80E200E0 		.word	-536812928
 359              		.cfi_endproc
 360              	.LFE12:
 361              		.size	EndFrame_ClearPending, .-EndFrame_ClearPending
 362              		.section	.text.EndFrame_Interrupt,"ax",%progbits
 363              		.align	2
 364              		.global	EndFrame_Interrupt
 365              		.thumb
 366              		.thumb_func
 367              		.type	EndFrame_Interrupt, %function
 368              	EndFrame_Interrupt:
 369              	.LFB3:
 164:Generated_Source\PSoC5/EndFrame.c ****     #ifdef EndFrame_INTERRUPT_INTERRUPT_CALLBACK
 370              		.loc 1 164 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 15


 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 172:Generated_Source\PSoC5/EndFrame.c ****     ClearRcStatus();
 378              		.loc 1 172 0
 379 0002 1F20     		movs	r0, #31
 380 0004 FFF7FEFF 		bl	BitCounterDec_WriteCounter
 381              	.LVL18:
 173:Generated_Source\PSoC5/EndFrame.c ****     EndFrame_ClearPending();
 382              		.loc 1 173 0
 383 0008 FFF7FEFF 		bl	ClearRcStatus
 384              	.LVL19:
 174:Generated_Source\PSoC5/EndFrame.c ****     /* `#END` */
 385              		.loc 1 174 0
 386 000c FFF7FEFF 		bl	EndFrame_ClearPending
 387              	.LVL20:
 388 0010 08BD     		pop	{r3, pc}
 389              		.cfi_endproc
 390              	.LFE3:
 391              		.size	EndFrame_Interrupt, .-EndFrame_Interrupt
 392 0012 00BF     		.text
 393              	.Letext0:
 394              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 395              		.file 3 "Generated_Source\\PSoC5/BitCounterDec.h"
 396              		.file 4 "./reciver.h"
 397              		.section	.debug_info,"",%progbits
 398              	.Ldebug_info0:
 399 0000 0E030000 		.4byte	0x30e
 400 0004 0400     		.2byte	0x4
 401 0006 00000000 		.4byte	.Ldebug_abbrev0
 402 000a 04       		.byte	0x4
 403 000b 01       		.uleb128 0x1
 404 000c D8010000 		.4byte	.LASF36
 405 0010 0C       		.byte	0xc
 406 0011 F3000000 		.4byte	.LASF37
 407 0015 06000000 		.4byte	.LASF38
 408 0019 00000000 		.4byte	.Ldebug_ranges0+0
 409 001d 00000000 		.4byte	0
 410 0021 00000000 		.4byte	.Ldebug_line0
 411 0025 02       		.uleb128 0x2
 412 0026 04       		.byte	0x4
 413 0027 05       		.byte	0x5
 414 0028 696E7400 		.ascii	"int\000"
 415 002c 03       		.uleb128 0x3
 416 002d 04       		.byte	0x4
 417 002e 07       		.byte	0x7
 418 002f 8D010000 		.4byte	.LASF0
 419 0033 03       		.uleb128 0x3
 420 0034 08       		.byte	0x8
 421 0035 05       		.byte	0x5
 422 0036 8D020000 		.4byte	.LASF1
 423 003a 03       		.uleb128 0x3
 424 003b 08       		.byte	0x8
 425 003c 04       		.byte	0x4
 426 003d DA020000 		.4byte	.LASF2
 427 0041 03       		.uleb128 0x3
 428 0042 01       		.byte	0x1
 429 0043 06       		.byte	0x6
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 16


 430 0044 E6020000 		.4byte	.LASF3
 431 0048 03       		.uleb128 0x3
 432 0049 01       		.byte	0x1
 433 004a 08       		.byte	0x8
 434 004b E5000000 		.4byte	.LASF4
 435 004f 03       		.uleb128 0x3
 436 0050 02       		.byte	0x2
 437 0051 05       		.byte	0x5
 438 0052 B8020000 		.4byte	.LASF5
 439 0056 03       		.uleb128 0x3
 440 0057 02       		.byte	0x2
 441 0058 07       		.byte	0x7
 442 0059 A8000000 		.4byte	.LASF6
 443 005d 03       		.uleb128 0x3
 444 005e 04       		.byte	0x4
 445 005f 05       		.byte	0x5
 446 0060 D1020000 		.4byte	.LASF7
 447 0064 03       		.uleb128 0x3
 448 0065 04       		.byte	0x4
 449 0066 07       		.byte	0x7
 450 0067 40010000 		.4byte	.LASF8
 451 006b 03       		.uleb128 0x3
 452 006c 08       		.byte	0x8
 453 006d 07       		.byte	0x7
 454 006e A2010000 		.4byte	.LASF9
 455 0072 03       		.uleb128 0x3
 456 0073 04       		.byte	0x4
 457 0074 07       		.byte	0x7
 458 0075 9B020000 		.4byte	.LASF10
 459 0079 03       		.uleb128 0x3
 460 007a 01       		.byte	0x1
 461 007b 08       		.byte	0x8
 462 007c A4020000 		.4byte	.LASF11
 463 0080 04       		.uleb128 0x4
 464 0081 04       		.byte	0x4
 465 0082 86000000 		.4byte	0x86
 466 0086 05       		.uleb128 0x5
 467 0087 06       		.uleb128 0x6
 468 0088 52010000 		.4byte	.LASF12
 469 008c 02       		.byte	0x2
 470 008d E401     		.2byte	0x1e4
 471 008f 48000000 		.4byte	0x48
 472 0093 06       		.uleb128 0x6
 473 0094 86010000 		.4byte	.LASF13
 474 0098 02       		.byte	0x2
 475 0099 E601     		.2byte	0x1e6
 476 009b 64000000 		.4byte	0x64
 477 009f 03       		.uleb128 0x3
 478 00a0 04       		.byte	0x4
 479 00a1 04       		.byte	0x4
 480 00a2 BB000000 		.4byte	.LASF14
 481 00a6 03       		.uleb128 0x3
 482 00a7 08       		.byte	0x8
 483 00a8 04       		.byte	0x4
 484 00a9 61010000 		.4byte	.LASF15
 485 00ad 06       		.uleb128 0x6
 486 00ae 26010000 		.4byte	.LASF16
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 17


 487 00b2 02       		.byte	0x2
 488 00b3 8E02     		.2byte	0x28e
 489 00b5 B9000000 		.4byte	0xb9
 490 00b9 07       		.uleb128 0x7
 491 00ba 87000000 		.4byte	0x87
 492 00be 06       		.uleb128 0x6
 493 00bf 00000000 		.4byte	.LASF17
 494 00c3 02       		.byte	0x2
 495 00c4 9002     		.2byte	0x290
 496 00c6 CA000000 		.4byte	0xca
 497 00ca 07       		.uleb128 0x7
 498 00cb 93000000 		.4byte	0x93
 499 00cf 06       		.uleb128 0x6
 500 00d0 B9010000 		.4byte	.LASF18
 501 00d4 02       		.byte	0x2
 502 00d5 A002     		.2byte	0x2a0
 503 00d7 80000000 		.4byte	0x80
 504 00db 08       		.uleb128 0x8
 505 00dc 66020000 		.4byte	.LASF20
 506 00e0 01       		.byte	0x1
 507 00e1 CE       		.byte	0xce
 508 00e2 00000000 		.4byte	.LFB4
 509 00e6 0C000000 		.4byte	.LFE4-.LFB4
 510 00ea 01       		.uleb128 0x1
 511 00eb 9C       		.byte	0x9c
 512 00ec 0B010000 		.4byte	0x10b
 513 00f0 09       		.uleb128 0x9
 514 00f1 9A010000 		.4byte	.LASF22
 515 00f5 01       		.byte	0x1
 516 00f6 CE       		.byte	0xce
 517 00f7 CF000000 		.4byte	0xcf
 518 00fb 01       		.uleb128 0x1
 519 00fc 50       		.byte	0x50
 520 00fd 0A       		.uleb128 0xa
 521 00fe A9020000 		.4byte	.LASF19
 522 0102 01       		.byte	0x1
 523 0103 D0       		.byte	0xd0
 524 0104 0B010000 		.4byte	0x10b
 525 0108 01       		.uleb128 0x1
 526 0109 53       		.byte	0x53
 527 010a 00       		.byte	0
 528 010b 04       		.uleb128 0x4
 529 010c 04       		.byte	0x4
 530 010d CF000000 		.4byte	0xcf
 531 0111 0B       		.uleb128 0xb
 532 0112 67000000 		.4byte	.LASF24
 533 0116 01       		.byte	0x1
 534 0117 E6       		.byte	0xe6
 535 0118 CF000000 		.4byte	0xcf
 536 011c 00000000 		.4byte	.LFB5
 537 0120 0C000000 		.4byte	.LFE5-.LFB5
 538 0124 01       		.uleb128 0x1
 539 0125 9C       		.byte	0x9c
 540 0126 38010000 		.4byte	0x138
 541 012a 0A       		.uleb128 0xa
 542 012b A9020000 		.4byte	.LASF19
 543 012f 01       		.byte	0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 18


 544 0130 E8       		.byte	0xe8
 545 0131 0B010000 		.4byte	0x10b
 546 0135 01       		.uleb128 0x1
 547 0136 53       		.byte	0x53
 548 0137 00       		.byte	0
 549 0138 0C       		.uleb128 0xc
 550 0139 2B010000 		.4byte	.LASF21
 551 013d 01       		.byte	0x1
 552 013e 0801     		.2byte	0x108
 553 0140 00000000 		.4byte	.LFB6
 554 0144 10000000 		.4byte	.LFE6-.LFB6
 555 0148 01       		.uleb128 0x1
 556 0149 9C       		.byte	0x9c
 557 014a 5F010000 		.4byte	0x15f
 558 014e 0D       		.uleb128 0xd
 559 014f 58010000 		.4byte	.LASF23
 560 0153 01       		.byte	0x1
 561 0154 0801     		.2byte	0x108
 562 0156 87000000 		.4byte	0x87
 563 015a 00000000 		.4byte	.LLST0
 564 015e 00       		.byte	0
 565 015f 0E       		.uleb128 0xe
 566 0160 52000000 		.4byte	.LASF25
 567 0164 01       		.byte	0x1
 568 0165 1E01     		.2byte	0x11e
 569 0167 87000000 		.4byte	0x87
 570 016b 00000000 		.4byte	.LFB7
 571 016f 0C000000 		.4byte	.LFE7-.LFB7
 572 0173 01       		.uleb128 0x1
 573 0174 9C       		.byte	0x9c
 574 0175 8A010000 		.4byte	0x18a
 575 0179 0F       		.uleb128 0xf
 576 017a 58010000 		.4byte	.LASF23
 577 017e 01       		.byte	0x1
 578 017f 2001     		.2byte	0x120
 579 0181 87000000 		.4byte	0x87
 580 0185 21000000 		.4byte	.LLST1
 581 0189 00       		.byte	0
 582 018a 10       		.uleb128 0x10
 583 018b 68010000 		.4byte	.LASF26
 584 018f 01       		.byte	0x1
 585 0190 3901     		.2byte	0x139
 586 0192 00000000 		.4byte	.LFB8
 587 0196 0C000000 		.4byte	.LFE8-.LFB8
 588 019a 01       		.uleb128 0x1
 589 019b 9C       		.byte	0x9c
 590 019c 11       		.uleb128 0x11
 591 019d C6010000 		.4byte	.LASF39
 592 01a1 01       		.byte	0x1
 593 01a2 4E01     		.2byte	0x14e
 594 01a4 87000000 		.4byte	0x87
 595 01a8 00000000 		.4byte	.LFB9
 596 01ac 10000000 		.4byte	.LFE9-.LFB9
 597 01b0 01       		.uleb128 0x1
 598 01b1 9C       		.byte	0x9c
 599 01b2 10       		.uleb128 0x10
 600 01b3 F2020000 		.4byte	.LASF27
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 19


 601 01b7 01       		.byte	0x1
 602 01b8 6301     		.2byte	0x163
 603 01ba 00000000 		.4byte	.LFB10
 604 01be 0C000000 		.4byte	.LFE10-.LFB10
 605 01c2 01       		.uleb128 0x1
 606 01c3 9C       		.byte	0x9c
 607 01c4 08       		.uleb128 0x8
 608 01c5 C2020000 		.4byte	.LASF28
 609 01c9 01       		.byte	0x1
 610 01ca 40       		.byte	0x40
 611 01cb 00000000 		.4byte	.LFB0
 612 01cf 1C000000 		.4byte	.LFE0-.LFB0
 613 01d3 01       		.uleb128 0x1
 614 01d4 9C       		.byte	0x9c
 615 01d5 16020000 		.4byte	0x216
 616 01d9 12       		.uleb128 0x12
 617 01da 06000000 		.4byte	.LVL7
 618 01de B2010000 		.4byte	0x1b2
 619 01e2 13       		.uleb128 0x13
 620 01e3 0C000000 		.4byte	.LVL8
 621 01e7 DB000000 		.4byte	0xdb
 622 01eb F9010000 		.4byte	0x1f9
 623 01ef 14       		.uleb128 0x14
 624 01f0 01       		.uleb128 0x1
 625 01f1 50       		.byte	0x50
 626 01f2 05       		.uleb128 0x5
 627 01f3 03       		.byte	0x3
 628 01f4 00000000 		.4byte	EndFrame_Interrupt
 629 01f8 00       		.byte	0
 630 01f9 13       		.uleb128 0x13
 631 01fa 12000000 		.4byte	.LVL9
 632 01fe 38010000 		.4byte	0x138
 633 0202 0C020000 		.4byte	0x20c
 634 0206 14       		.uleb128 0x14
 635 0207 01       		.uleb128 0x1
 636 0208 50       		.byte	0x50
 637 0209 01       		.uleb128 0x1
 638 020a 37       		.byte	0x37
 639 020b 00       		.byte	0
 640 020c 12       		.uleb128 0x12
 641 020d 16000000 		.4byte	.LVL10
 642 0211 8A010000 		.4byte	0x18a
 643 0215 00       		.byte	0
 644 0216 08       		.uleb128 0x8
 645 0217 15010000 		.4byte	.LASF29
 646 021b 01       		.byte	0x1
 647 021c 6B       		.byte	0x6b
 648 021d 00000000 		.4byte	.LFB1
 649 0221 1A000000 		.4byte	.LFE1-.LFB1
 650 0225 01       		.uleb128 0x1
 651 0226 9C       		.byte	0x9c
 652 0227 74020000 		.4byte	0x274
 653 022b 15       		.uleb128 0x15
 654 022c 9A010000 		.4byte	.LASF22
 655 0230 01       		.byte	0x1
 656 0231 6B       		.byte	0x6b
 657 0232 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 20


 658 0236 38000000 		.4byte	.LLST2
 659 023a 12       		.uleb128 0x12
 660 023b 08000000 		.4byte	.LVL12
 661 023f B2010000 		.4byte	0x1b2
 662 0243 13       		.uleb128 0x13
 663 0244 0E000000 		.4byte	.LVL13
 664 0248 DB000000 		.4byte	0xdb
 665 024c 57020000 		.4byte	0x257
 666 0250 14       		.uleb128 0x14
 667 0251 01       		.uleb128 0x1
 668 0252 50       		.byte	0x50
 669 0253 02       		.uleb128 0x2
 670 0254 74       		.byte	0x74
 671 0255 00       		.sleb128 0
 672 0256 00       		.byte	0
 673 0257 13       		.uleb128 0x13
 674 0258 14000000 		.4byte	.LVL14
 675 025c 38010000 		.4byte	0x138
 676 0260 6A020000 		.4byte	0x26a
 677 0264 14       		.uleb128 0x14
 678 0265 01       		.uleb128 0x1
 679 0266 50       		.byte	0x50
 680 0267 01       		.uleb128 0x1
 681 0268 37       		.byte	0x37
 682 0269 00       		.byte	0
 683 026a 12       		.uleb128 0x12
 684 026b 18000000 		.4byte	.LVL15
 685 026f 8A010000 		.4byte	0x18a
 686 0273 00       		.byte	0
 687 0274 08       		.uleb128 0x8
 688 0275 D7000000 		.4byte	.LASF30
 689 0279 01       		.byte	0x1
 690 027a 89       		.byte	0x89
 691 027b 00000000 		.4byte	.LFB2
 692 027f 14000000 		.4byte	.LFE2-.LFB2
 693 0283 01       		.uleb128 0x1
 694 0284 9C       		.byte	0x9c
 695 0285 9C020000 		.4byte	0x29c
 696 0289 12       		.uleb128 0x12
 697 028a 06000000 		.4byte	.LVL16
 698 028e B2010000 		.4byte	0x1b2
 699 0292 12       		.uleb128 0x12
 700 0293 0C000000 		.4byte	.LVL17
 701 0297 DB000000 		.4byte	0xdb
 702 029b 00       		.byte	0
 703 029c 10       		.uleb128 0x10
 704 029d 79020000 		.4byte	.LASF31
 705 02a1 01       		.byte	0x1
 706 02a2 7E01     		.2byte	0x17e
 707 02a4 00000000 		.4byte	.LFB11
 708 02a8 0C000000 		.4byte	.LFE11-.LFB11
 709 02ac 01       		.uleb128 0x1
 710 02ad 9C       		.byte	0x9c
 711 02ae 10       		.uleb128 0x10
 712 02af C1000000 		.4byte	.LASF32
 713 02b3 01       		.byte	0x1
 714 02b4 9701     		.2byte	0x197
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 21


 715 02b6 00000000 		.4byte	.LFB12
 716 02ba 0C000000 		.4byte	.LFE12-.LFB12
 717 02be 01       		.uleb128 0x1
 718 02bf 9C       		.byte	0x9c
 719 02c0 08       		.uleb128 0x8
 720 02c1 7A000000 		.4byte	.LASF33
 721 02c5 01       		.byte	0x1
 722 02c6 A3       		.byte	0xa3
 723 02c7 00000000 		.4byte	.LFB3
 724 02cb 12000000 		.4byte	.LFE3-.LFB3
 725 02cf 01       		.uleb128 0x1
 726 02d0 9C       		.byte	0x9c
 727 02d1 FB020000 		.4byte	0x2fb
 728 02d5 13       		.uleb128 0x13
 729 02d6 08000000 		.4byte	.LVL18
 730 02da FB020000 		.4byte	0x2fb
 731 02de E8020000 		.4byte	0x2e8
 732 02e2 14       		.uleb128 0x14
 733 02e3 01       		.uleb128 0x1
 734 02e4 50       		.byte	0x50
 735 02e5 01       		.uleb128 0x1
 736 02e6 4F       		.byte	0x4f
 737 02e7 00       		.byte	0
 738 02e8 12       		.uleb128 0x12
 739 02e9 0C000000 		.4byte	.LVL19
 740 02ed 06030000 		.4byte	0x306
 741 02f1 12       		.uleb128 0x12
 742 02f2 10000000 		.4byte	.LVL20
 743 02f6 AE020000 		.4byte	0x2ae
 744 02fa 00       		.byte	0
 745 02fb 16       		.uleb128 0x16
 746 02fc 8D000000 		.4byte	.LASF34
 747 0300 8D000000 		.4byte	.LASF34
 748 0304 03       		.byte	0x3
 749 0305 5A       		.byte	0x5a
 750 0306 16       		.uleb128 0x16
 751 0307 78010000 		.4byte	.LASF35
 752 030b 78010000 		.4byte	.LASF35
 753 030f 04       		.byte	0x4
 754 0310 24       		.byte	0x24
 755 0311 00       		.byte	0
 756              		.section	.debug_abbrev,"",%progbits
 757              	.Ldebug_abbrev0:
 758 0000 01       		.uleb128 0x1
 759 0001 11       		.uleb128 0x11
 760 0002 01       		.byte	0x1
 761 0003 25       		.uleb128 0x25
 762 0004 0E       		.uleb128 0xe
 763 0005 13       		.uleb128 0x13
 764 0006 0B       		.uleb128 0xb
 765 0007 03       		.uleb128 0x3
 766 0008 0E       		.uleb128 0xe
 767 0009 1B       		.uleb128 0x1b
 768 000a 0E       		.uleb128 0xe
 769 000b 55       		.uleb128 0x55
 770 000c 17       		.uleb128 0x17
 771 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 22


 772 000e 01       		.uleb128 0x1
 773 000f 10       		.uleb128 0x10
 774 0010 17       		.uleb128 0x17
 775 0011 00       		.byte	0
 776 0012 00       		.byte	0
 777 0013 02       		.uleb128 0x2
 778 0014 24       		.uleb128 0x24
 779 0015 00       		.byte	0
 780 0016 0B       		.uleb128 0xb
 781 0017 0B       		.uleb128 0xb
 782 0018 3E       		.uleb128 0x3e
 783 0019 0B       		.uleb128 0xb
 784 001a 03       		.uleb128 0x3
 785 001b 08       		.uleb128 0x8
 786 001c 00       		.byte	0
 787 001d 00       		.byte	0
 788 001e 03       		.uleb128 0x3
 789 001f 24       		.uleb128 0x24
 790 0020 00       		.byte	0
 791 0021 0B       		.uleb128 0xb
 792 0022 0B       		.uleb128 0xb
 793 0023 3E       		.uleb128 0x3e
 794 0024 0B       		.uleb128 0xb
 795 0025 03       		.uleb128 0x3
 796 0026 0E       		.uleb128 0xe
 797 0027 00       		.byte	0
 798 0028 00       		.byte	0
 799 0029 04       		.uleb128 0x4
 800 002a 0F       		.uleb128 0xf
 801 002b 00       		.byte	0
 802 002c 0B       		.uleb128 0xb
 803 002d 0B       		.uleb128 0xb
 804 002e 49       		.uleb128 0x49
 805 002f 13       		.uleb128 0x13
 806 0030 00       		.byte	0
 807 0031 00       		.byte	0
 808 0032 05       		.uleb128 0x5
 809 0033 15       		.uleb128 0x15
 810 0034 00       		.byte	0
 811 0035 27       		.uleb128 0x27
 812 0036 19       		.uleb128 0x19
 813 0037 00       		.byte	0
 814 0038 00       		.byte	0
 815 0039 06       		.uleb128 0x6
 816 003a 16       		.uleb128 0x16
 817 003b 00       		.byte	0
 818 003c 03       		.uleb128 0x3
 819 003d 0E       		.uleb128 0xe
 820 003e 3A       		.uleb128 0x3a
 821 003f 0B       		.uleb128 0xb
 822 0040 3B       		.uleb128 0x3b
 823 0041 05       		.uleb128 0x5
 824 0042 49       		.uleb128 0x49
 825 0043 13       		.uleb128 0x13
 826 0044 00       		.byte	0
 827 0045 00       		.byte	0
 828 0046 07       		.uleb128 0x7
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 23


 829 0047 35       		.uleb128 0x35
 830 0048 00       		.byte	0
 831 0049 49       		.uleb128 0x49
 832 004a 13       		.uleb128 0x13
 833 004b 00       		.byte	0
 834 004c 00       		.byte	0
 835 004d 08       		.uleb128 0x8
 836 004e 2E       		.uleb128 0x2e
 837 004f 01       		.byte	0x1
 838 0050 3F       		.uleb128 0x3f
 839 0051 19       		.uleb128 0x19
 840 0052 03       		.uleb128 0x3
 841 0053 0E       		.uleb128 0xe
 842 0054 3A       		.uleb128 0x3a
 843 0055 0B       		.uleb128 0xb
 844 0056 3B       		.uleb128 0x3b
 845 0057 0B       		.uleb128 0xb
 846 0058 27       		.uleb128 0x27
 847 0059 19       		.uleb128 0x19
 848 005a 11       		.uleb128 0x11
 849 005b 01       		.uleb128 0x1
 850 005c 12       		.uleb128 0x12
 851 005d 06       		.uleb128 0x6
 852 005e 40       		.uleb128 0x40
 853 005f 18       		.uleb128 0x18
 854 0060 9742     		.uleb128 0x2117
 855 0062 19       		.uleb128 0x19
 856 0063 01       		.uleb128 0x1
 857 0064 13       		.uleb128 0x13
 858 0065 00       		.byte	0
 859 0066 00       		.byte	0
 860 0067 09       		.uleb128 0x9
 861 0068 05       		.uleb128 0x5
 862 0069 00       		.byte	0
 863 006a 03       		.uleb128 0x3
 864 006b 0E       		.uleb128 0xe
 865 006c 3A       		.uleb128 0x3a
 866 006d 0B       		.uleb128 0xb
 867 006e 3B       		.uleb128 0x3b
 868 006f 0B       		.uleb128 0xb
 869 0070 49       		.uleb128 0x49
 870 0071 13       		.uleb128 0x13
 871 0072 02       		.uleb128 0x2
 872 0073 18       		.uleb128 0x18
 873 0074 00       		.byte	0
 874 0075 00       		.byte	0
 875 0076 0A       		.uleb128 0xa
 876 0077 34       		.uleb128 0x34
 877 0078 00       		.byte	0
 878 0079 03       		.uleb128 0x3
 879 007a 0E       		.uleb128 0xe
 880 007b 3A       		.uleb128 0x3a
 881 007c 0B       		.uleb128 0xb
 882 007d 3B       		.uleb128 0x3b
 883 007e 0B       		.uleb128 0xb
 884 007f 49       		.uleb128 0x49
 885 0080 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 24


 886 0081 02       		.uleb128 0x2
 887 0082 18       		.uleb128 0x18
 888 0083 00       		.byte	0
 889 0084 00       		.byte	0
 890 0085 0B       		.uleb128 0xb
 891 0086 2E       		.uleb128 0x2e
 892 0087 01       		.byte	0x1
 893 0088 3F       		.uleb128 0x3f
 894 0089 19       		.uleb128 0x19
 895 008a 03       		.uleb128 0x3
 896 008b 0E       		.uleb128 0xe
 897 008c 3A       		.uleb128 0x3a
 898 008d 0B       		.uleb128 0xb
 899 008e 3B       		.uleb128 0x3b
 900 008f 0B       		.uleb128 0xb
 901 0090 27       		.uleb128 0x27
 902 0091 19       		.uleb128 0x19
 903 0092 49       		.uleb128 0x49
 904 0093 13       		.uleb128 0x13
 905 0094 11       		.uleb128 0x11
 906 0095 01       		.uleb128 0x1
 907 0096 12       		.uleb128 0x12
 908 0097 06       		.uleb128 0x6
 909 0098 40       		.uleb128 0x40
 910 0099 18       		.uleb128 0x18
 911 009a 9742     		.uleb128 0x2117
 912 009c 19       		.uleb128 0x19
 913 009d 01       		.uleb128 0x1
 914 009e 13       		.uleb128 0x13
 915 009f 00       		.byte	0
 916 00a0 00       		.byte	0
 917 00a1 0C       		.uleb128 0xc
 918 00a2 2E       		.uleb128 0x2e
 919 00a3 01       		.byte	0x1
 920 00a4 3F       		.uleb128 0x3f
 921 00a5 19       		.uleb128 0x19
 922 00a6 03       		.uleb128 0x3
 923 00a7 0E       		.uleb128 0xe
 924 00a8 3A       		.uleb128 0x3a
 925 00a9 0B       		.uleb128 0xb
 926 00aa 3B       		.uleb128 0x3b
 927 00ab 05       		.uleb128 0x5
 928 00ac 27       		.uleb128 0x27
 929 00ad 19       		.uleb128 0x19
 930 00ae 11       		.uleb128 0x11
 931 00af 01       		.uleb128 0x1
 932 00b0 12       		.uleb128 0x12
 933 00b1 06       		.uleb128 0x6
 934 00b2 40       		.uleb128 0x40
 935 00b3 18       		.uleb128 0x18
 936 00b4 9742     		.uleb128 0x2117
 937 00b6 19       		.uleb128 0x19
 938 00b7 01       		.uleb128 0x1
 939 00b8 13       		.uleb128 0x13
 940 00b9 00       		.byte	0
 941 00ba 00       		.byte	0
 942 00bb 0D       		.uleb128 0xd
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 25


 943 00bc 05       		.uleb128 0x5
 944 00bd 00       		.byte	0
 945 00be 03       		.uleb128 0x3
 946 00bf 0E       		.uleb128 0xe
 947 00c0 3A       		.uleb128 0x3a
 948 00c1 0B       		.uleb128 0xb
 949 00c2 3B       		.uleb128 0x3b
 950 00c3 05       		.uleb128 0x5
 951 00c4 49       		.uleb128 0x49
 952 00c5 13       		.uleb128 0x13
 953 00c6 02       		.uleb128 0x2
 954 00c7 17       		.uleb128 0x17
 955 00c8 00       		.byte	0
 956 00c9 00       		.byte	0
 957 00ca 0E       		.uleb128 0xe
 958 00cb 2E       		.uleb128 0x2e
 959 00cc 01       		.byte	0x1
 960 00cd 3F       		.uleb128 0x3f
 961 00ce 19       		.uleb128 0x19
 962 00cf 03       		.uleb128 0x3
 963 00d0 0E       		.uleb128 0xe
 964 00d1 3A       		.uleb128 0x3a
 965 00d2 0B       		.uleb128 0xb
 966 00d3 3B       		.uleb128 0x3b
 967 00d4 05       		.uleb128 0x5
 968 00d5 27       		.uleb128 0x27
 969 00d6 19       		.uleb128 0x19
 970 00d7 49       		.uleb128 0x49
 971 00d8 13       		.uleb128 0x13
 972 00d9 11       		.uleb128 0x11
 973 00da 01       		.uleb128 0x1
 974 00db 12       		.uleb128 0x12
 975 00dc 06       		.uleb128 0x6
 976 00dd 40       		.uleb128 0x40
 977 00de 18       		.uleb128 0x18
 978 00df 9742     		.uleb128 0x2117
 979 00e1 19       		.uleb128 0x19
 980 00e2 01       		.uleb128 0x1
 981 00e3 13       		.uleb128 0x13
 982 00e4 00       		.byte	0
 983 00e5 00       		.byte	0
 984 00e6 0F       		.uleb128 0xf
 985 00e7 34       		.uleb128 0x34
 986 00e8 00       		.byte	0
 987 00e9 03       		.uleb128 0x3
 988 00ea 0E       		.uleb128 0xe
 989 00eb 3A       		.uleb128 0x3a
 990 00ec 0B       		.uleb128 0xb
 991 00ed 3B       		.uleb128 0x3b
 992 00ee 05       		.uleb128 0x5
 993 00ef 49       		.uleb128 0x49
 994 00f0 13       		.uleb128 0x13
 995 00f1 02       		.uleb128 0x2
 996 00f2 17       		.uleb128 0x17
 997 00f3 00       		.byte	0
 998 00f4 00       		.byte	0
 999 00f5 10       		.uleb128 0x10
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 26


 1000 00f6 2E       		.uleb128 0x2e
 1001 00f7 00       		.byte	0
 1002 00f8 3F       		.uleb128 0x3f
 1003 00f9 19       		.uleb128 0x19
 1004 00fa 03       		.uleb128 0x3
 1005 00fb 0E       		.uleb128 0xe
 1006 00fc 3A       		.uleb128 0x3a
 1007 00fd 0B       		.uleb128 0xb
 1008 00fe 3B       		.uleb128 0x3b
 1009 00ff 05       		.uleb128 0x5
 1010 0100 27       		.uleb128 0x27
 1011 0101 19       		.uleb128 0x19
 1012 0102 11       		.uleb128 0x11
 1013 0103 01       		.uleb128 0x1
 1014 0104 12       		.uleb128 0x12
 1015 0105 06       		.uleb128 0x6
 1016 0106 40       		.uleb128 0x40
 1017 0107 18       		.uleb128 0x18
 1018 0108 9742     		.uleb128 0x2117
 1019 010a 19       		.uleb128 0x19
 1020 010b 00       		.byte	0
 1021 010c 00       		.byte	0
 1022 010d 11       		.uleb128 0x11
 1023 010e 2E       		.uleb128 0x2e
 1024 010f 00       		.byte	0
 1025 0110 3F       		.uleb128 0x3f
 1026 0111 19       		.uleb128 0x19
 1027 0112 03       		.uleb128 0x3
 1028 0113 0E       		.uleb128 0xe
 1029 0114 3A       		.uleb128 0x3a
 1030 0115 0B       		.uleb128 0xb
 1031 0116 3B       		.uleb128 0x3b
 1032 0117 05       		.uleb128 0x5
 1033 0118 27       		.uleb128 0x27
 1034 0119 19       		.uleb128 0x19
 1035 011a 49       		.uleb128 0x49
 1036 011b 13       		.uleb128 0x13
 1037 011c 11       		.uleb128 0x11
 1038 011d 01       		.uleb128 0x1
 1039 011e 12       		.uleb128 0x12
 1040 011f 06       		.uleb128 0x6
 1041 0120 40       		.uleb128 0x40
 1042 0121 18       		.uleb128 0x18
 1043 0122 9742     		.uleb128 0x2117
 1044 0124 19       		.uleb128 0x19
 1045 0125 00       		.byte	0
 1046 0126 00       		.byte	0
 1047 0127 12       		.uleb128 0x12
 1048 0128 898201   		.uleb128 0x4109
 1049 012b 00       		.byte	0
 1050 012c 11       		.uleb128 0x11
 1051 012d 01       		.uleb128 0x1
 1052 012e 31       		.uleb128 0x31
 1053 012f 13       		.uleb128 0x13
 1054 0130 00       		.byte	0
 1055 0131 00       		.byte	0
 1056 0132 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 27


 1057 0133 898201   		.uleb128 0x4109
 1058 0136 01       		.byte	0x1
 1059 0137 11       		.uleb128 0x11
 1060 0138 01       		.uleb128 0x1
 1061 0139 31       		.uleb128 0x31
 1062 013a 13       		.uleb128 0x13
 1063 013b 01       		.uleb128 0x1
 1064 013c 13       		.uleb128 0x13
 1065 013d 00       		.byte	0
 1066 013e 00       		.byte	0
 1067 013f 14       		.uleb128 0x14
 1068 0140 8A8201   		.uleb128 0x410a
 1069 0143 00       		.byte	0
 1070 0144 02       		.uleb128 0x2
 1071 0145 18       		.uleb128 0x18
 1072 0146 9142     		.uleb128 0x2111
 1073 0148 18       		.uleb128 0x18
 1074 0149 00       		.byte	0
 1075 014a 00       		.byte	0
 1076 014b 15       		.uleb128 0x15
 1077 014c 05       		.uleb128 0x5
 1078 014d 00       		.byte	0
 1079 014e 03       		.uleb128 0x3
 1080 014f 0E       		.uleb128 0xe
 1081 0150 3A       		.uleb128 0x3a
 1082 0151 0B       		.uleb128 0xb
 1083 0152 3B       		.uleb128 0x3b
 1084 0153 0B       		.uleb128 0xb
 1085 0154 49       		.uleb128 0x49
 1086 0155 13       		.uleb128 0x13
 1087 0156 02       		.uleb128 0x2
 1088 0157 17       		.uleb128 0x17
 1089 0158 00       		.byte	0
 1090 0159 00       		.byte	0
 1091 015a 16       		.uleb128 0x16
 1092 015b 2E       		.uleb128 0x2e
 1093 015c 00       		.byte	0
 1094 015d 3F       		.uleb128 0x3f
 1095 015e 19       		.uleb128 0x19
 1096 015f 3C       		.uleb128 0x3c
 1097 0160 19       		.uleb128 0x19
 1098 0161 6E       		.uleb128 0x6e
 1099 0162 0E       		.uleb128 0xe
 1100 0163 03       		.uleb128 0x3
 1101 0164 0E       		.uleb128 0xe
 1102 0165 3A       		.uleb128 0x3a
 1103 0166 0B       		.uleb128 0xb
 1104 0167 3B       		.uleb128 0x3b
 1105 0168 0B       		.uleb128 0xb
 1106 0169 00       		.byte	0
 1107 016a 00       		.byte	0
 1108 016b 00       		.byte	0
 1109              		.section	.debug_loc,"",%progbits
 1110              	.Ldebug_loc0:
 1111              	.LLST0:
 1112 0000 00000000 		.4byte	.LVL3
 1113 0004 02000000 		.4byte	.LVL4
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 28


 1114 0008 0100     		.2byte	0x1
 1115 000a 50       		.byte	0x50
 1116 000b 02000000 		.4byte	.LVL4
 1117 000f 10000000 		.4byte	.LFE6
 1118 0013 0400     		.2byte	0x4
 1119 0015 F3       		.byte	0xf3
 1120 0016 01       		.uleb128 0x1
 1121 0017 50       		.byte	0x50
 1122 0018 9F       		.byte	0x9f
 1123 0019 00000000 		.4byte	0
 1124 001d 00000000 		.4byte	0
 1125              	.LLST1:
 1126 0021 04000000 		.4byte	.LVL5
 1127 0025 06000000 		.4byte	.LVL6
 1128 0029 0500     		.2byte	0x5
 1129 002b 70       		.byte	0x70
 1130 002c 00       		.sleb128 0
 1131 002d 35       		.byte	0x35
 1132 002e 25       		.byte	0x25
 1133 002f 9F       		.byte	0x9f
 1134 0030 00000000 		.4byte	0
 1135 0034 00000000 		.4byte	0
 1136              	.LLST2:
 1137 0038 00000000 		.4byte	.LVL11
 1138 003c 07000000 		.4byte	.LVL12-1
 1139 0040 0100     		.2byte	0x1
 1140 0042 50       		.byte	0x50
 1141 0043 07000000 		.4byte	.LVL12-1
 1142 0047 1A000000 		.4byte	.LFE1
 1143 004b 0100     		.2byte	0x1
 1144 004d 54       		.byte	0x54
 1145 004e 00000000 		.4byte	0
 1146 0052 00000000 		.4byte	0
 1147              		.section	.debug_aranges,"",%progbits
 1148 0000 7C000000 		.4byte	0x7c
 1149 0004 0200     		.2byte	0x2
 1150 0006 00000000 		.4byte	.Ldebug_info0
 1151 000a 04       		.byte	0x4
 1152 000b 00       		.byte	0
 1153 000c 0000     		.2byte	0
 1154 000e 0000     		.2byte	0
 1155 0010 00000000 		.4byte	.LFB4
 1156 0014 0C000000 		.4byte	.LFE4-.LFB4
 1157 0018 00000000 		.4byte	.LFB5
 1158 001c 0C000000 		.4byte	.LFE5-.LFB5
 1159 0020 00000000 		.4byte	.LFB6
 1160 0024 10000000 		.4byte	.LFE6-.LFB6
 1161 0028 00000000 		.4byte	.LFB7
 1162 002c 0C000000 		.4byte	.LFE7-.LFB7
 1163 0030 00000000 		.4byte	.LFB8
 1164 0034 0C000000 		.4byte	.LFE8-.LFB8
 1165 0038 00000000 		.4byte	.LFB9
 1166 003c 10000000 		.4byte	.LFE9-.LFB9
 1167 0040 00000000 		.4byte	.LFB10
 1168 0044 0C000000 		.4byte	.LFE10-.LFB10
 1169 0048 00000000 		.4byte	.LFB0
 1170 004c 1C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 29


 1171 0050 00000000 		.4byte	.LFB1
 1172 0054 1A000000 		.4byte	.LFE1-.LFB1
 1173 0058 00000000 		.4byte	.LFB2
 1174 005c 14000000 		.4byte	.LFE2-.LFB2
 1175 0060 00000000 		.4byte	.LFB11
 1176 0064 0C000000 		.4byte	.LFE11-.LFB11
 1177 0068 00000000 		.4byte	.LFB12
 1178 006c 0C000000 		.4byte	.LFE12-.LFB12
 1179 0070 00000000 		.4byte	.LFB3
 1180 0074 12000000 		.4byte	.LFE3-.LFB3
 1181 0078 00000000 		.4byte	0
 1182 007c 00000000 		.4byte	0
 1183              		.section	.debug_ranges,"",%progbits
 1184              	.Ldebug_ranges0:
 1185 0000 00000000 		.4byte	.LFB4
 1186 0004 0C000000 		.4byte	.LFE4
 1187 0008 00000000 		.4byte	.LFB5
 1188 000c 0C000000 		.4byte	.LFE5
 1189 0010 00000000 		.4byte	.LFB6
 1190 0014 10000000 		.4byte	.LFE6
 1191 0018 00000000 		.4byte	.LFB7
 1192 001c 0C000000 		.4byte	.LFE7
 1193 0020 00000000 		.4byte	.LFB8
 1194 0024 0C000000 		.4byte	.LFE8
 1195 0028 00000000 		.4byte	.LFB9
 1196 002c 10000000 		.4byte	.LFE9
 1197 0030 00000000 		.4byte	.LFB10
 1198 0034 0C000000 		.4byte	.LFE10
 1199 0038 00000000 		.4byte	.LFB0
 1200 003c 1C000000 		.4byte	.LFE0
 1201 0040 00000000 		.4byte	.LFB1
 1202 0044 1A000000 		.4byte	.LFE1
 1203 0048 00000000 		.4byte	.LFB2
 1204 004c 14000000 		.4byte	.LFE2
 1205 0050 00000000 		.4byte	.LFB11
 1206 0054 0C000000 		.4byte	.LFE11
 1207 0058 00000000 		.4byte	.LFB12
 1208 005c 0C000000 		.4byte	.LFE12
 1209 0060 00000000 		.4byte	.LFB3
 1210 0064 12000000 		.4byte	.LFE3
 1211 0068 00000000 		.4byte	0
 1212 006c 00000000 		.4byte	0
 1213              		.section	.debug_line,"",%progbits
 1214              	.Ldebug_line0:
 1215 0000 57010000 		.section	.debug_str,"MS",%progbits,1
 1215      02006700 
 1215      00000201 
 1215      FB0E0D00 
 1215      01010101 
 1216              	.LASF17:
 1217 0000 72656733 		.ascii	"reg32\000"
 1217      3200
 1218              	.LASF38:
 1219 0006 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\generic\\Ma"
 1219      73657273 
 1219      5C652E69 
 1219      76616E6F 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 30


 1219      765C446F 
 1220 0033 6E636865 		.ascii	"nchester encoder-decoder.cydsn\000"
 1220      73746572 
 1220      20656E63 
 1220      6F646572 
 1220      2D646563 
 1221              	.LASF25:
 1222 0052 456E6446 		.ascii	"EndFrame_GetPriority\000"
 1222      72616D65 
 1222      5F476574 
 1222      5072696F 
 1222      72697479 
 1223              	.LASF24:
 1224 0067 456E6446 		.ascii	"EndFrame_GetVector\000"
 1224      72616D65 
 1224      5F476574 
 1224      56656374 
 1224      6F7200
 1225              	.LASF33:
 1226 007a 456E6446 		.ascii	"EndFrame_Interrupt\000"
 1226      72616D65 
 1226      5F496E74 
 1226      65727275 
 1226      707400
 1227              	.LASF34:
 1228 008d 42697443 		.ascii	"BitCounterDec_WriteCounter\000"
 1228      6F756E74 
 1228      65724465 
 1228      635F5772 
 1228      69746543 
 1229              	.LASF6:
 1230 00a8 73686F72 		.ascii	"short unsigned int\000"
 1230      7420756E 
 1230      7369676E 
 1230      65642069 
 1230      6E7400
 1231              	.LASF14:
 1232 00bb 666C6F61 		.ascii	"float\000"
 1232      7400
 1233              	.LASF32:
 1234 00c1 456E6446 		.ascii	"EndFrame_ClearPending\000"
 1234      72616D65 
 1234      5F436C65 
 1234      61725065 
 1234      6E64696E 
 1235              	.LASF30:
 1236 00d7 456E6446 		.ascii	"EndFrame_Stop\000"
 1236      72616D65 
 1236      5F53746F 
 1236      7000
 1237              	.LASF4:
 1238 00e5 756E7369 		.ascii	"unsigned char\000"
 1238      676E6564 
 1238      20636861 
 1238      7200
 1239              	.LASF37:
 1240 00f3 47656E65 		.ascii	"Generated_Source\\PSoC5\\EndFrame.c\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 31


 1240      72617465 
 1240      645F536F 
 1240      75726365 
 1240      5C50536F 
 1241              	.LASF29:
 1242 0115 456E6446 		.ascii	"EndFrame_StartEx\000"
 1242      72616D65 
 1242      5F537461 
 1242      72744578 
 1242      00
 1243              	.LASF16:
 1244 0126 72656738 		.ascii	"reg8\000"
 1244      00
 1245              	.LASF21:
 1246 012b 456E6446 		.ascii	"EndFrame_SetPriority\000"
 1246      72616D65 
 1246      5F536574 
 1246      5072696F 
 1246      72697479 
 1247              	.LASF8:
 1248 0140 6C6F6E67 		.ascii	"long unsigned int\000"
 1248      20756E73 
 1248      69676E65 
 1248      6420696E 
 1248      7400
 1249              	.LASF12:
 1250 0152 75696E74 		.ascii	"uint8\000"
 1250      3800
 1251              	.LASF23:
 1252 0158 7072696F 		.ascii	"priority\000"
 1252      72697479 
 1252      00
 1253              	.LASF15:
 1254 0161 646F7562 		.ascii	"double\000"
 1254      6C6500
 1255              	.LASF26:
 1256 0168 456E6446 		.ascii	"EndFrame_Enable\000"
 1256      72616D65 
 1256      5F456E61 
 1256      626C6500 
 1257              	.LASF35:
 1258 0178 436C6561 		.ascii	"ClearRcStatus\000"
 1258      72526353 
 1258      74617475 
 1258      7300
 1259              	.LASF13:
 1260 0186 75696E74 		.ascii	"uint32\000"
 1260      333200
 1261              	.LASF0:
 1262 018d 756E7369 		.ascii	"unsigned int\000"
 1262      676E6564 
 1262      20696E74 
 1262      00
 1263              	.LASF22:
 1264 019a 61646472 		.ascii	"address\000"
 1264      65737300 
 1265              	.LASF9:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 32


 1266 01a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1266      206C6F6E 
 1266      6720756E 
 1266      7369676E 
 1266      65642069 
 1267              	.LASF18:
 1268 01b9 63796973 		.ascii	"cyisraddress\000"
 1268      72616464 
 1268      72657373 
 1268      00
 1269              	.LASF39:
 1270 01c6 456E6446 		.ascii	"EndFrame_GetState\000"
 1270      72616D65 
 1270      5F476574 
 1270      53746174 
 1270      6500
 1271              	.LASF36:
 1272 01d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1272      43313120 
 1272      352E342E 
 1272      31203230 
 1272      31363036 
 1273 020b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1273      20726576 
 1273      6973696F 
 1273      6E203233 
 1273      37373135 
 1274 023e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1274      66756E63 
 1274      74696F6E 
 1274      2D736563 
 1274      74696F6E 
 1275              	.LASF20:
 1276 0266 456E6446 		.ascii	"EndFrame_SetVector\000"
 1276      72616D65 
 1276      5F536574 
 1276      56656374 
 1276      6F7200
 1277              	.LASF31:
 1278 0279 456E6446 		.ascii	"EndFrame_SetPending\000"
 1278      72616D65 
 1278      5F536574 
 1278      50656E64 
 1278      696E6700 
 1279              	.LASF1:
 1280 028d 6C6F6E67 		.ascii	"long long int\000"
 1280      206C6F6E 
 1280      6720696E 
 1280      7400
 1281              	.LASF10:
 1282 029b 73697A65 		.ascii	"sizetype\000"
 1282      74797065 
 1282      00
 1283              	.LASF11:
 1284 02a4 63686172 		.ascii	"char\000"
 1284      00
 1285              	.LASF19:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccnw8bIr.s 			page 33


 1286 02a9 72616D56 		.ascii	"ramVectorTable\000"
 1286      6563746F 
 1286      72546162 
 1286      6C6500
 1287              	.LASF5:
 1288 02b8 73686F72 		.ascii	"short int\000"
 1288      7420696E 
 1288      7400
 1289              	.LASF28:
 1290 02c2 456E6446 		.ascii	"EndFrame_Start\000"
 1290      72616D65 
 1290      5F537461 
 1290      727400
 1291              	.LASF7:
 1292 02d1 6C6F6E67 		.ascii	"long int\000"
 1292      20696E74 
 1292      00
 1293              	.LASF2:
 1294 02da 6C6F6E67 		.ascii	"long double\000"
 1294      20646F75 
 1294      626C6500 
 1295              	.LASF3:
 1296 02e6 7369676E 		.ascii	"signed char\000"
 1296      65642063 
 1296      68617200 
 1297              	.LASF27:
 1298 02f2 456E6446 		.ascii	"EndFrame_Disable\000"
 1298      72616D65 
 1298      5F446973 
 1298      61626C65 
 1298      00
 1299              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
