ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_Init, %function
  25              	USBUART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 2


  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 3


  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 4


 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBUART.c **** }
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 5


 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 6


 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0746     		mov	r7, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 404A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0126     		movs	r6, #1
  57 001e 3C4B     		ldr	r3, .L3+4
  58 0020 1E70     		strb	r6, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0225     		movs	r5, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1D70     		strb	r5, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 7


 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 354C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 344A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3343     		orrs	r3, r3, r6
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3046     		mov	r0, r6
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
  95              		.loc 1 287 0
  96 0062 2E4B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 2B43     		orrs	r3, r3, r5
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 8


 108              		.loc 1 292 0
 109 007a 2846     		mov	r0, r5
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 254A     		ldr	r2, .L3+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 3846     		mov	r0, r7
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 9


 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 2049     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 1D49     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 147              		.loc 1 340 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 1520     		movs	r0, #21
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 152              		.loc 1 341 0
 153 00c0 1A49     		ldr	r1, .L3+32
 154 00c2 1520     		movs	r0, #21
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 157              		.loc 1 346 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 3046     		mov	r0, r6
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 162              		.loc 1 347 0
 163 00d0 1749     		ldr	r1, .L3+36
 164 00d2 3046     		mov	r0, r6
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 10


 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 167              		.loc 1 352 0
 168 00d8 0721     		movs	r1, #7
 169 00da 2846     		mov	r0, r5
 170 00dc FFF7FEFF 		bl	CyIntSetPriority
 171              	.LVL15:
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 172              		.loc 1 353 0
 173 00e0 1449     		ldr	r1, .L3+40
 174 00e2 2846     		mov	r0, r5
 175 00e4 FFF7FEFF 		bl	CyIntSetVector
 176              	.LVL16:
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 177              		.loc 1 358 0
 178 00e8 0721     		movs	r1, #7
 179 00ea 0320     		movs	r0, #3
 180 00ec FFF7FEFF 		bl	CyIntSetPriority
 181              	.LVL17:
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 182              		.loc 1 359 0
 183 00f0 1149     		ldr	r1, .L3+44
 184 00f2 0320     		movs	r0, #3
 185 00f4 FFF7FEFF 		bl	CyIntSetVector
 186              	.LVL18:
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 11


 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 187              		.loc 1 401 0
 188 00f8 0721     		movs	r1, #7
 189 00fa 0C20     		movs	r0, #12
 190 00fc FFF7FEFF 		bl	CyIntSetPriority
 191              	.LVL19:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 192              		.loc 1 402 0
 193 0100 0E49     		ldr	r1, .L3+48
 194 0102 0C20     		movs	r0, #12
 195 0104 FFF7FEFF 		bl	CyIntSetVector
 196              	.LVL20:
 197 0108 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 198              	.LVL21:
 199              	.L4:
 200 010a 00BF     		.align	2
 201              	.L3:
 202 010c A5430040 		.word	1073759141
 203 0110 9D600040 		.word	1073766557
 204 0114 94430040 		.word	1073759124
 205 0118 12600040 		.word	1073766418
 206 011c F8510040 		.word	1073762808
 207 0120 84600040 		.word	1073766532
 208 0124 00000000 		.word	USBUART_BUS_RESET_ISR
 209 0128 00000000 		.word	USBUART_EP_0_ISR
 210 012c 00000000 		.word	USBUART_SOF_ISR
 211 0130 00000000 		.word	USBUART_EP_1_ISR
 212 0134 00000000 		.word	USBUART_EP_2_ISR
 213 0138 00000000 		.word	USBUART_EP_3_ISR
 214 013c 00000000 		.word	USBUART_DP_ISR
 215              		.cfi_endproc
 216              	.LFE1:
 217              		.size	USBUART_Init, .-USBUART_Init
 218              		.section	.text.USBUART_InitComponent,"ax",%progbits
 219              		.align	2
 220              		.global	USBUART_InitComponent
 221              		.thumb
 222              		.thumb_func
 223              		.type	USBUART_InitComponent, %function
 224              	USBUART_InitComponent:
 225              	.LFB2:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 12


 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 13


 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 226              		.loc 1 461 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL22:
 231 0000 10B5     		push	{r4, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
 235              	.LVL23:
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 236              		.loc 1 469 0
 237 0002 0023     		movs	r3, #0
 238 0004 04E0     		b	.L6
 239              	.LVL24:
 240              	.L7:
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 241              		.loc 1 471 0 discriminator 3
 242 0006 0124     		movs	r4, #1
 243 0008 244A     		ldr	r2, .L14
 244 000a D454     		strb	r4, [r2, r3]
 469:Generated_Source\PSoC5/USBUART.c ****     {
 245              		.loc 1 469 0 discriminator 3
 246 000c 2344     		add	r3, r3, r4
 247              	.LVL25:
 248 000e DBB2     		uxtb	r3, r3
 249              	.LVL26:
 250              	.L6:
 469:Generated_Source\PSoC5/USBUART.c ****     {
 251              		.loc 1 469 0 is_stmt 0 discriminator 1
 252 0010 012B     		cmp	r3, #1
 253 0012 F8D9     		bls	.L7
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 254              		.loc 1 476 0 is_stmt 1
 255 0014 224B     		ldr	r3, .L14+4
 256              	.LVL27:
 257 0016 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 258              		.loc 1 479 0
 259 0018 0023     		movs	r3, #0
 260 001a 224A     		ldr	r2, .L14+8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 14


 261 001c 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 262              		.loc 1 480 0
 263 001e 224A     		ldr	r2, .L14+12
 264 0020 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 265              		.loc 1 481 0
 266 0022 224A     		ldr	r2, .L14+16
 267 0024 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 268              		.loc 1 482 0
 269 0026 224A     		ldr	r2, .L14+20
 270 0028 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 271              		.loc 1 483 0
 272 002a 224A     		ldr	r2, .L14+24
 273 002c 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 274              		.loc 1 484 0
 275 002e 224A     		ldr	r2, .L14+28
 276 0030 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 277              		.loc 1 485 0
 278 0032 224A     		ldr	r2, .L14+32
 279 0034 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 280              		.loc 1 493 0
 281 0036 224B     		ldr	r3, .L14+36
 282 0038 4FF40002 		mov	r2, #8388608
 283 003c 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 284              		.loc 1 494 0
 285 003e 4FF08072 		mov	r2, #16777216
 286 0042 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 287              		.loc 1 497 0
 288 0044 4FF40012 		mov	r2, #2097152
 289 0048 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 290              		.loc 1 501 0
 291 004a 0222     		movs	r2, #2
 292 004c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 15


 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 293              		.loc 1 505 0
 294 004e 0422     		movs	r2, #4
 295 0050 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 296              		.loc 1 509 0
 297 0052 0822     		movs	r2, #8
 298 0054 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 16


 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 299              		.loc 1 573 0
 300 0056 11B1     		cbz	r1, .L9
 301 0058 0129     		cmp	r1, #1
 302 005a 06D0     		beq	.L10
 303 005c 0BE0     		b	.L12
 304              	.L9:
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 305              		.loc 1 577 0
 306 005e 194A     		ldr	r2, .L14+40
 307 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 308 0062 03F0FE03 		and	r3, r3, #254
 309 0066 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 310              		.loc 1 578 0
 311 0068 0AE0     		b	.L11
 312              	.L10:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 313              		.loc 1 582 0
 314 006a 164A     		ldr	r2, .L14+40
 315 006c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 316 006e 43F00103 		orr	r3, r3, #1
 317 0072 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 318              		.loc 1 583 0
 319 0074 04E0     		b	.L11
 320              	.L12:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 17


 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 321              		.loc 1 591 0
 322 0076 134A     		ldr	r2, .L14+40
 323 0078 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 324 007a 43F00103 		orr	r3, r3, #1
 325 007e 1370     		strb	r3, [r2]
 326              	.L11:
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 327              		.loc 1 627 0
 328 0080 0322     		movs	r2, #3
 329 0082 114B     		ldr	r3, .L14+44
 330 0084 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 331              		.loc 1 630 0
 332 0086 8022     		movs	r2, #128
 333 0088 203B     		subs	r3, r3, #32
 334 008a 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 335              		.loc 1 631 0
 336 008c 0120     		movs	r0, #1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 18


 337              	.LVL28:
 338 008e FFF7FEFF 		bl	CyDelayCycles
 339              	.LVL29:
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 340              		.loc 1 635 0
 341 0092 0422     		movs	r2, #4
 342 0094 0D4B     		ldr	r3, .L14+48
 343 0096 1A70     		strb	r2, [r3]
 344 0098 10BD     		pop	{r4, pc}
 345              	.L15:
 346 009a 00BF     		.align	2
 347              	.L14:
 348 009c 00000000 		.word	USBUART_hidProtocol
 349 00a0 00000000 		.word	USBUART_device
 350 00a4 00000000 		.word	USBUART_transferState
 351 00a8 00000000 		.word	USBUART_configurationChanged
 352 00ac 00000000 		.word	USBUART_configuration
 353 00b0 00000000 		.word	USBUART_interfaceNumber
 354 00b4 00000000 		.word	USBUART_deviceAddress
 355 00b8 00000000 		.word	USBUART_deviceStatus
 356 00bc 00000000 		.word	USBUART_lastPacketSize
 357 00c0 00E100E0 		.word	-536813312
 358 00c4 09600040 		.word	1073766409
 359 00c8 28600040 		.word	1073766440
 360 00cc 12600040 		.word	1073766418
 361              		.cfi_endproc
 362              	.LFE2:
 363              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 364              		.section	.text.USBUART_Start,"ax",%progbits
 365              		.align	2
 366              		.global	USBUART_Start
 367              		.thumb
 368              		.thumb_func
 369              		.type	USBUART_Start, %function
 370              	USBUART_Start:
 371              	.LFB0:
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 372              		.loc 1 187 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL30:
 377 0000 38B5     		push	{r3, r4, r5, lr}
 378              		.cfi_def_cfa_offset 16
 379              		.cfi_offset 3, -16
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 5, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 384 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBUART.c ****     {
 385              		.loc 1 188 0
 386 0006 064B     		ldr	r3, .L19
 387 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 19


 388 000a 23B9     		cbnz	r3, .L17
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 389              		.loc 1 190 0
 390 000c FFF7FEFF 		bl	USBUART_Init
 391              	.LVL31:
 191:Generated_Source\PSoC5/USBUART.c ****     }
 392              		.loc 1 191 0
 393 0010 0122     		movs	r2, #1
 394 0012 034B     		ldr	r3, .L19
 395 0014 1A70     		strb	r2, [r3]
 396              	.L17:
 194:Generated_Source\PSoC5/USBUART.c **** }
 397              		.loc 1 194 0
 398 0016 2946     		mov	r1, r5
 399 0018 2046     		mov	r0, r4
 400 001a FFF7FEFF 		bl	USBUART_InitComponent
 401              	.LVL32:
 402 001e 38BD     		pop	{r3, r4, r5, pc}
 403              	.L20:
 404              		.align	2
 405              	.L19:
 406 0020 00000000 		.word	.LANCHOR0
 407              		.cfi_endproc
 408              	.LFE0:
 409              		.size	USBUART_Start, .-USBUART_Start
 410              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 411              		.align	2
 412              		.global	USBUART_ReInitComponent
 413              		.thumb
 414              		.thumb_func
 415              		.type	USBUART_ReInitComponent, %function
 416              	USBUART_ReInitComponent:
 417              	.LFB3:
 636:Generated_Source\PSoC5/USBUART.c **** }
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 20


 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 418              		.loc 1 672 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423              	.LVL33:
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 424              		.loc 1 679 0
 425 0000 0023     		movs	r3, #0
 426 0002 04E0     		b	.L22
 427              	.LVL34:
 428              	.L23:
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 429              		.loc 1 681 0 discriminator 3
 430 0004 0121     		movs	r1, #1
 431 0006 0E4A     		ldr	r2, .L24
 432 0008 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC5/USBUART.c ****     {
 433              		.loc 1 679 0 discriminator 3
 434 000a 0B44     		add	r3, r3, r1
 435              	.LVL35:
 436 000c DBB2     		uxtb	r3, r3
 437              	.LVL36:
 438              	.L22:
 679:Generated_Source\PSoC5/USBUART.c ****     {
 439              		.loc 1 679 0 is_stmt 0 discriminator 1
 440 000e 012B     		cmp	r3, #1
 441 0010 F8D9     		bls	.L23
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 442              		.loc 1 686 0 is_stmt 1
 443 0012 0023     		movs	r3, #0
 444              	.LVL37:
 445 0014 0B4A     		ldr	r2, .L24+4
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 21


 446 0016 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 447              		.loc 1 687 0
 448 0018 0B4A     		ldr	r2, .L24+8
 449 001a 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 450              		.loc 1 688 0
 451 001c 0B4A     		ldr	r2, .L24+12
 452 001e 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 453              		.loc 1 689 0
 454 0020 0B4A     		ldr	r2, .L24+16
 455 0022 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 456              		.loc 1 690 0
 457 0024 0B4A     		ldr	r2, .L24+20
 458 0026 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 459              		.loc 1 691 0
 460 0028 0B4A     		ldr	r2, .L24+24
 461 002a 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 462              		.loc 1 692 0
 463 002c 0B4A     		ldr	r2, .L24+28
 464 002e 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 465              		.loc 1 699 0
 466 0030 0322     		movs	r2, #3
 467 0032 0B4B     		ldr	r3, .L24+32
 468 0034 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 469              		.loc 1 703 0
 470 0036 8022     		movs	r2, #128
 471 0038 203B     		subs	r3, r3, #32
 472 003a 1A70     		strb	r2, [r3]
 473 003c 7047     		bx	lr
 474              	.L25:
 475 003e 00BF     		.align	2
 476              	.L24:
 477 0040 00000000 		.word	USBUART_hidProtocol
 478 0044 00000000 		.word	USBUART_transferState
 479 0048 00000000 		.word	USBUART_configurationChanged
 480 004c 00000000 		.word	USBUART_configuration
 481 0050 00000000 		.word	USBUART_interfaceNumber
 482 0054 00000000 		.word	USBUART_deviceAddress
 483 0058 00000000 		.word	USBUART_deviceStatus
 484 005c 00000000 		.word	USBUART_lastPacketSize
 485 0060 28600040 		.word	1073766440
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 22


 486              		.cfi_endproc
 487              	.LFE3:
 488              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 489              		.section	.text.USBUART_Stop,"ax",%progbits
 490              		.align	2
 491              		.global	USBUART_Stop
 492              		.thumb
 493              		.thumb_func
 494              		.type	USBUART_Stop, %function
 495              	USBUART_Stop:
 496              	.LFB4:
 704:Generated_Source\PSoC5/USBUART.c **** }
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 497              		.loc 1 730 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 505              		.loc 1 738 0
 506 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 507              	.LVL38:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 23


 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 508              		.loc 1 741 0
 509 0006 224A     		ldr	r2, .L28
 510 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 511 000a 03F07F03 		and	r3, r3, #127
 512 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 513              		.loc 1 744 0
 514 0010 0A32     		adds	r2, r2, #10
 515 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 516 0014 03F0FB03 		and	r3, r3, #251
 517 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 518              		.loc 1 751 0
 519 001a A2F5E352 		sub	r2, r2, #7264
 520 001e 0D3A     		subs	r2, r2, #13
 521 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 522 0022 03F0FE03 		and	r3, r3, #254
 523 0026 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 524              		.loc 1 752 0
 525 0028 1032     		adds	r2, r2, #16
 526 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 527 002c 03F0FE03 		and	r3, r3, #254
 528 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 529              		.loc 1 756 0
 530 0032 184B     		ldr	r3, .L28+4
 531 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 532 0036 42F08002 		orr	r2, r2, #128
 533 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 534              		.loc 1 757 0
 535 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 536 003e 42F04002 		orr	r2, r2, #64
 537 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 538              		.loc 1 761 0
 539 0044 FFF7FEFF 		bl	CyExitCriticalSection
 540              	.LVL39:
 762:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 24


 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 541              		.loc 1 770 0
 542 0048 134B     		ldr	r3, .L28+8
 543 004a 4FF40002 		mov	r2, #8388608
 544 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 545              		.loc 1 771 0
 546 0050 4FF08072 		mov	r2, #16777216
 547 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 548              		.loc 1 774 0
 549 0056 4FF40012 		mov	r2, #2097152
 550 005a 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 551              		.loc 1 778 0
 552 005c 0222     		movs	r2, #2
 553 005e 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 554              		.loc 1 782 0
 555 0060 0422     		movs	r2, #4
 556 0062 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 557              		.loc 1 786 0
 558 0064 0822     		movs	r2, #8
 559 0066 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 25


 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 560              		.loc 1 811 0
 561 0068 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 562              	.LVL40:
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 563              		.loc 1 812 0
 564 006c 4FF48052 		mov	r2, #4096
 565 0070 0A4B     		ldr	r3, .L28+12
 566 0072 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 567              		.loc 1 818 0
 568 0074 0023     		movs	r3, #0
 569 0076 0A4A     		ldr	r2, .L28+16
 570 0078 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 571              		.loc 1 819 0
 572 007a 0A4A     		ldr	r2, .L28+20
 573 007c 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 574              		.loc 1 820 0
 575 007e 0A4A     		ldr	r2, .L28+24
 576 0080 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 577              		.loc 1 821 0
 578 0082 0A4A     		ldr	r2, .L28+28
 579 0084 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 580              		.loc 1 822 0
 581 0086 0A4A     		ldr	r2, .L28+32
 582 0088 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 583              		.loc 1 825 0
 584 008a 0A4A     		ldr	r2, .L28+36
 585 008c 1370     		strb	r3, [r2]
 586 008e 08BD     		pop	{r3, pc}
 587              	.L29:
 588              		.align	2
 589              	.L28:
 590 0090 08600040 		.word	1073766408
 591 0094 F8510040 		.word	1073762808
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 26


 592 0098 80E100E0 		.word	-536813184
 593 009c 80E200E0 		.word	-536812928
 594 00a0 00000000 		.word	USBUART_configurationChanged
 595 00a4 00000000 		.word	USBUART_configuration
 596 00a8 00000000 		.word	USBUART_interfaceNumber
 597 00ac 00000000 		.word	USBUART_deviceAddress
 598 00b0 00000000 		.word	USBUART_deviceStatus
 599 00b4 00000000 		.word	.LANCHOR0
 600              		.cfi_endproc
 601              	.LFE4:
 602              		.size	USBUART_Stop, .-USBUART_Stop
 603              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 604              		.align	2
 605              		.global	USBUART_CheckActivity
 606              		.thumb
 607              		.thumb_func
 608              		.type	USBUART_CheckActivity, %function
 609              	USBUART_CheckActivity:
 610              	.LFB5:
 826:Generated_Source\PSoC5/USBUART.c **** }
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 611              		.loc 1 850 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 616              		.loc 1 851 0
 617 0000 064A     		ldr	r2, .L32
 618 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 619 0004 DBB2     		uxtb	r3, r3
 620              	.LVL41:
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 27


 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 621              		.loc 1 854 0
 622 0006 03F0FB01 		and	r1, r3, #251
 623 000a 1170     		strb	r1, [r2]
 624 000c 03F00403 		and	r3, r3, #4
 625              	.LVL42:
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 626              		.loc 1 857 0
 627 0010 03F0FF00 		and	r0, r3, #255
 628 0014 03B1     		cbz	r3, .L31
 629 0016 0120     		movs	r0, #1
 630              	.L31:
 858:Generated_Source\PSoC5/USBUART.c **** }
 631              		.loc 1 858 0 discriminator 4
 632 0018 7047     		bx	lr
 633              	.L33:
 634 001a 00BF     		.align	2
 635              	.L32:
 636 001c 09600040 		.word	1073766409
 637              		.cfi_endproc
 638              	.LFE5:
 639              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 640              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 641              		.align	2
 642              		.global	USBUART_GetConfiguration
 643              		.thumb
 644              		.thumb_func
 645              		.type	USBUART_GetConfiguration, %function
 646              	USBUART_GetConfiguration:
 647              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 648              		.loc 1 873 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 653              		.loc 1 874 0
 654 0000 014B     		ldr	r3, .L35
 655 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 28


 656              		.loc 1 875 0
 657 0004 7047     		bx	lr
 658              	.L36:
 659 0006 00BF     		.align	2
 660              	.L35:
 661 0008 00000000 		.word	USBUART_configuration
 662              		.cfi_endproc
 663              	.LFE6:
 664              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 665              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 666              		.align	2
 667              		.global	USBUART_IsConfigurationChanged
 668              		.thumb
 669              		.thumb_func
 670              		.type	USBUART_IsConfigurationChanged, %function
 671              	USBUART_IsConfigurationChanged:
 672              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 673              		.loc 1 899 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678              	.LVL43:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 679              		.loc 1 902 0
 680 0000 064B     		ldr	r3, .L40
 681 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 682 0004 13F0FF0F 		tst	r3, #255
 683 0008 05D0     		beq	.L39
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 29


 684              		.loc 1 904 0
 685 000a 044B     		ldr	r3, .L40
 686 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 687 000e C0B2     		uxtb	r0, r0
 688              	.LVL44:
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 689              		.loc 1 905 0
 690 0010 0022     		movs	r2, #0
 691 0012 1A70     		strb	r2, [r3]
 692 0014 7047     		bx	lr
 693              	.LVL45:
 694              	.L39:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 695              		.loc 1 900 0
 696 0016 0020     		movs	r0, #0
 697              	.LVL46:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 909:Generated_Source\PSoC5/USBUART.c **** }
 698              		.loc 1 909 0
 699 0018 7047     		bx	lr
 700              	.L41:
 701 001a 00BF     		.align	2
 702              	.L40:
 703 001c 00000000 		.word	USBUART_configurationChanged
 704              		.cfi_endproc
 705              	.LFE7:
 706              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 707              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 708              		.align	2
 709              		.global	USBUART_GetInterfaceSetting
 710              		.thumb
 711              		.thumb_func
 712              		.type	USBUART_GetInterfaceSetting, %function
 713              	USBUART_GetInterfaceSetting:
 714              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 30


 715              		.loc 1 929 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL47:
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 721              		.loc 1 930 0
 722 0000 014B     		ldr	r3, .L43
 723 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 724              	.LVL48:
 931:Generated_Source\PSoC5/USBUART.c **** }
 725              		.loc 1 931 0
 726 0004 7047     		bx	lr
 727              	.L44:
 728 0006 00BF     		.align	2
 729              	.L43:
 730 0008 00000000 		.word	USBUART_interfaceSetting
 731              		.cfi_endproc
 732              	.LFE8:
 733              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 734              		.section	.text.USBUART_GetEPState,"ax",%progbits
 735              		.align	2
 736              		.global	USBUART_GetEPState
 737              		.thumb
 738              		.thumb_func
 739              		.type	USBUART_GetEPState, %function
 740              	USBUART_GetEPState:
 741              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 31


 960:Generated_Source\PSoC5/USBUART.c **** {
 742              		.loc 1 960 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL49:
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 748              		.loc 1 961 0
 749 0000 00EB4000 		add	r0, r0, r0, lsl #1
 750              	.LVL50:
 751 0004 8300     		lsls	r3, r0, #2
 752 0006 024A     		ldr	r2, .L46
 753 0008 1344     		add	r3, r3, r2
 754 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBUART.c **** }
 755              		.loc 1 962 0
 756 000c 7047     		bx	lr
 757              	.L47:
 758 000e 00BF     		.align	2
 759              	.L46:
 760 0010 00000000 		.word	USBUART_EP
 761              		.cfi_endproc
 762              	.LFE9:
 763              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 764              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 765              		.align	2
 766              		.global	USBUART_GetEPCount
 767              		.thumb
 768              		.thumb_func
 769              		.type	USBUART_GetEPCount, %function
 770              	USBUART_GetEPCount:
 771              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 772              		.loc 1 983 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 32


 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777              	.LVL51:
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 778              		.loc 1 986 0
 779 0000 431E     		subs	r3, r0, #1
 780 0002 DBB2     		uxtb	r3, r3
 781 0004 072B     		cmp	r3, #7
 782 0006 0BD8     		bhi	.L50
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 783              		.loc 1 989 0
 784 0008 064B     		ldr	r3, .L51
 785 000a 0001     		lsls	r0, r0, #4
 786              	.LVL52:
 787 000c 1A18     		adds	r2, r3, r0
 788 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 789 0010 00F00F00 		and	r0, r0, #15
 790              	.LVL53:
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 791              		.loc 1 990 0
 792 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 793 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 794              	.LVL54:
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 795              		.loc 1 991 0
 796 001a 0238     		subs	r0, r0, #2
 797              	.LVL55:
 798 001c 80B2     		uxth	r0, r0
 799              	.LVL56:
 800 001e 7047     		bx	lr
 801              	.LVL57:
 802              	.L50:
 984:Generated_Source\PSoC5/USBUART.c **** 
 803              		.loc 1 984 0
 804 0020 0020     		movs	r0, #0
 805              	.LVL58:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBUART.c **** }
 806              		.loc 1 995 0
 807 0022 7047     		bx	lr
 808              	.L52:
 809              		.align	2
 810              	.L51:
 811 0024 FC5F0040 		.word	1073766396
 812              		.cfi_endproc
 813              	.LFE10:
 814              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 815              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 816              		.align	2
 817              		.global	USBUART_LoadInEP
 818              		.thumb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 33


 819              		.thumb_func
 820              		.type	USBUART_LoadInEP, %function
 821              	USBUART_LoadInEP:
 822              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 34


1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 35


1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 36


1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 37


1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 38


1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 39


1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 823              		.loc 1 1344 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL59:
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 829              		.loc 1 1345 0
 830 0000 431E     		subs	r3, r0, #1
 831 0002 DBB2     		uxtb	r3, r3
 832 0004 072B     		cmp	r3, #7
 833 0006 3CD8     		bhi	.L62
1344:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 834              		.loc 1 1344 0
 835 0008 F0B4     		push	{r4, r5, r6, r7}
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 4, -16
 838              		.cfi_offset 5, -12
 839              		.cfi_offset 6, -8
 840              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 841              		.loc 1 1349 0
 842 000a 0746     		mov	r7, r0
 843 000c 00EB4004 		add	r4, r0, r0, lsl #1
 844 0010 A300     		lsls	r3, r4, #2
 845 0012 1C4C     		ldr	r4, .L63
 846 0014 2344     		add	r3, r3, r4
 847 0016 DB88     		ldrh	r3, [r3, #6]
 848 0018 9BB2     		uxth	r3, r3
 849 001a C3F50073 		rsb	r3, r3, #512
 850 001e 9A42     		cmp	r2, r3
 851 0020 08D9     		bls	.L55
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 852              		.loc 1 1351 0
 853 0022 00EB4002 		add	r2, r0, r0, lsl #1
 854              	.LVL60:
 855 0026 9300     		lsls	r3, r2, #2
 856 0028 2344     		add	r3, r3, r4
 857 002a DA88     		ldrh	r2, [r3, #6]
 858 002c 92B2     		uxth	r2, r2
 859 002e C2F50072 		rsb	r2, r2, #512
 860 0032 92B2     		uxth	r2, r2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 40


 861              	.LVL61:
 862              	.L55:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 863              		.loc 1 1356 0
 864 0034 00EB4004 		add	r4, r0, r0, lsl #1
 865 0038 A300     		lsls	r3, r4, #2
 866 003a 124C     		ldr	r4, .L63
 867 003c 2344     		add	r3, r3, r4
 868 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 869 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 870 0044 104D     		ldr	r5, .L63+4
 871 0046 0401     		lsls	r4, r0, #4
 872 0048 2E19     		adds	r6, r5, r4
 873 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 874              		.loc 1 1357 0
 875 004c D3B2     		uxtb	r3, r2
 876 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 877              		.loc 1 1360 0
 878 0050 39B9     		cbnz	r1, .L59
 879              	.LBB2:
 880 0052 09E0     		b	.L57
 881              	.LVL62:
 882              	.L58:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 883              		.loc 1 1366 0 discriminator 3
 884 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 885 0056 3D01     		lsls	r5, r7, #4
 886 0058 0C4C     		ldr	r4, .L63+8
 887 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USBUART.c ****             {
 888              		.loc 1 1364 0 discriminator 3
 889 005c 0133     		adds	r3, r3, #1
 890              	.LVL63:
 891 005e 9BB2     		uxth	r3, r3
 892              	.LVL64:
 893 0060 00E0     		b	.L56
 894              	.LVL65:
 895              	.L59:
 896              	.LBE2:
 897 0062 0023     		movs	r3, #0
 898              	.L56:
 899              	.LVL66:
 900              	.LBB3:
1364:Generated_Source\PSoC5/USBUART.c ****             {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 41


 901              		.loc 1 1364 0 is_stmt 0 discriminator 1
 902 0064 9A42     		cmp	r2, r3
 903 0066 F5D8     		bhi	.L58
 904              	.LVL67:
 905              	.L57:
 906              	.LBE3:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 907              		.loc 1 1371 0 is_stmt 1
 908 0068 4200     		lsls	r2, r0, #1
 909              	.LVL68:
 910 006a 0244     		add	r2, r2, r0
 911 006c 9300     		lsls	r3, r2, #2
 912 006e 054A     		ldr	r2, .L63
 913 0070 1344     		add	r3, r3, r2
 914 0072 0022     		movs	r2, #0
 915 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 916              		.loc 1 1374 0
 917 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 918 0078 D2B2     		uxtb	r2, r2
 919 007a 0001     		lsls	r0, r0, #4
 920              	.LVL69:
 921 007c 044B     		ldr	r3, .L63+12
 922 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 42


1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 43


1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 44


1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 45


1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
 923              		.loc 1 1604 0
 924 0080 F0BC     		pop	{r4, r5, r6, r7}
 925              		.cfi_restore 7
 926              		.cfi_restore 6
 927              		.cfi_restore 5
 928              		.cfi_restore 4
 929              		.cfi_def_cfa_offset 0
 930              	.L62:
 931 0082 7047     		bx	lr
 932              	.L64:
 933              		.align	2
 934              	.L63:
 935 0084 00000000 		.word	USBUART_EP
 936 0088 FC5F0040 		.word	1073766396
 937 008c 78600040 		.word	1073766520
 938 0090 FE5F0040 		.word	1073766398
 939              		.cfi_endproc
 940              	.LFE11:
 941              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 942              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 943              		.align	2
 944              		.global	USBUART_EnableOutEP
 945              		.thumb
 946              		.thumb_func
 947              		.type	USBUART_EnableOutEP, %function
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 46


 948              	USBUART_EnableOutEP:
 949              	.LFB13:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 47


1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 48


1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 49


1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
1824:Generated_Source\PSoC5/USBUART.c **** }
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 50


1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 51


1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 52


1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 53


2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 54


2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 55


2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 56


2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 57


2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 950              		.loc 1 2277 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL70:
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 956              		.loc 1 2278 0
 957 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 58


 958 0002 DBB2     		uxtb	r3, r3
 959 0004 072B     		cmp	r3, #7
 960 0006 0BD8     		bhi	.L65
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 961              		.loc 1 2280 0
 962 0008 4200     		lsls	r2, r0, #1
 963 000a 0244     		add	r2, r2, r0
 964 000c 9300     		lsls	r3, r2, #2
 965 000e 054A     		ldr	r2, .L67
 966 0010 1344     		add	r3, r3, r2
 967 0012 0022     		movs	r2, #0
 968 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 969              		.loc 1 2283 0
 970 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 971 0018 D2B2     		uxtb	r2, r2
 972 001a 0001     		lsls	r0, r0, #4
 973              	.LVL71:
 974 001c 024B     		ldr	r3, .L67+4
 975 001e 1A54     		strb	r2, [r3, r0]
 976              	.L65:
 977 0020 7047     		bx	lr
 978              	.L68:
 979 0022 00BF     		.align	2
 980              	.L67:
 981 0024 00000000 		.word	USBUART_EP
 982 0028 FE5F0040 		.word	1073766398
 983              		.cfi_endproc
 984              	.LFE13:
 985              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 986              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 987              		.align	2
 988              		.global	USBUART_ReadOutEP
 989              		.thumb
 990              		.thumb_func
 991              		.type	USBUART_ReadOutEP, %function
 992              	USBUART_ReadOutEP:
 993              	.LFB12:
1655:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 994              		.loc 1 1655 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              	.LVL72:
 999 0000 70B5     		push	{r4, r5, r6, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 4, -16
 1002              		.cfi_offset 5, -12
 1003              		.cfi_offset 6, -8
 1004              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBUART.c ****     {
 1005              		.loc 1 1656 0
 1006 0002 D9B1     		cbz	r1, .L74
 1007 0004 0546     		mov	r5, r0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 59


 1008 0006 1446     		mov	r4, r2
 1009 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USBUART.c ****     {
 1010              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1011 000a C8B1     		cbz	r0, .L75
1656:Generated_Source\PSoC5/USBUART.c ****     {
 1012              		.loc 1 1656 0 discriminator 2
 1013 000c 0828     		cmp	r0, #8
 1014 000e 19D8     		bhi	.L76
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1015              		.loc 1 1660 0 is_stmt 1
 1016 0010 FFF7FEFF 		bl	USBUART_GetEPCount
 1017              	.LVL73:
 1018 0014 A042     		cmp	r0, r4
 1019 0016 03D2     		bcs	.L71
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1020              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1021 0018 2846     		mov	r0, r5
 1022 001a FFF7FEFF 		bl	USBUART_GetEPCount
 1023              	.LVL74:
 1024 001e 0446     		mov	r4, r0
 1025              	.L71:
 1026              	.LVL75:
 1027              	.LBB4:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1028              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1029 0020 0023     		movs	r3, #0
 1030 0022 05E0     		b	.L72
 1031              	.LVL76:
 1032              	.L73:
1669:Generated_Source\PSoC5/USBUART.c ****             }
 1033              		.loc 1 1669 0 discriminator 3
 1034 0024 2901     		lsls	r1, r5, #4
 1035 0026 094A     		ldr	r2, .L78
 1036 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1037 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1038              		.loc 1 1667 0 discriminator 3
 1039 002c 0133     		adds	r3, r3, #1
 1040              	.LVL77:
 1041 002e 9BB2     		uxth	r3, r3
 1042              	.LVL78:
 1043              	.L72:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1044              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1045 0030 A342     		cmp	r3, r4
 1046 0032 F7D3     		bcc	.L73
 1047              	.LBE4:
1674:Generated_Source\PSoC5/USBUART.c ****     #else
 1048              		.loc 1 1674 0 is_stmt 1
 1049 0034 2846     		mov	r0, r5
 1050 0036 FFF7FEFF 		bl	USBUART_EnableOutEP
 1051              	.LVL79:
 1052 003a 04E0     		b	.L70
 1053              	.LVL80:
 1054              	.L74:
1820:Generated_Source\PSoC5/USBUART.c ****     }
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 60


 1055              		.loc 1 1820 0
 1056 003c 0024     		movs	r4, #0
 1057 003e 02E0     		b	.L70
 1058              	.L75:
 1059 0040 0024     		movs	r4, #0
 1060 0042 00E0     		b	.L70
 1061              	.L76:
 1062 0044 0024     		movs	r4, #0
 1063              	.LVL81:
 1064              	.L70:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1065              		.loc 1 1824 0
 1066 0046 2046     		mov	r0, r4
 1067 0048 70BD     		pop	{r4, r5, r6, pc}
 1068              	.LVL82:
 1069              	.L79:
 1070 004a 00BF     		.align	2
 1071              	.L78:
 1072 004c 78600040 		.word	1073766520
 1073              		.cfi_endproc
 1074              	.LFE12:
 1075              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1076              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1077              		.align	2
 1078              		.global	USBUART_DisableOutEP
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	USBUART_DisableOutEP, %function
 1082              	USBUART_DisableOutEP:
 1083              	.LFB14:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1084              		.loc 1 2301 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL83:
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1090              		.loc 1 2302 0
 1091 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 61


 1092 0002 DBB2     		uxtb	r3, r3
 1093 0004 072B     		cmp	r3, #7
 1094 0006 03D8     		bhi	.L80
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1095              		.loc 1 2305 0
 1096 0008 0001     		lsls	r0, r0, #4
 1097              	.LVL84:
 1098 000a 024B     		ldr	r3, .L82
 1099 000c 0822     		movs	r2, #8
 1100 000e 1A54     		strb	r2, [r3, r0]
 1101              	.L80:
 1102 0010 7047     		bx	lr
 1103              	.L83:
 1104 0012 00BF     		.align	2
 1105              	.L82:
 1106 0014 FE5F0040 		.word	1073766398
 1107              		.cfi_endproc
 1108              	.LFE14:
 1109              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1110              		.section	.text.USBUART_Force,"ax",%progbits
 1111              		.align	2
 1112              		.global	USBUART_Force
 1113              		.thumb
 1114              		.thumb_func
 1115              		.type	USBUART_Force, %function
 1116              	USBUART_Force:
 1117              	.LFB15:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1118              		.loc 1 2331 0
 1119              		.cfi_startproc
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 62


 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL85:
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1124              		.loc 1 2335 0
 1125 0000 014B     		ldr	r3, .L85
 1126 0002 1870     		strb	r0, [r3]
 1127 0004 7047     		bx	lr
 1128              	.L86:
 1129 0006 00BF     		.align	2
 1130              	.L85:
 1131 0008 10600040 		.word	1073766416
 1132              		.cfi_endproc
 1133              	.LFE15:
 1134              		.size	USBUART_Force, .-USBUART_Force
 1135              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1136              		.align	2
 1137              		.global	USBUART_GetEPAckState
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	USBUART_GetEPAckState, %function
 1141              	USBUART_GetEPAckState:
 1142              	.LFB16:
2336:Generated_Source\PSoC5/USBUART.c **** }
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1143              		.loc 1 2356 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              		@ link register save eliminated.
 1148              	.LVL86:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 63


 1149              		.loc 1 2359 0
 1150 0000 431E     		subs	r3, r0, #1
 1151 0002 DBB2     		uxtb	r3, r3
 1152 0004 072B     		cmp	r3, #7
 1153 0006 06D8     		bhi	.L89
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1154              		.loc 1 2361 0
 1155 0008 0001     		lsls	r0, r0, #4
 1156              	.LVL87:
 1157 000a 044B     		ldr	r3, .L90
 1158 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1159 000e 00F01000 		and	r0, r0, #16
 1160 0012 C0B2     		uxtb	r0, r0
 1161              	.LVL88:
 1162 0014 7047     		bx	lr
 1163              	.LVL89:
 1164              	.L89:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1165              		.loc 1 2357 0
 1166 0016 0020     		movs	r0, #0
 1167              	.LVL90:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBUART.c **** }
 1168              		.loc 1 2365 0
 1169 0018 7047     		bx	lr
 1170              	.L91:
 1171 001a 00BF     		.align	2
 1172              	.L90:
 1173 001c FE5F0040 		.word	1073766398
 1174              		.cfi_endproc
 1175              	.LFE16:
 1176              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1177              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1178              		.align	2
 1179              		.global	USBUART_SetPowerStatus
 1180              		.thumb
 1181              		.thumb_func
 1182              		.type	USBUART_SetPowerStatus, %function
 1183              	USBUART_SetPowerStatus:
 1184              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 64


2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1185              		.loc 1 2397 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190              	.LVL91:
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1191              		.loc 1 2398 0
 1192 0000 28B1     		cbz	r0, .L93
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1193              		.loc 1 2400 0
 1194 0002 064A     		ldr	r2, .L95
 1195 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1196 0006 43F00103 		orr	r3, r3, #1
 1197 000a 1370     		strb	r3, [r2]
 1198 000c 7047     		bx	lr
 1199              	.L93:
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1200              		.loc 1 2404 0
 1201 000e 034A     		ldr	r2, .L95
 1202 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1203 0012 03F0FE03 		and	r3, r3, #254
 1204 0016 1370     		strb	r3, [r2]
 1205 0018 7047     		bx	lr
 1206              	.L96:
 1207 001a 00BF     		.align	2
 1208              	.L95:
 1209 001c 00000000 		.word	USBUART_deviceStatus
 1210              		.cfi_endproc
 1211              	.LFE17:
 1212              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1213              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1214              		.align	2
 1215              		.global	USBUART_RWUEnabled
 1216              		.thumb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 65


 1217              		.thumb_func
 1218              		.type	USBUART_RWUEnabled, %function
 1219              	USBUART_RWUEnabled:
 1220              	.LFB18:
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1221              		.loc 1 2454 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 66


 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 1226              	.LVL92:
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1227              		.loc 1 2457 0
 1228 0000 044B     		ldr	r3, .L100
 1229 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0004 13F0020F 		tst	r3, #2
 1231 0008 01D1     		bne	.L99
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1232              		.loc 1 2455 0
 1233 000a 0020     		movs	r0, #0
 1234 000c 7047     		bx	lr
 1235              	.L99:
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1236              		.loc 1 2459 0
 1237 000e 0120     		movs	r0, #1
 1238              	.LVL93:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
2463:Generated_Source\PSoC5/USBUART.c **** }
 1239              		.loc 1 2463 0
 1240 0010 7047     		bx	lr
 1241              	.L101:
 1242 0012 00BF     		.align	2
 1243              	.L100:
 1244 0014 00000000 		.word	USBUART_deviceStatus
 1245              		.cfi_endproc
 1246              	.LFE18:
 1247              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1248              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1249              		.align	2
 1250              		.global	USBUART_GetDeviceAddress
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	USBUART_GetDeviceAddress, %function
 1254              	USBUART_GetDeviceAddress:
 1255              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 67


 1256              		.loc 1 2478 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1261              		.loc 1 2479 0
 1262 0000 024B     		ldr	r3, .L103
 1263 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBUART.c **** }
 1264              		.loc 1 2480 0
 1265 0004 00F07F00 		and	r0, r0, #127
 1266 0008 7047     		bx	lr
 1267              	.L104:
 1268 000a 00BF     		.align	2
 1269              	.L103:
 1270 000c 08600040 		.word	1073766408
 1271              		.cfi_endproc
 1272              	.LFE19:
 1273              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1274              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1275              		.align	2
 1276              		.global	USBUART_EnableSofInt
 1277              		.thumb
 1278              		.thumb_func
 1279              		.type	USBUART_EnableSofInt, %function
 1280              	USBUART_EnableSofInt:
 1281              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1282              		.loc 1 2492 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1287              		.loc 1 2499 0
 1288 0000 4FF40012 		mov	r2, #2097152
 1289 0004 014B     		ldr	r3, .L106
 1290 0006 1A60     		str	r2, [r3]
 1291 0008 7047     		bx	lr
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 68


 1292              	.L107:
 1293 000a 00BF     		.align	2
 1294              	.L106:
 1295 000c 00E100E0 		.word	-536813312
 1296              		.cfi_endproc
 1297              	.LFE20:
 1298              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1299              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1300              		.align	2
 1301              		.global	USBUART_DisableSofInt
 1302              		.thumb
 1303              		.thumb_func
 1304              		.type	USBUART_DisableSofInt, %function
 1305              	USBUART_DisableSofInt:
 1306              	.LFB21:
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1307              		.loc 1 2514 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1312              		.loc 1 2521 0
 1313 0000 4FF40012 		mov	r2, #2097152
 1314 0004 014B     		ldr	r3, .L109
 1315 0006 1A60     		str	r2, [r3]
 1316 0008 7047     		bx	lr
 1317              	.L110:
 1318 000a 00BF     		.align	2
 1319              	.L109:
 1320 000c 80E100E0 		.word	-536813184
 1321              		.cfi_endproc
 1322              	.LFE21:
 1323              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1324              		.global	USBUART_initVar
 1325              		.bss
 1326              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 69


 1327              		.type	USBUART_initVar, %object
 1328              		.size	USBUART_initVar, 1
 1329              	USBUART_initVar:
 1330 0000 00       		.space	1
 1331              		.text
 1332              	.Letext0:
 1333              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1334              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1335              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1336              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1337              		.file 6 "Generated_Source\\PSoC5\\USBUART_Dp.h"
 1338              		.section	.debug_info,"",%progbits
 1339              	.Ldebug_info0:
 1340 0000 C1090000 		.4byte	0x9c1
 1341 0004 0400     		.2byte	0x4
 1342 0006 00000000 		.4byte	.Ldebug_abbrev0
 1343 000a 04       		.byte	0x4
 1344 000b 01       		.uleb128 0x1
 1345 000c AA050000 		.4byte	.LASF100
 1346 0010 0C       		.byte	0xc
 1347 0011 41020000 		.4byte	.LASF101
 1348 0015 85030000 		.4byte	.LASF102
 1349 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1350 001d 00000000 		.4byte	0
 1351 0021 00000000 		.4byte	.Ldebug_line0
 1352 0025 02       		.uleb128 0x2
 1353 0026 01       		.byte	0x1
 1354 0027 06       		.byte	0x6
 1355 0028 E4020000 		.4byte	.LASF0
 1356 002c 02       		.uleb128 0x2
 1357 002d 01       		.byte	0x1
 1358 002e 08       		.byte	0x8
 1359 002f C4020000 		.4byte	.LASF1
 1360 0033 02       		.uleb128 0x2
 1361 0034 02       		.byte	0x2
 1362 0035 05       		.byte	0x5
 1363 0036 93000000 		.4byte	.LASF2
 1364 003a 02       		.uleb128 0x2
 1365 003b 02       		.byte	0x2
 1366 003c 07       		.byte	0x7
 1367 003d D9030000 		.4byte	.LASF3
 1368 0041 02       		.uleb128 0x2
 1369 0042 04       		.byte	0x4
 1370 0043 05       		.byte	0x5
 1371 0044 11040000 		.4byte	.LASF4
 1372 0048 02       		.uleb128 0x2
 1373 0049 04       		.byte	0x4
 1374 004a 07       		.byte	0x7
 1375 004b 90040000 		.4byte	.LASF5
 1376 004f 02       		.uleb128 0x2
 1377 0050 08       		.byte	0x8
 1378 0051 05       		.byte	0x5
 1379 0052 0A020000 		.4byte	.LASF6
 1380 0056 02       		.uleb128 0x2
 1381 0057 08       		.byte	0x8
 1382 0058 07       		.byte	0x7
 1383 0059 08030000 		.4byte	.LASF7
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 70


 1384 005d 03       		.uleb128 0x3
 1385 005e 04       		.byte	0x4
 1386 005f 05       		.byte	0x5
 1387 0060 696E7400 		.ascii	"int\000"
 1388 0064 02       		.uleb128 0x2
 1389 0065 04       		.byte	0x4
 1390 0066 07       		.byte	0x7
 1391 0067 43030000 		.4byte	.LASF8
 1392 006b 04       		.uleb128 0x4
 1393 006c 52040000 		.4byte	.LASF9
 1394 0070 02       		.byte	0x2
 1395 0071 E401     		.2byte	0x1e4
 1396 0073 2C000000 		.4byte	0x2c
 1397 0077 04       		.uleb128 0x4
 1398 0078 4D010000 		.4byte	.LASF10
 1399 007c 02       		.byte	0x2
 1400 007d E501     		.2byte	0x1e5
 1401 007f 3A000000 		.4byte	0x3a
 1402 0083 04       		.uleb128 0x4
 1403 0084 84040000 		.4byte	.LASF11
 1404 0088 02       		.byte	0x2
 1405 0089 E601     		.2byte	0x1e6
 1406 008b 48000000 		.4byte	0x48
 1407 008f 02       		.uleb128 0x2
 1408 0090 04       		.byte	0x4
 1409 0091 04       		.byte	0x4
 1410 0092 C1010000 		.4byte	.LASF12
 1411 0096 02       		.uleb128 0x2
 1412 0097 08       		.byte	0x8
 1413 0098 04       		.byte	0x4
 1414 0099 A2040000 		.4byte	.LASF13
 1415 009d 02       		.uleb128 0x2
 1416 009e 01       		.byte	0x1
 1417 009f 08       		.byte	0x8
 1418 00a0 0C040000 		.4byte	.LASF14
 1419 00a4 04       		.uleb128 0x4
 1420 00a5 8B040000 		.4byte	.LASF15
 1421 00a9 02       		.byte	0x2
 1422 00aa 8E02     		.2byte	0x28e
 1423 00ac B0000000 		.4byte	0xb0
 1424 00b0 05       		.uleb128 0x5
 1425 00b1 6B000000 		.4byte	0x6b
 1426 00b5 04       		.uleb128 0x4
 1427 00b6 7F030000 		.4byte	.LASF16
 1428 00ba 02       		.byte	0x2
 1429 00bb 9002     		.2byte	0x290
 1430 00bd C1000000 		.4byte	0xc1
 1431 00c1 05       		.uleb128 0x5
 1432 00c2 83000000 		.4byte	0x83
 1433 00c6 02       		.uleb128 0x2
 1434 00c7 08       		.byte	0x8
 1435 00c8 04       		.byte	0x4
 1436 00c9 D6000000 		.4byte	.LASF17
 1437 00cd 02       		.uleb128 0x2
 1438 00ce 04       		.byte	0x4
 1439 00cf 07       		.byte	0x7
 1440 00d0 9D000000 		.4byte	.LASF18
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 71


 1441 00d4 06       		.uleb128 0x6
 1442 00d5 0C       		.byte	0xc
 1443 00d6 03       		.byte	0x3
 1444 00d7 91       		.byte	0x91
 1445 00d8 49010000 		.4byte	0x149
 1446 00dc 07       		.uleb128 0x7
 1447 00dd F4030000 		.4byte	.LASF19
 1448 00e1 03       		.byte	0x3
 1449 00e2 93       		.byte	0x93
 1450 00e3 6B000000 		.4byte	0x6b
 1451 00e7 00       		.byte	0
 1452 00e8 07       		.uleb128 0x7
 1453 00e9 DE040000 		.4byte	.LASF20
 1454 00ed 03       		.byte	0x3
 1455 00ee 94       		.byte	0x94
 1456 00ef 6B000000 		.4byte	0x6b
 1457 00f3 01       		.byte	0x1
 1458 00f4 07       		.uleb128 0x7
 1459 00f5 66040000 		.4byte	.LASF21
 1460 00f9 03       		.byte	0x3
 1461 00fa 95       		.byte	0x95
 1462 00fb 6B000000 		.4byte	0x6b
 1463 00ff 02       		.byte	0x2
 1464 0100 07       		.uleb128 0x7
 1465 0101 00000000 		.4byte	.LASF22
 1466 0105 03       		.byte	0x3
 1467 0106 96       		.byte	0x96
 1468 0107 6B000000 		.4byte	0x6b
 1469 010b 03       		.byte	0x3
 1470 010c 07       		.uleb128 0x7
 1471 010d 46040000 		.4byte	.LASF23
 1472 0111 03       		.byte	0x3
 1473 0112 97       		.byte	0x97
 1474 0113 6B000000 		.4byte	0x6b
 1475 0117 04       		.byte	0x4
 1476 0118 07       		.uleb128 0x7
 1477 0119 BD000000 		.4byte	.LASF24
 1478 011d 03       		.byte	0x3
 1479 011e 98       		.byte	0x98
 1480 011f 6B000000 		.4byte	0x6b
 1481 0123 05       		.byte	0x5
 1482 0124 07       		.uleb128 0x7
 1483 0125 AF020000 		.4byte	.LASF25
 1484 0129 03       		.byte	0x3
 1485 012a 99       		.byte	0x99
 1486 012b 77000000 		.4byte	0x77
 1487 012f 06       		.byte	0x6
 1488 0130 07       		.uleb128 0x7
 1489 0131 03050000 		.4byte	.LASF26
 1490 0135 03       		.byte	0x3
 1491 0136 9A       		.byte	0x9a
 1492 0137 77000000 		.4byte	0x77
 1493 013b 08       		.byte	0x8
 1494 013c 07       		.uleb128 0x7
 1495 013d 41060000 		.4byte	.LASF27
 1496 0141 03       		.byte	0x3
 1497 0142 9B       		.byte	0x9b
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 72


 1498 0143 6B000000 		.4byte	0x6b
 1499 0147 0A       		.byte	0xa
 1500 0148 00       		.byte	0
 1501 0149 08       		.uleb128 0x8
 1502 014a 24050000 		.4byte	.LASF28
 1503 014e 03       		.byte	0x3
 1504 014f 9C       		.byte	0x9c
 1505 0150 D4000000 		.4byte	0xd4
 1506 0154 06       		.uleb128 0x6
 1507 0155 10       		.byte	0x10
 1508 0156 03       		.byte	0x3
 1509 0157 D8       		.byte	0xd8
 1510 0158 8D010000 		.4byte	0x18d
 1511 015c 07       		.uleb128 0x7
 1512 015d 4B040000 		.4byte	.LASF29
 1513 0161 03       		.byte	0x3
 1514 0162 DA       		.byte	0xda
 1515 0163 6B000000 		.4byte	0x6b
 1516 0167 00       		.byte	0
 1517 0168 07       		.uleb128 0x7
 1518 0169 5F040000 		.4byte	.LASF30
 1519 016d 03       		.byte	0x3
 1520 016e DB       		.byte	0xdb
 1521 016f 6B000000 		.4byte	0x6b
 1522 0173 01       		.byte	0x1
 1523 0174 07       		.uleb128 0x7
 1524 0175 35020000 		.4byte	.LASF31
 1525 0179 03       		.byte	0x3
 1526 017a DC       		.byte	0xdc
 1527 017b 6B000000 		.4byte	0x6b
 1528 017f 02       		.byte	0x2
 1529 0180 09       		.uleb128 0x9
 1530 0181 67617000 		.ascii	"gap\000"
 1531 0185 03       		.byte	0x3
 1532 0186 DD       		.byte	0xdd
 1533 0187 8D010000 		.4byte	0x18d
 1534 018b 03       		.byte	0x3
 1535 018c 00       		.byte	0
 1536 018d 0A       		.uleb128 0xa
 1537 018e 6B000000 		.4byte	0x6b
 1538 0192 9D010000 		.4byte	0x19d
 1539 0196 0B       		.uleb128 0xb
 1540 0197 CD000000 		.4byte	0xcd
 1541 019b 0C       		.byte	0xc
 1542 019c 00       		.byte	0
 1543 019d 08       		.uleb128 0x8
 1544 019e 70010000 		.4byte	.LASF32
 1545 01a2 03       		.byte	0x3
 1546 01a3 DE       		.byte	0xde
 1547 01a4 54010000 		.4byte	0x154
 1548 01a8 06       		.uleb128 0x6
 1549 01a9 10       		.byte	0x10
 1550 01aa 03       		.byte	0x3
 1551 01ab EA       		.byte	0xea
 1552 01ac 29020000 		.4byte	0x229
 1553 01b0 07       		.uleb128 0x7
 1554 01b1 3B020000 		.4byte	.LASF33
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 73


 1555 01b5 03       		.byte	0x3
 1556 01b6 EC       		.byte	0xec
 1557 01b7 6B000000 		.4byte	0x6b
 1558 01bb 00       		.byte	0
 1559 01bc 07       		.uleb128 0x7
 1560 01bd 8B000000 		.4byte	.LASF34
 1561 01c1 03       		.byte	0x3
 1562 01c2 ED       		.byte	0xed
 1563 01c3 6B000000 		.4byte	0x6b
 1564 01c7 01       		.byte	0x1
 1565 01c8 07       		.uleb128 0x7
 1566 01c9 D2020000 		.4byte	.LASF35
 1567 01cd 03       		.byte	0x3
 1568 01ce EE       		.byte	0xee
 1569 01cf 6B000000 		.4byte	0x6b
 1570 01d3 02       		.byte	0x2
 1571 01d4 07       		.uleb128 0x7
 1572 01d5 38060000 		.4byte	.LASF36
 1573 01d9 03       		.byte	0x3
 1574 01da EF       		.byte	0xef
 1575 01db 6B000000 		.4byte	0x6b
 1576 01df 03       		.byte	0x3
 1577 01e0 07       		.uleb128 0x7
 1578 01e1 55030000 		.4byte	.LASF37
 1579 01e5 03       		.byte	0x3
 1580 01e6 F0       		.byte	0xf0
 1581 01e7 6B000000 		.4byte	0x6b
 1582 01eb 04       		.byte	0x4
 1583 01ec 07       		.uleb128 0x7
 1584 01ed A2050000 		.4byte	.LASF38
 1585 01f1 03       		.byte	0x3
 1586 01f2 F1       		.byte	0xf1
 1587 01f3 6B000000 		.4byte	0x6b
 1588 01f7 05       		.byte	0x5
 1589 01f8 07       		.uleb128 0x7
 1590 01f9 54010000 		.4byte	.LASF39
 1591 01fd 03       		.byte	0x3
 1592 01fe F2       		.byte	0xf2
 1593 01ff 6B000000 		.4byte	0x6b
 1594 0203 06       		.byte	0x6
 1595 0204 07       		.uleb128 0x7
 1596 0205 EC030000 		.4byte	.LASF40
 1597 0209 03       		.byte	0x3
 1598 020a F3       		.byte	0xf3
 1599 020b 6B000000 		.4byte	0x6b
 1600 020f 07       		.byte	0x7
 1601 0210 07       		.uleb128 0x7
 1602 0211 50030000 		.4byte	.LASF41
 1603 0215 03       		.byte	0x3
 1604 0216 F4       		.byte	0xf4
 1605 0217 6B000000 		.4byte	0x6b
 1606 021b 08       		.byte	0x8
 1607 021c 09       		.uleb128 0x9
 1608 021d 67617000 		.ascii	"gap\000"
 1609 0221 03       		.byte	0x3
 1610 0222 F5       		.byte	0xf5
 1611 0223 29020000 		.4byte	0x229
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 74


 1612 0227 09       		.byte	0x9
 1613 0228 00       		.byte	0
 1614 0229 0A       		.uleb128 0xa
 1615 022a 6B000000 		.4byte	0x6b
 1616 022e 39020000 		.4byte	0x239
 1617 0232 0B       		.uleb128 0xb
 1618 0233 CD000000 		.4byte	0xcd
 1619 0237 06       		.byte	0x6
 1620 0238 00       		.byte	0
 1621 0239 08       		.uleb128 0x8
 1622 023a 2D030000 		.4byte	.LASF42
 1623 023e 03       		.byte	0x3
 1624 023f F6       		.byte	0xf6
 1625 0240 A8010000 		.4byte	0x1a8
 1626 0244 0C       		.uleb128 0xc
 1627 0245 90       		.byte	0x90
 1628 0246 03       		.byte	0x3
 1629 0247 1201     		.2byte	0x112
 1630 0249 5B020000 		.4byte	0x25b
 1631 024d 0D       		.uleb128 0xd
 1632 024e 97010000 		.4byte	.LASF43
 1633 0252 03       		.byte	0x3
 1634 0253 1401     		.2byte	0x114
 1635 0255 5B020000 		.4byte	0x25b
 1636 0259 00       		.byte	0
 1637 025a 00       		.byte	0
 1638 025b 0A       		.uleb128 0xa
 1639 025c 9D010000 		.4byte	0x19d
 1640 0260 6B020000 		.4byte	0x26b
 1641 0264 0B       		.uleb128 0xb
 1642 0265 CD000000 		.4byte	0xcd
 1643 0269 08       		.byte	0x8
 1644 026a 00       		.byte	0
 1645 026b 04       		.uleb128 0x4
 1646 026c FA000000 		.4byte	.LASF44
 1647 0270 03       		.byte	0x3
 1648 0271 1501     		.2byte	0x115
 1649 0273 44020000 		.4byte	0x244
 1650 0277 0C       		.uleb128 0xc
 1651 0278 90       		.byte	0x90
 1652 0279 03       		.byte	0x3
 1653 027a 1801     		.2byte	0x118
 1654 027c 8E020000 		.4byte	0x28e
 1655 0280 0D       		.uleb128 0xd
 1656 0281 C4000000 		.4byte	.LASF45
 1657 0285 03       		.byte	0x3
 1658 0286 1A01     		.2byte	0x11a
 1659 0288 8E020000 		.4byte	0x28e
 1660 028c 00       		.byte	0
 1661 028d 00       		.byte	0
 1662 028e 0A       		.uleb128 0xa
 1663 028f 39020000 		.4byte	0x239
 1664 0293 9E020000 		.4byte	0x29e
 1665 0297 0B       		.uleb128 0xb
 1666 0298 CD000000 		.4byte	0xcd
 1667 029c 08       		.byte	0x8
 1668 029d 00       		.byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 75


 1669 029e 04       		.uleb128 0x4
 1670 029f A6000000 		.4byte	.LASF46
 1671 02a3 03       		.byte	0x3
 1672 02a4 1B01     		.2byte	0x11b
 1673 02a6 77020000 		.4byte	0x277
 1674 02aa 0E       		.uleb128 0xe
 1675 02ab D7020000 		.4byte	.LASF47
 1676 02af 01       		.byte	0x1
 1677 02b0 D3       		.byte	0xd3
 1678 02b1 00000000 		.4byte	.LFB1
 1679 02b5 40010000 		.4byte	.LFE1-.LFB1
 1680 02b9 01       		.uleb128 0x1
 1681 02ba 9C       		.byte	0x9c
 1682 02bb 68040000 		.4byte	0x468
 1683 02bf 0F       		.uleb128 0xf
 1684 02c0 52060000 		.4byte	.LASF51
 1685 02c4 01       		.byte	0x1
 1686 02c5 FA       		.byte	0xfa
 1687 02c6 6B000000 		.4byte	0x6b
 1688 02ca 00000000 		.4byte	.LLST0
 1689 02ce 10       		.uleb128 0x10
 1690 02cf 06000000 		.4byte	.LVL0
 1691 02d3 77090000 		.4byte	0x977
 1692 02d7 11       		.uleb128 0x11
 1693 02d8 3C000000 		.4byte	.LVL2
 1694 02dc 82090000 		.4byte	0x982
 1695 02e0 EA020000 		.4byte	0x2ea
 1696 02e4 12       		.uleb128 0x12
 1697 02e5 01       		.uleb128 0x1
 1698 02e6 50       		.byte	0x50
 1699 02e7 01       		.uleb128 0x1
 1700 02e8 30       		.byte	0x30
 1701 02e9 00       		.byte	0
 1702 02ea 11       		.uleb128 0x11
 1703 02eb 5C000000 		.4byte	.LVL3
 1704 02ef 82090000 		.4byte	0x982
 1705 02f3 FE020000 		.4byte	0x2fe
 1706 02f7 12       		.uleb128 0x12
 1707 02f8 01       		.uleb128 0x1
 1708 02f9 50       		.byte	0x50
 1709 02fa 02       		.uleb128 0x2
 1710 02fb 76       		.byte	0x76
 1711 02fc 00       		.sleb128 0
 1712 02fd 00       		.byte	0
 1713 02fe 11       		.uleb128 0x11
 1714 02ff 62000000 		.4byte	.LVL4
 1715 0303 82090000 		.4byte	0x982
 1716 0307 12030000 		.4byte	0x312
 1717 030b 12       		.uleb128 0x12
 1718 030c 01       		.uleb128 0x1
 1719 030d 50       		.byte	0x50
 1720 030e 02       		.uleb128 0x2
 1721 030f 08       		.byte	0x8
 1722 0310 28       		.byte	0x28
 1723 0311 00       		.byte	0
 1724 0312 11       		.uleb128 0x11
 1725 0313 80000000 		.4byte	.LVL5
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 76


 1726 0317 82090000 		.4byte	0x982
 1727 031b 26030000 		.4byte	0x326
 1728 031f 12       		.uleb128 0x12
 1729 0320 01       		.uleb128 0x1
 1730 0321 50       		.byte	0x50
 1731 0322 02       		.uleb128 0x2
 1732 0323 75       		.byte	0x75
 1733 0324 00       		.sleb128 0
 1734 0325 00       		.byte	0
 1735 0326 11       		.uleb128 0x11
 1736 0327 98000000 		.4byte	.LVL6
 1737 032b 8D090000 		.4byte	0x98d
 1738 032f 3A030000 		.4byte	0x33a
 1739 0333 12       		.uleb128 0x12
 1740 0334 01       		.uleb128 0x1
 1741 0335 50       		.byte	0x50
 1742 0336 02       		.uleb128 0x2
 1743 0337 77       		.byte	0x77
 1744 0338 00       		.sleb128 0
 1745 0339 00       		.byte	0
 1746 033a 11       		.uleb128 0x11
 1747 033b A0000000 		.4byte	.LVL7
 1748 033f 98090000 		.4byte	0x998
 1749 0343 52030000 		.4byte	0x352
 1750 0347 12       		.uleb128 0x12
 1751 0348 01       		.uleb128 0x1
 1752 0349 50       		.byte	0x50
 1753 034a 01       		.uleb128 0x1
 1754 034b 47       		.byte	0x47
 1755 034c 12       		.uleb128 0x12
 1756 034d 01       		.uleb128 0x1
 1757 034e 51       		.byte	0x51
 1758 034f 01       		.uleb128 0x1
 1759 0350 37       		.byte	0x37
 1760 0351 00       		.byte	0
 1761 0352 11       		.uleb128 0x11
 1762 0353 A8000000 		.4byte	.LVL8
 1763 0357 A3090000 		.4byte	0x9a3
 1764 035b 65030000 		.4byte	0x365
 1765 035f 12       		.uleb128 0x12
 1766 0360 01       		.uleb128 0x1
 1767 0361 50       		.byte	0x50
 1768 0362 01       		.uleb128 0x1
 1769 0363 47       		.byte	0x47
 1770 0364 00       		.byte	0
 1771 0365 11       		.uleb128 0x11
 1772 0366 B0000000 		.4byte	.LVL9
 1773 036a 98090000 		.4byte	0x998
 1774 036e 7D030000 		.4byte	0x37d
 1775 0372 12       		.uleb128 0x12
 1776 0373 01       		.uleb128 0x1
 1777 0374 50       		.byte	0x50
 1778 0375 01       		.uleb128 0x1
 1779 0376 48       		.byte	0x48
 1780 0377 12       		.uleb128 0x12
 1781 0378 01       		.uleb128 0x1
 1782 0379 51       		.byte	0x51
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 77


 1783 037a 01       		.uleb128 0x1
 1784 037b 37       		.byte	0x37
 1785 037c 00       		.byte	0
 1786 037d 11       		.uleb128 0x11
 1787 037e B8000000 		.4byte	.LVL10
 1788 0382 A3090000 		.4byte	0x9a3
 1789 0386 90030000 		.4byte	0x390
 1790 038a 12       		.uleb128 0x12
 1791 038b 01       		.uleb128 0x1
 1792 038c 50       		.byte	0x50
 1793 038d 01       		.uleb128 0x1
 1794 038e 48       		.byte	0x48
 1795 038f 00       		.byte	0
 1796 0390 11       		.uleb128 0x11
 1797 0391 C0000000 		.4byte	.LVL11
 1798 0395 98090000 		.4byte	0x998
 1799 0399 A8030000 		.4byte	0x3a8
 1800 039d 12       		.uleb128 0x12
 1801 039e 01       		.uleb128 0x1
 1802 039f 50       		.byte	0x50
 1803 03a0 01       		.uleb128 0x1
 1804 03a1 45       		.byte	0x45
 1805 03a2 12       		.uleb128 0x12
 1806 03a3 01       		.uleb128 0x1
 1807 03a4 51       		.byte	0x51
 1808 03a5 01       		.uleb128 0x1
 1809 03a6 37       		.byte	0x37
 1810 03a7 00       		.byte	0
 1811 03a8 11       		.uleb128 0x11
 1812 03a9 C8000000 		.4byte	.LVL12
 1813 03ad A3090000 		.4byte	0x9a3
 1814 03b1 BB030000 		.4byte	0x3bb
 1815 03b5 12       		.uleb128 0x12
 1816 03b6 01       		.uleb128 0x1
 1817 03b7 50       		.byte	0x50
 1818 03b8 01       		.uleb128 0x1
 1819 03b9 45       		.byte	0x45
 1820 03ba 00       		.byte	0
 1821 03bb 11       		.uleb128 0x11
 1822 03bc D0000000 		.4byte	.LVL13
 1823 03c0 98090000 		.4byte	0x998
 1824 03c4 D4030000 		.4byte	0x3d4
 1825 03c8 12       		.uleb128 0x12
 1826 03c9 01       		.uleb128 0x1
 1827 03ca 50       		.byte	0x50
 1828 03cb 02       		.uleb128 0x2
 1829 03cc 76       		.byte	0x76
 1830 03cd 00       		.sleb128 0
 1831 03ce 12       		.uleb128 0x12
 1832 03cf 01       		.uleb128 0x1
 1833 03d0 51       		.byte	0x51
 1834 03d1 01       		.uleb128 0x1
 1835 03d2 37       		.byte	0x37
 1836 03d3 00       		.byte	0
 1837 03d4 11       		.uleb128 0x11
 1838 03d5 D8000000 		.4byte	.LVL14
 1839 03d9 A3090000 		.4byte	0x9a3
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 78


 1840 03dd E8030000 		.4byte	0x3e8
 1841 03e1 12       		.uleb128 0x12
 1842 03e2 01       		.uleb128 0x1
 1843 03e3 50       		.byte	0x50
 1844 03e4 02       		.uleb128 0x2
 1845 03e5 76       		.byte	0x76
 1846 03e6 00       		.sleb128 0
 1847 03e7 00       		.byte	0
 1848 03e8 11       		.uleb128 0x11
 1849 03e9 E0000000 		.4byte	.LVL15
 1850 03ed 98090000 		.4byte	0x998
 1851 03f1 01040000 		.4byte	0x401
 1852 03f5 12       		.uleb128 0x12
 1853 03f6 01       		.uleb128 0x1
 1854 03f7 50       		.byte	0x50
 1855 03f8 02       		.uleb128 0x2
 1856 03f9 75       		.byte	0x75
 1857 03fa 00       		.sleb128 0
 1858 03fb 12       		.uleb128 0x12
 1859 03fc 01       		.uleb128 0x1
 1860 03fd 51       		.byte	0x51
 1861 03fe 01       		.uleb128 0x1
 1862 03ff 37       		.byte	0x37
 1863 0400 00       		.byte	0
 1864 0401 11       		.uleb128 0x11
 1865 0402 E8000000 		.4byte	.LVL16
 1866 0406 A3090000 		.4byte	0x9a3
 1867 040a 15040000 		.4byte	0x415
 1868 040e 12       		.uleb128 0x12
 1869 040f 01       		.uleb128 0x1
 1870 0410 50       		.byte	0x50
 1871 0411 02       		.uleb128 0x2
 1872 0412 75       		.byte	0x75
 1873 0413 00       		.sleb128 0
 1874 0414 00       		.byte	0
 1875 0415 11       		.uleb128 0x11
 1876 0416 F0000000 		.4byte	.LVL17
 1877 041a 98090000 		.4byte	0x998
 1878 041e 2D040000 		.4byte	0x42d
 1879 0422 12       		.uleb128 0x12
 1880 0423 01       		.uleb128 0x1
 1881 0424 50       		.byte	0x50
 1882 0425 01       		.uleb128 0x1
 1883 0426 33       		.byte	0x33
 1884 0427 12       		.uleb128 0x12
 1885 0428 01       		.uleb128 0x1
 1886 0429 51       		.byte	0x51
 1887 042a 01       		.uleb128 0x1
 1888 042b 37       		.byte	0x37
 1889 042c 00       		.byte	0
 1890 042d 11       		.uleb128 0x11
 1891 042e F8000000 		.4byte	.LVL18
 1892 0432 A3090000 		.4byte	0x9a3
 1893 0436 40040000 		.4byte	0x440
 1894 043a 12       		.uleb128 0x12
 1895 043b 01       		.uleb128 0x1
 1896 043c 50       		.byte	0x50
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 79


 1897 043d 01       		.uleb128 0x1
 1898 043e 33       		.byte	0x33
 1899 043f 00       		.byte	0
 1900 0440 11       		.uleb128 0x11
 1901 0441 00010000 		.4byte	.LVL19
 1902 0445 98090000 		.4byte	0x998
 1903 0449 58040000 		.4byte	0x458
 1904 044d 12       		.uleb128 0x12
 1905 044e 01       		.uleb128 0x1
 1906 044f 50       		.byte	0x50
 1907 0450 01       		.uleb128 0x1
 1908 0451 3C       		.byte	0x3c
 1909 0452 12       		.uleb128 0x12
 1910 0453 01       		.uleb128 0x1
 1911 0454 51       		.byte	0x51
 1912 0455 01       		.uleb128 0x1
 1913 0456 37       		.byte	0x37
 1914 0457 00       		.byte	0
 1915 0458 13       		.uleb128 0x13
 1916 0459 08010000 		.4byte	.LVL20
 1917 045d A3090000 		.4byte	0x9a3
 1918 0461 12       		.uleb128 0x12
 1919 0462 01       		.uleb128 0x1
 1920 0463 50       		.byte	0x50
 1921 0464 01       		.uleb128 0x1
 1922 0465 3C       		.byte	0x3c
 1923 0466 00       		.byte	0
 1924 0467 00       		.byte	0
 1925 0468 14       		.uleb128 0x14
 1926 0469 0E050000 		.4byte	.LASF48
 1927 046d 01       		.byte	0x1
 1928 046e CC01     		.2byte	0x1cc
 1929 0470 00000000 		.4byte	.LFB2
 1930 0474 D0000000 		.4byte	.LFE2-.LFB2
 1931 0478 01       		.uleb128 0x1
 1932 0479 9C       		.byte	0x9c
 1933 047a BC040000 		.4byte	0x4bc
 1934 047e 15       		.uleb128 0x15
 1935 047f BA010000 		.4byte	.LASF49
 1936 0483 01       		.byte	0x1
 1937 0484 CC01     		.2byte	0x1cc
 1938 0486 6B000000 		.4byte	0x6b
 1939 048a 13000000 		.4byte	.LLST1
 1940 048e 15       		.uleb128 0x15
 1941 048f F5000000 		.4byte	.LASF50
 1942 0493 01       		.byte	0x1
 1943 0494 CC01     		.2byte	0x1cc
 1944 0496 6B000000 		.4byte	0x6b
 1945 049a 34000000 		.4byte	.LLST2
 1946 049e 16       		.uleb128 0x16
 1947 049f 6900     		.ascii	"i\000"
 1948 04a1 01       		.byte	0x1
 1949 04a2 D301     		.2byte	0x1d3
 1950 04a4 6B000000 		.4byte	0x6b
 1951 04a8 55000000 		.4byte	.LLST3
 1952 04ac 13       		.uleb128 0x13
 1953 04ad 92000000 		.4byte	.LVL29
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 80


 1954 04b1 AE090000 		.4byte	0x9ae
 1955 04b5 12       		.uleb128 0x12
 1956 04b6 01       		.uleb128 0x1
 1957 04b7 50       		.byte	0x50
 1958 04b8 01       		.uleb128 0x1
 1959 04b9 31       		.byte	0x31
 1960 04ba 00       		.byte	0
 1961 04bb 00       		.byte	0
 1962 04bc 0E       		.uleb128 0xe
 1963 04bd 26010000 		.4byte	.LASF52
 1964 04c1 01       		.byte	0x1
 1965 04c2 BA       		.byte	0xba
 1966 04c3 00000000 		.4byte	.LFB0
 1967 04c7 24000000 		.4byte	.LFE0-.LFB0
 1968 04cb 01       		.uleb128 0x1
 1969 04cc 9C       		.byte	0x9c
 1970 04cd 0F050000 		.4byte	0x50f
 1971 04d1 17       		.uleb128 0x17
 1972 04d2 BA010000 		.4byte	.LASF49
 1973 04d6 01       		.byte	0x1
 1974 04d7 BA       		.byte	0xba
 1975 04d8 6B000000 		.4byte	0x6b
 1976 04dc 7F000000 		.4byte	.LLST4
 1977 04e0 17       		.uleb128 0x17
 1978 04e1 F5000000 		.4byte	.LASF50
 1979 04e5 01       		.byte	0x1
 1980 04e6 BA       		.byte	0xba
 1981 04e7 6B000000 		.4byte	0x6b
 1982 04eb A0000000 		.4byte	.LLST5
 1983 04ef 10       		.uleb128 0x10
 1984 04f0 10000000 		.4byte	.LVL31
 1985 04f4 AA020000 		.4byte	0x2aa
 1986 04f8 13       		.uleb128 0x13
 1987 04f9 1E000000 		.4byte	.LVL32
 1988 04fd 68040000 		.4byte	0x468
 1989 0501 12       		.uleb128 0x12
 1990 0502 01       		.uleb128 0x1
 1991 0503 50       		.byte	0x50
 1992 0504 02       		.uleb128 0x2
 1993 0505 74       		.byte	0x74
 1994 0506 00       		.sleb128 0
 1995 0507 12       		.uleb128 0x12
 1996 0508 01       		.uleb128 0x1
 1997 0509 51       		.byte	0x51
 1998 050a 02       		.uleb128 0x2
 1999 050b 75       		.byte	0x75
 2000 050c 00       		.sleb128 0
 2001 050d 00       		.byte	0
 2002 050e 00       		.byte	0
 2003 050f 14       		.uleb128 0x14
 2004 0510 F0020000 		.4byte	.LASF53
 2005 0514 01       		.byte	0x1
 2006 0515 9F02     		.2byte	0x29f
 2007 0517 00000000 		.4byte	.LFB3
 2008 051b 64000000 		.4byte	.LFE3-.LFB3
 2009 051f 01       		.uleb128 0x1
 2010 0520 9C       		.byte	0x9c
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 81


 2011 0521 34050000 		.4byte	0x534
 2012 0525 16       		.uleb128 0x16
 2013 0526 6900     		.ascii	"i\000"
 2014 0528 01       		.byte	0x1
 2015 0529 A502     		.2byte	0x2a5
 2016 052b 6B000000 		.4byte	0x6b
 2017 052f C1000000 		.4byte	.LLST6
 2018 0533 00       		.byte	0
 2019 0534 14       		.uleb128 0x14
 2020 0535 83060000 		.4byte	.LASF54
 2021 0539 01       		.byte	0x1
 2022 053a D902     		.2byte	0x2d9
 2023 053c 00000000 		.4byte	.LFB4
 2024 0540 B8000000 		.4byte	.LFE4-.LFB4
 2025 0544 01       		.uleb128 0x1
 2026 0545 9C       		.byte	0x9c
 2027 0546 76050000 		.4byte	0x576
 2028 054a 18       		.uleb128 0x18
 2029 054b 52060000 		.4byte	.LASF51
 2030 054f 01       		.byte	0x1
 2031 0550 DB02     		.2byte	0x2db
 2032 0552 6B000000 		.4byte	0x6b
 2033 0556 EB000000 		.4byte	.LLST7
 2034 055a 10       		.uleb128 0x10
 2035 055b 06000000 		.4byte	.LVL38
 2036 055f 77090000 		.4byte	0x977
 2037 0563 10       		.uleb128 0x10
 2038 0564 48000000 		.4byte	.LVL39
 2039 0568 8D090000 		.4byte	0x98d
 2040 056c 10       		.uleb128 0x10
 2041 056d 6C000000 		.4byte	.LVL40
 2042 0571 B9090000 		.4byte	0x9b9
 2043 0575 00       		.byte	0
 2044 0576 19       		.uleb128 0x19
 2045 0577 4A050000 		.4byte	.LASF56
 2046 057b 01       		.byte	0x1
 2047 057c 5103     		.2byte	0x351
 2048 057e 6B000000 		.4byte	0x6b
 2049 0582 00000000 		.4byte	.LFB5
 2050 0586 20000000 		.4byte	.LFE5-.LFB5
 2051 058a 01       		.uleb128 0x1
 2052 058b 9C       		.byte	0x9c
 2053 058c A1050000 		.4byte	0x5a1
 2054 0590 18       		.uleb128 0x18
 2055 0591 58040000 		.4byte	.LASF55
 2056 0595 01       		.byte	0x1
 2057 0596 5303     		.2byte	0x353
 2058 0598 6B000000 		.4byte	0x6b
 2059 059c FE000000 		.4byte	.LLST8
 2060 05a0 00       		.byte	0
 2061 05a1 1A       		.uleb128 0x1a
 2062 05a2 C7010000 		.4byte	.LASF77
 2063 05a6 01       		.byte	0x1
 2064 05a7 6803     		.2byte	0x368
 2065 05a9 6B000000 		.4byte	0x6b
 2066 05ad 00000000 		.4byte	.LFB6
 2067 05b1 0C000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 82


 2068 05b5 01       		.uleb128 0x1
 2069 05b6 9C       		.byte	0x9c
 2070 05b7 19       		.uleb128 0x19
 2071 05b8 25000000 		.4byte	.LASF57
 2072 05bc 01       		.byte	0x1
 2073 05bd 8203     		.2byte	0x382
 2074 05bf 6B000000 		.4byte	0x6b
 2075 05c3 00000000 		.4byte	.LFB7
 2076 05c7 20000000 		.4byte	.LFE7-.LFB7
 2077 05cb 01       		.uleb128 0x1
 2078 05cc 9C       		.byte	0x9c
 2079 05cd E2050000 		.4byte	0x5e2
 2080 05d1 16       		.uleb128 0x16
 2081 05d2 72657300 		.ascii	"res\000"
 2082 05d6 01       		.byte	0x1
 2083 05d7 8403     		.2byte	0x384
 2084 05d9 6B000000 		.4byte	0x6b
 2085 05dd 11010000 		.4byte	.LLST9
 2086 05e1 00       		.byte	0
 2087 05e2 19       		.uleb128 0x19
 2088 05e3 C2040000 		.4byte	.LASF58
 2089 05e7 01       		.byte	0x1
 2090 05e8 9F03     		.2byte	0x39f
 2091 05ea 6B000000 		.4byte	0x6b
 2092 05ee 00000000 		.4byte	.LFB8
 2093 05f2 0C000000 		.4byte	.LFE8-.LFB8
 2094 05f6 01       		.uleb128 0x1
 2095 05f7 9C       		.byte	0x9c
 2096 05f8 0D060000 		.4byte	0x60d
 2097 05fc 15       		.uleb128 0x15
 2098 05fd 09000000 		.4byte	.LASF59
 2099 0601 01       		.byte	0x1
 2100 0602 9F03     		.2byte	0x39f
 2101 0604 6B000000 		.4byte	0x6b
 2102 0608 47010000 		.4byte	.LLST10
 2103 060c 00       		.byte	0
 2104 060d 19       		.uleb128 0x19
 2105 060e 1A040000 		.4byte	.LASF60
 2106 0612 01       		.byte	0x1
 2107 0613 BF03     		.2byte	0x3bf
 2108 0615 6B000000 		.4byte	0x6b
 2109 0619 00000000 		.4byte	.LFB9
 2110 061d 14000000 		.4byte	.LFE9-.LFB9
 2111 0621 01       		.uleb128 0x1
 2112 0622 9C       		.byte	0x9c
 2113 0623 38060000 		.4byte	0x638
 2114 0627 15       		.uleb128 0x15
 2115 0628 2D040000 		.4byte	.LASF61
 2116 062c 01       		.byte	0x1
 2117 062d BF03     		.2byte	0x3bf
 2118 062f 6B000000 		.4byte	0x6b
 2119 0633 68010000 		.4byte	.LLST11
 2120 0637 00       		.byte	0
 2121 0638 19       		.uleb128 0x19
 2122 0639 60050000 		.4byte	.LASF62
 2123 063d 01       		.byte	0x1
 2124 063e D603     		.2byte	0x3d6
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 83


 2125 0640 77000000 		.4byte	0x77
 2126 0644 00000000 		.4byte	.LFB10
 2127 0648 28000000 		.4byte	.LFE10-.LFB10
 2128 064c 01       		.uleb128 0x1
 2129 064d 9C       		.byte	0x9c
 2130 064e 73060000 		.4byte	0x673
 2131 0652 15       		.uleb128 0x15
 2132 0653 2D040000 		.4byte	.LASF61
 2133 0657 01       		.byte	0x1
 2134 0658 D603     		.2byte	0x3d6
 2135 065a 6B000000 		.4byte	0x6b
 2136 065e 89010000 		.4byte	.LLST12
 2137 0662 18       		.uleb128 0x18
 2138 0663 20000000 		.4byte	.LASF63
 2139 0667 01       		.byte	0x1
 2140 0668 D803     		.2byte	0x3d8
 2141 066a 77000000 		.4byte	0x77
 2142 066e C3010000 		.4byte	.LLST13
 2143 0672 00       		.byte	0
 2144 0673 14       		.uleb128 0x14
 2145 0674 FB030000 		.4byte	.LASF64
 2146 0678 01       		.byte	0x1
 2147 0679 3E05     		.2byte	0x53e
 2148 067b 00000000 		.4byte	.LFB11
 2149 067f 94000000 		.4byte	.LFE11-.LFB11
 2150 0683 01       		.uleb128 0x1
 2151 0684 9C       		.byte	0x9c
 2152 0685 CC060000 		.4byte	0x6cc
 2153 0689 15       		.uleb128 0x15
 2154 068a 2D040000 		.4byte	.LASF61
 2155 068e 01       		.byte	0x1
 2156 068f 3E05     		.2byte	0x53e
 2157 0691 6B000000 		.4byte	0x6b
 2158 0695 11020000 		.4byte	.LLST14
 2159 0699 1B       		.uleb128 0x1b
 2160 069a 85000000 		.4byte	.LASF65
 2161 069e 01       		.byte	0x1
 2162 069f 3E05     		.2byte	0x53e
 2163 06a1 CC060000 		.4byte	0x6cc
 2164 06a5 01       		.uleb128 0x1
 2165 06a6 51       		.byte	0x51
 2166 06a7 15       		.uleb128 0x15
 2167 06a8 B3010000 		.4byte	.LASF66
 2168 06ac 01       		.byte	0x1
 2169 06ad 3E05     		.2byte	0x53e
 2170 06af 77000000 		.4byte	0x77
 2171 06b3 32020000 		.4byte	.LLST15
 2172 06b7 1C       		.uleb128 0x1c
 2173 06b8 00000000 		.4byte	.Ldebug_ranges0+0
 2174 06bc 16       		.uleb128 0x16
 2175 06bd 6900     		.ascii	"i\000"
 2176 06bf 01       		.byte	0x1
 2177 06c0 5305     		.2byte	0x553
 2178 06c2 77000000 		.4byte	0x77
 2179 06c6 5E020000 		.4byte	.LLST16
 2180 06ca 00       		.byte	0
 2181 06cb 00       		.byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 84


 2182 06cc 1D       		.uleb128 0x1d
 2183 06cd 04       		.byte	0x4
 2184 06ce D2060000 		.4byte	0x6d2
 2185 06d2 1E       		.uleb128 0x1e
 2186 06d3 6B000000 		.4byte	0x6b
 2187 06d7 14       		.uleb128 0x14
 2188 06d8 E0010000 		.4byte	.LASF67
 2189 06dc 01       		.byte	0x1
 2190 06dd E408     		.2byte	0x8e4
 2191 06df 00000000 		.4byte	.LFB13
 2192 06e3 2C000000 		.4byte	.LFE13-.LFB13
 2193 06e7 01       		.uleb128 0x1
 2194 06e8 9C       		.byte	0x9c
 2195 06e9 FE060000 		.4byte	0x6fe
 2196 06ed 15       		.uleb128 0x15
 2197 06ee 2D040000 		.4byte	.LASF61
 2198 06f2 01       		.byte	0x1
 2199 06f3 E408     		.2byte	0x8e4
 2200 06f5 6B000000 		.4byte	0x6b
 2201 06f9 87020000 		.4byte	.LLST17
 2202 06fd 00       		.byte	0
 2203 06fe 19       		.uleb128 0x19
 2204 06ff 71020000 		.4byte	.LASF68
 2205 0703 01       		.byte	0x1
 2206 0704 7506     		.2byte	0x675
 2207 0706 77000000 		.4byte	0x77
 2208 070a 00000000 		.4byte	.LFB12
 2209 070e 50000000 		.4byte	.LFE12-.LFB12
 2210 0712 01       		.uleb128 0x1
 2211 0713 9C       		.byte	0x9c
 2212 0714 9D070000 		.4byte	0x79d
 2213 0718 15       		.uleb128 0x15
 2214 0719 2D040000 		.4byte	.LASF61
 2215 071d 01       		.byte	0x1
 2216 071e 7506     		.2byte	0x675
 2217 0720 6B000000 		.4byte	0x6b
 2218 0724 A8020000 		.4byte	.LLST18
 2219 0728 15       		.uleb128 0x15
 2220 0729 85000000 		.4byte	.LASF65
 2221 072d 01       		.byte	0x1
 2222 072e 7506     		.2byte	0x675
 2223 0730 9D070000 		.4byte	0x79d
 2224 0734 E2020000 		.4byte	.LLST19
 2225 0738 15       		.uleb128 0x15
 2226 0739 B3010000 		.4byte	.LASF66
 2227 073d 01       		.byte	0x1
 2228 073e 7506     		.2byte	0x675
 2229 0740 77000000 		.4byte	0x77
 2230 0744 19030000 		.4byte	.LLST20
 2231 0748 1F       		.uleb128 0x1f
 2232 0749 20000000 		.4byte	.LBB4
 2233 074d 14000000 		.4byte	.LBE4-.LBB4
 2234 0751 64070000 		.4byte	0x764
 2235 0755 16       		.uleb128 0x16
 2236 0756 6900     		.ascii	"i\000"
 2237 0758 01       		.byte	0x1
 2238 0759 8206     		.2byte	0x682
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 85


 2239 075b 77000000 		.4byte	0x77
 2240 075f 5B030000 		.4byte	.LLST21
 2241 0763 00       		.byte	0
 2242 0764 11       		.uleb128 0x11
 2243 0765 14000000 		.4byte	.LVL73
 2244 0769 38060000 		.4byte	0x638
 2245 076d 78070000 		.4byte	0x778
 2246 0771 12       		.uleb128 0x12
 2247 0772 01       		.uleb128 0x1
 2248 0773 50       		.byte	0x50
 2249 0774 02       		.uleb128 0x2
 2250 0775 75       		.byte	0x75
 2251 0776 00       		.sleb128 0
 2252 0777 00       		.byte	0
 2253 0778 11       		.uleb128 0x11
 2254 0779 1E000000 		.4byte	.LVL74
 2255 077d 38060000 		.4byte	0x638
 2256 0781 8C070000 		.4byte	0x78c
 2257 0785 12       		.uleb128 0x12
 2258 0786 01       		.uleb128 0x1
 2259 0787 50       		.byte	0x50
 2260 0788 02       		.uleb128 0x2
 2261 0789 75       		.byte	0x75
 2262 078a 00       		.sleb128 0
 2263 078b 00       		.byte	0
 2264 078c 13       		.uleb128 0x13
 2265 078d 3A000000 		.4byte	.LVL79
 2266 0791 D7060000 		.4byte	0x6d7
 2267 0795 12       		.uleb128 0x12
 2268 0796 01       		.uleb128 0x1
 2269 0797 50       		.byte	0x50
 2270 0798 02       		.uleb128 0x2
 2271 0799 75       		.byte	0x75
 2272 079a 00       		.sleb128 0
 2273 079b 00       		.byte	0
 2274 079c 00       		.byte	0
 2275 079d 1D       		.uleb128 0x1d
 2276 079e 04       		.byte	0x4
 2277 079f 6B000000 		.4byte	0x6b
 2278 07a3 14       		.uleb128 0x14
 2279 07a4 63060000 		.4byte	.LASF69
 2280 07a8 01       		.byte	0x1
 2281 07a9 FC08     		.2byte	0x8fc
 2282 07ab 00000000 		.4byte	.LFB14
 2283 07af 18000000 		.4byte	.LFE14-.LFB14
 2284 07b3 01       		.uleb128 0x1
 2285 07b4 9C       		.byte	0x9c
 2286 07b5 CA070000 		.4byte	0x7ca
 2287 07b9 15       		.uleb128 0x15
 2288 07ba 2D040000 		.4byte	.LASF61
 2289 07be 01       		.byte	0x1
 2290 07bf FC08     		.2byte	0x8fc
 2291 07c1 6B000000 		.4byte	0x6b
 2292 07c5 85030000 		.4byte	.LLST22
 2293 07c9 00       		.byte	0
 2294 07ca 14       		.uleb128 0x14
 2295 07cb 1F030000 		.4byte	.LASF70
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 86


 2296 07cf 01       		.byte	0x1
 2297 07d0 1A09     		.2byte	0x91a
 2298 07d2 00000000 		.4byte	.LFB15
 2299 07d6 0C000000 		.4byte	.LFE15-.LFB15
 2300 07da 01       		.uleb128 0x1
 2301 07db 9C       		.byte	0x9c
 2302 07dc EF070000 		.4byte	0x7ef
 2303 07e0 1B       		.uleb128 0x1b
 2304 07e1 4B060000 		.4byte	.LASF71
 2305 07e5 01       		.byte	0x1
 2306 07e6 1A09     		.2byte	0x91a
 2307 07e8 6B000000 		.4byte	0x6b
 2308 07ec 01       		.uleb128 0x1
 2309 07ed 50       		.byte	0x50
 2310 07ee 00       		.byte	0
 2311 07ef 19       		.uleb128 0x19
 2312 07f0 83020000 		.4byte	.LASF72
 2313 07f4 01       		.byte	0x1
 2314 07f5 3309     		.2byte	0x933
 2315 07f7 6B000000 		.4byte	0x6b
 2316 07fb 00000000 		.4byte	.LFB16
 2317 07ff 20000000 		.4byte	.LFE16-.LFB16
 2318 0803 01       		.uleb128 0x1
 2319 0804 9C       		.byte	0x9c
 2320 0805 29080000 		.4byte	0x829
 2321 0809 15       		.uleb128 0x15
 2322 080a 2D040000 		.4byte	.LASF61
 2323 080e 01       		.byte	0x1
 2324 080f 3309     		.2byte	0x933
 2325 0811 6B000000 		.4byte	0x6b
 2326 0815 A6030000 		.4byte	.LLST23
 2327 0819 16       		.uleb128 0x16
 2328 081a 637200   		.ascii	"cr\000"
 2329 081d 01       		.byte	0x1
 2330 081e 3509     		.2byte	0x935
 2331 0820 6B000000 		.4byte	0x6b
 2332 0824 E0030000 		.4byte	.LLST24
 2333 0828 00       		.byte	0
 2334 0829 14       		.uleb128 0x14
 2335 082a 59010000 		.4byte	.LASF73
 2336 082e 01       		.byte	0x1
 2337 082f 5C09     		.2byte	0x95c
 2338 0831 00000000 		.4byte	.LFB17
 2339 0835 20000000 		.4byte	.LFE17-.LFB17
 2340 0839 01       		.uleb128 0x1
 2341 083a 9C       		.byte	0x9c
 2342 083b 4E080000 		.4byte	0x84e
 2343 083f 1B       		.uleb128 0x1b
 2344 0840 CA000000 		.4byte	.LASF74
 2345 0844 01       		.byte	0x1
 2346 0845 5C09     		.2byte	0x95c
 2347 0847 6B000000 		.4byte	0x6b
 2348 084b 01       		.uleb128 0x1
 2349 084c 50       		.byte	0x50
 2350 084d 00       		.byte	0
 2351 084e 19       		.uleb128 0x19
 2352 084f E2000000 		.4byte	.LASF75
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 87


 2353 0853 01       		.byte	0x1
 2354 0854 9509     		.2byte	0x995
 2355 0856 6B000000 		.4byte	0x6b
 2356 085a 00000000 		.4byte	.LFB18
 2357 085e 18000000 		.4byte	.LFE18-.LFB18
 2358 0862 01       		.uleb128 0x1
 2359 0863 9C       		.byte	0x9c
 2360 0864 79080000 		.4byte	0x879
 2361 0868 18       		.uleb128 0x18
 2362 0869 19000000 		.4byte	.LASF76
 2363 086d 01       		.byte	0x1
 2364 086e 9709     		.2byte	0x997
 2365 0870 6B000000 		.4byte	0x6b
 2366 0874 16040000 		.4byte	.LLST25
 2367 0878 00       		.byte	0
 2368 0879 1A       		.uleb128 0x1a
 2369 087a A9040000 		.4byte	.LASF78
 2370 087e 01       		.byte	0x1
 2371 087f AD09     		.2byte	0x9ad
 2372 0881 6B000000 		.4byte	0x6b
 2373 0885 00000000 		.4byte	.LFB19
 2374 0889 10000000 		.4byte	.LFE19-.LFB19
 2375 088d 01       		.uleb128 0x1
 2376 088e 9C       		.byte	0x9c
 2377 088f 20       		.uleb128 0x20
 2378 0890 11010000 		.4byte	.LASF79
 2379 0894 01       		.byte	0x1
 2380 0895 BB09     		.2byte	0x9bb
 2381 0897 00000000 		.4byte	.LFB20
 2382 089b 10000000 		.4byte	.LFE20-.LFB20
 2383 089f 01       		.uleb128 0x1
 2384 08a0 9C       		.byte	0x9c
 2385 08a1 20       		.uleb128 0x20
 2386 08a2 F4010000 		.4byte	.LASF80
 2387 08a6 01       		.byte	0x1
 2388 08a7 D109     		.2byte	0x9d1
 2389 08a9 00000000 		.4byte	.LFB21
 2390 08ad 10000000 		.4byte	.LFE21-.LFB21
 2391 08b1 01       		.uleb128 0x1
 2392 08b2 9C       		.byte	0x9c
 2393 08b3 21       		.uleb128 0x21
 2394 08b4 36040000 		.4byte	.LASF81
 2395 08b8 01       		.byte	0x1
 2396 08b9 28       		.byte	0x28
 2397 08ba 6B000000 		.4byte	0x6b
 2398 08be 05       		.uleb128 0x5
 2399 08bf 03       		.byte	0x3
 2400 08c0 00000000 		.4byte	USBUART_initVar
 2401 08c4 22       		.uleb128 0x22
 2402 08c5 62020000 		.4byte	.LASF82
 2403 08c9 03       		.byte	0x3
 2404 08ca D602     		.2byte	0x2d6
 2405 08cc B0000000 		.4byte	0xb0
 2406 08d0 22       		.uleb128 0x22
 2407 08d1 9D010000 		.4byte	.LASF83
 2408 08d5 03       		.byte	0x3
 2409 08d6 D702     		.2byte	0x2d7
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 88


 2410 08d8 B0000000 		.4byte	0xb0
 2411 08dc 22       		.uleb128 0x22
 2412 08dd 44000000 		.4byte	.LASF84
 2413 08e1 03       		.byte	0x3
 2414 08e2 D802     		.2byte	0x2d8
 2415 08e4 B0000000 		.4byte	0xb0
 2416 08e8 22       		.uleb128 0x22
 2417 08e9 18020000 		.4byte	.LASF85
 2418 08ed 03       		.byte	0x3
 2419 08ee D902     		.2byte	0x2d9
 2420 08f0 B0000000 		.4byte	0xb0
 2421 08f4 22       		.uleb128 0x22
 2422 08f5 5A000000 		.4byte	.LASF86
 2423 08f9 03       		.byte	0x3
 2424 08fa DA02     		.2byte	0x2da
 2425 08fc B0000000 		.4byte	0xb0
 2426 0900 0A       		.uleb128 0xa
 2427 0901 B0000000 		.4byte	0xb0
 2428 0905 10090000 		.4byte	0x910
 2429 0909 0B       		.uleb128 0xb
 2430 090a CD000000 		.4byte	0xcd
 2431 090e 01       		.byte	0x1
 2432 090f 00       		.byte	0
 2433 0910 22       		.uleb128 0x22
 2434 0911 70040000 		.4byte	.LASF87
 2435 0915 03       		.byte	0x3
 2436 0916 E302     		.2byte	0x2e3
 2437 0918 1C090000 		.4byte	0x91c
 2438 091c 05       		.uleb128 0x5
 2439 091d 00090000 		.4byte	0x900
 2440 0921 23       		.uleb128 0x23
 2441 0922 8A050000 		.4byte	.LASF88
 2442 0926 04       		.byte	0x4
 2443 0927 73       		.byte	0x73
 2444 0928 B0000000 		.4byte	0xb0
 2445 092c 23       		.uleb128 0x23
 2446 092d 34010000 		.4byte	.LASF89
 2447 0931 04       		.byte	0x4
 2448 0932 74       		.byte	0x74
 2449 0933 37090000 		.4byte	0x937
 2450 0937 05       		.uleb128 0x5
 2451 0938 00090000 		.4byte	0x900
 2452 093c 23       		.uleb128 0x23
 2453 093d 99020000 		.4byte	.LASF90
 2454 0941 04       		.byte	0x4
 2455 0942 76       		.byte	0x76
 2456 0943 B0000000 		.4byte	0xb0
 2457 0947 0A       		.uleb128 0xa
 2458 0948 57090000 		.4byte	0x957
 2459 094c 57090000 		.4byte	0x957
 2460 0950 0B       		.uleb128 0xb
 2461 0951 CD000000 		.4byte	0xcd
 2462 0955 08       		.byte	0x8
 2463 0956 00       		.byte	0
 2464 0957 05       		.uleb128 0x5
 2465 0958 49010000 		.4byte	0x149
 2466 095c 23       		.uleb128 0x23
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 89


 2467 095d 78060000 		.4byte	.LASF91
 2468 0961 04       		.byte	0x4
 2469 0962 7A       		.byte	0x7a
 2470 0963 67090000 		.4byte	0x967
 2471 0967 05       		.uleb128 0x5
 2472 0968 47090000 		.4byte	0x947
 2473 096c 23       		.uleb128 0x23
 2474 096d 68030000 		.4byte	.LASF92
 2475 0971 04       		.byte	0x4
 2476 0972 9C       		.byte	0x9c
 2477 0973 B0000000 		.4byte	0xb0
 2478 0977 24       		.uleb128 0x24
 2479 0978 73050000 		.4byte	.LASF93
 2480 097c 73050000 		.4byte	.LASF93
 2481 0980 05       		.byte	0x5
 2482 0981 7D       		.byte	0x7d
 2483 0982 24       		.uleb128 0x24
 2484 0983 BA020000 		.4byte	.LASF94
 2485 0987 BA020000 		.4byte	.LASF94
 2486 098b 05       		.byte	0x5
 2487 098c 77       		.byte	0x77
 2488 098d 24       		.uleb128 0x24
 2489 098e 6F000000 		.4byte	.LASF95
 2490 0992 6F000000 		.4byte	.LASF95
 2491 0996 05       		.byte	0x5
 2492 0997 7E       		.byte	0x7e
 2493 0998 24       		.uleb128 0x24
 2494 0999 86010000 		.4byte	.LASF96
 2495 099d 86010000 		.4byte	.LASF96
 2496 09a1 05       		.byte	0x5
 2497 09a2 8B       		.byte	0x8b
 2498 09a3 24       		.uleb128 0x24
 2499 09a4 3B050000 		.4byte	.LASF97
 2500 09a8 3B050000 		.4byte	.LASF97
 2501 09ac 05       		.byte	0x5
 2502 09ad 88       		.byte	0x88
 2503 09ae 24       		.uleb128 0x24
 2504 09af 5A030000 		.4byte	.LASF98
 2505 09b3 5A030000 		.4byte	.LASF98
 2506 09b7 05       		.byte	0x5
 2507 09b8 79       		.byte	0x79
 2508 09b9 24       		.uleb128 0x24
 2509 09ba E9040000 		.4byte	.LASF99
 2510 09be E9040000 		.4byte	.LASF99
 2511 09c2 06       		.byte	0x6
 2512 09c3 2B       		.byte	0x2b
 2513 09c4 00       		.byte	0
 2514              		.section	.debug_abbrev,"",%progbits
 2515              	.Ldebug_abbrev0:
 2516 0000 01       		.uleb128 0x1
 2517 0001 11       		.uleb128 0x11
 2518 0002 01       		.byte	0x1
 2519 0003 25       		.uleb128 0x25
 2520 0004 0E       		.uleb128 0xe
 2521 0005 13       		.uleb128 0x13
 2522 0006 0B       		.uleb128 0xb
 2523 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 90


 2524 0008 0E       		.uleb128 0xe
 2525 0009 1B       		.uleb128 0x1b
 2526 000a 0E       		.uleb128 0xe
 2527 000b 55       		.uleb128 0x55
 2528 000c 17       		.uleb128 0x17
 2529 000d 11       		.uleb128 0x11
 2530 000e 01       		.uleb128 0x1
 2531 000f 10       		.uleb128 0x10
 2532 0010 17       		.uleb128 0x17
 2533 0011 00       		.byte	0
 2534 0012 00       		.byte	0
 2535 0013 02       		.uleb128 0x2
 2536 0014 24       		.uleb128 0x24
 2537 0015 00       		.byte	0
 2538 0016 0B       		.uleb128 0xb
 2539 0017 0B       		.uleb128 0xb
 2540 0018 3E       		.uleb128 0x3e
 2541 0019 0B       		.uleb128 0xb
 2542 001a 03       		.uleb128 0x3
 2543 001b 0E       		.uleb128 0xe
 2544 001c 00       		.byte	0
 2545 001d 00       		.byte	0
 2546 001e 03       		.uleb128 0x3
 2547 001f 24       		.uleb128 0x24
 2548 0020 00       		.byte	0
 2549 0021 0B       		.uleb128 0xb
 2550 0022 0B       		.uleb128 0xb
 2551 0023 3E       		.uleb128 0x3e
 2552 0024 0B       		.uleb128 0xb
 2553 0025 03       		.uleb128 0x3
 2554 0026 08       		.uleb128 0x8
 2555 0027 00       		.byte	0
 2556 0028 00       		.byte	0
 2557 0029 04       		.uleb128 0x4
 2558 002a 16       		.uleb128 0x16
 2559 002b 00       		.byte	0
 2560 002c 03       		.uleb128 0x3
 2561 002d 0E       		.uleb128 0xe
 2562 002e 3A       		.uleb128 0x3a
 2563 002f 0B       		.uleb128 0xb
 2564 0030 3B       		.uleb128 0x3b
 2565 0031 05       		.uleb128 0x5
 2566 0032 49       		.uleb128 0x49
 2567 0033 13       		.uleb128 0x13
 2568 0034 00       		.byte	0
 2569 0035 00       		.byte	0
 2570 0036 05       		.uleb128 0x5
 2571 0037 35       		.uleb128 0x35
 2572 0038 00       		.byte	0
 2573 0039 49       		.uleb128 0x49
 2574 003a 13       		.uleb128 0x13
 2575 003b 00       		.byte	0
 2576 003c 00       		.byte	0
 2577 003d 06       		.uleb128 0x6
 2578 003e 13       		.uleb128 0x13
 2579 003f 01       		.byte	0x1
 2580 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 91


 2581 0041 0B       		.uleb128 0xb
 2582 0042 3A       		.uleb128 0x3a
 2583 0043 0B       		.uleb128 0xb
 2584 0044 3B       		.uleb128 0x3b
 2585 0045 0B       		.uleb128 0xb
 2586 0046 01       		.uleb128 0x1
 2587 0047 13       		.uleb128 0x13
 2588 0048 00       		.byte	0
 2589 0049 00       		.byte	0
 2590 004a 07       		.uleb128 0x7
 2591 004b 0D       		.uleb128 0xd
 2592 004c 00       		.byte	0
 2593 004d 03       		.uleb128 0x3
 2594 004e 0E       		.uleb128 0xe
 2595 004f 3A       		.uleb128 0x3a
 2596 0050 0B       		.uleb128 0xb
 2597 0051 3B       		.uleb128 0x3b
 2598 0052 0B       		.uleb128 0xb
 2599 0053 49       		.uleb128 0x49
 2600 0054 13       		.uleb128 0x13
 2601 0055 38       		.uleb128 0x38
 2602 0056 0B       		.uleb128 0xb
 2603 0057 00       		.byte	0
 2604 0058 00       		.byte	0
 2605 0059 08       		.uleb128 0x8
 2606 005a 16       		.uleb128 0x16
 2607 005b 00       		.byte	0
 2608 005c 03       		.uleb128 0x3
 2609 005d 0E       		.uleb128 0xe
 2610 005e 3A       		.uleb128 0x3a
 2611 005f 0B       		.uleb128 0xb
 2612 0060 3B       		.uleb128 0x3b
 2613 0061 0B       		.uleb128 0xb
 2614 0062 49       		.uleb128 0x49
 2615 0063 13       		.uleb128 0x13
 2616 0064 00       		.byte	0
 2617 0065 00       		.byte	0
 2618 0066 09       		.uleb128 0x9
 2619 0067 0D       		.uleb128 0xd
 2620 0068 00       		.byte	0
 2621 0069 03       		.uleb128 0x3
 2622 006a 08       		.uleb128 0x8
 2623 006b 3A       		.uleb128 0x3a
 2624 006c 0B       		.uleb128 0xb
 2625 006d 3B       		.uleb128 0x3b
 2626 006e 0B       		.uleb128 0xb
 2627 006f 49       		.uleb128 0x49
 2628 0070 13       		.uleb128 0x13
 2629 0071 38       		.uleb128 0x38
 2630 0072 0B       		.uleb128 0xb
 2631 0073 00       		.byte	0
 2632 0074 00       		.byte	0
 2633 0075 0A       		.uleb128 0xa
 2634 0076 01       		.uleb128 0x1
 2635 0077 01       		.byte	0x1
 2636 0078 49       		.uleb128 0x49
 2637 0079 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 92


 2638 007a 01       		.uleb128 0x1
 2639 007b 13       		.uleb128 0x13
 2640 007c 00       		.byte	0
 2641 007d 00       		.byte	0
 2642 007e 0B       		.uleb128 0xb
 2643 007f 21       		.uleb128 0x21
 2644 0080 00       		.byte	0
 2645 0081 49       		.uleb128 0x49
 2646 0082 13       		.uleb128 0x13
 2647 0083 2F       		.uleb128 0x2f
 2648 0084 0B       		.uleb128 0xb
 2649 0085 00       		.byte	0
 2650 0086 00       		.byte	0
 2651 0087 0C       		.uleb128 0xc
 2652 0088 13       		.uleb128 0x13
 2653 0089 01       		.byte	0x1
 2654 008a 0B       		.uleb128 0xb
 2655 008b 0B       		.uleb128 0xb
 2656 008c 3A       		.uleb128 0x3a
 2657 008d 0B       		.uleb128 0xb
 2658 008e 3B       		.uleb128 0x3b
 2659 008f 05       		.uleb128 0x5
 2660 0090 01       		.uleb128 0x1
 2661 0091 13       		.uleb128 0x13
 2662 0092 00       		.byte	0
 2663 0093 00       		.byte	0
 2664 0094 0D       		.uleb128 0xd
 2665 0095 0D       		.uleb128 0xd
 2666 0096 00       		.byte	0
 2667 0097 03       		.uleb128 0x3
 2668 0098 0E       		.uleb128 0xe
 2669 0099 3A       		.uleb128 0x3a
 2670 009a 0B       		.uleb128 0xb
 2671 009b 3B       		.uleb128 0x3b
 2672 009c 05       		.uleb128 0x5
 2673 009d 49       		.uleb128 0x49
 2674 009e 13       		.uleb128 0x13
 2675 009f 38       		.uleb128 0x38
 2676 00a0 0B       		.uleb128 0xb
 2677 00a1 00       		.byte	0
 2678 00a2 00       		.byte	0
 2679 00a3 0E       		.uleb128 0xe
 2680 00a4 2E       		.uleb128 0x2e
 2681 00a5 01       		.byte	0x1
 2682 00a6 3F       		.uleb128 0x3f
 2683 00a7 19       		.uleb128 0x19
 2684 00a8 03       		.uleb128 0x3
 2685 00a9 0E       		.uleb128 0xe
 2686 00aa 3A       		.uleb128 0x3a
 2687 00ab 0B       		.uleb128 0xb
 2688 00ac 3B       		.uleb128 0x3b
 2689 00ad 0B       		.uleb128 0xb
 2690 00ae 27       		.uleb128 0x27
 2691 00af 19       		.uleb128 0x19
 2692 00b0 11       		.uleb128 0x11
 2693 00b1 01       		.uleb128 0x1
 2694 00b2 12       		.uleb128 0x12
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 93


 2695 00b3 06       		.uleb128 0x6
 2696 00b4 40       		.uleb128 0x40
 2697 00b5 18       		.uleb128 0x18
 2698 00b6 9742     		.uleb128 0x2117
 2699 00b8 19       		.uleb128 0x19
 2700 00b9 01       		.uleb128 0x1
 2701 00ba 13       		.uleb128 0x13
 2702 00bb 00       		.byte	0
 2703 00bc 00       		.byte	0
 2704 00bd 0F       		.uleb128 0xf
 2705 00be 34       		.uleb128 0x34
 2706 00bf 00       		.byte	0
 2707 00c0 03       		.uleb128 0x3
 2708 00c1 0E       		.uleb128 0xe
 2709 00c2 3A       		.uleb128 0x3a
 2710 00c3 0B       		.uleb128 0xb
 2711 00c4 3B       		.uleb128 0x3b
 2712 00c5 0B       		.uleb128 0xb
 2713 00c6 49       		.uleb128 0x49
 2714 00c7 13       		.uleb128 0x13
 2715 00c8 02       		.uleb128 0x2
 2716 00c9 17       		.uleb128 0x17
 2717 00ca 00       		.byte	0
 2718 00cb 00       		.byte	0
 2719 00cc 10       		.uleb128 0x10
 2720 00cd 898201   		.uleb128 0x4109
 2721 00d0 00       		.byte	0
 2722 00d1 11       		.uleb128 0x11
 2723 00d2 01       		.uleb128 0x1
 2724 00d3 31       		.uleb128 0x31
 2725 00d4 13       		.uleb128 0x13
 2726 00d5 00       		.byte	0
 2727 00d6 00       		.byte	0
 2728 00d7 11       		.uleb128 0x11
 2729 00d8 898201   		.uleb128 0x4109
 2730 00db 01       		.byte	0x1
 2731 00dc 11       		.uleb128 0x11
 2732 00dd 01       		.uleb128 0x1
 2733 00de 31       		.uleb128 0x31
 2734 00df 13       		.uleb128 0x13
 2735 00e0 01       		.uleb128 0x1
 2736 00e1 13       		.uleb128 0x13
 2737 00e2 00       		.byte	0
 2738 00e3 00       		.byte	0
 2739 00e4 12       		.uleb128 0x12
 2740 00e5 8A8201   		.uleb128 0x410a
 2741 00e8 00       		.byte	0
 2742 00e9 02       		.uleb128 0x2
 2743 00ea 18       		.uleb128 0x18
 2744 00eb 9142     		.uleb128 0x2111
 2745 00ed 18       		.uleb128 0x18
 2746 00ee 00       		.byte	0
 2747 00ef 00       		.byte	0
 2748 00f0 13       		.uleb128 0x13
 2749 00f1 898201   		.uleb128 0x4109
 2750 00f4 01       		.byte	0x1
 2751 00f5 11       		.uleb128 0x11
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 94


 2752 00f6 01       		.uleb128 0x1
 2753 00f7 31       		.uleb128 0x31
 2754 00f8 13       		.uleb128 0x13
 2755 00f9 00       		.byte	0
 2756 00fa 00       		.byte	0
 2757 00fb 14       		.uleb128 0x14
 2758 00fc 2E       		.uleb128 0x2e
 2759 00fd 01       		.byte	0x1
 2760 00fe 3F       		.uleb128 0x3f
 2761 00ff 19       		.uleb128 0x19
 2762 0100 03       		.uleb128 0x3
 2763 0101 0E       		.uleb128 0xe
 2764 0102 3A       		.uleb128 0x3a
 2765 0103 0B       		.uleb128 0xb
 2766 0104 3B       		.uleb128 0x3b
 2767 0105 05       		.uleb128 0x5
 2768 0106 27       		.uleb128 0x27
 2769 0107 19       		.uleb128 0x19
 2770 0108 11       		.uleb128 0x11
 2771 0109 01       		.uleb128 0x1
 2772 010a 12       		.uleb128 0x12
 2773 010b 06       		.uleb128 0x6
 2774 010c 40       		.uleb128 0x40
 2775 010d 18       		.uleb128 0x18
 2776 010e 9742     		.uleb128 0x2117
 2777 0110 19       		.uleb128 0x19
 2778 0111 01       		.uleb128 0x1
 2779 0112 13       		.uleb128 0x13
 2780 0113 00       		.byte	0
 2781 0114 00       		.byte	0
 2782 0115 15       		.uleb128 0x15
 2783 0116 05       		.uleb128 0x5
 2784 0117 00       		.byte	0
 2785 0118 03       		.uleb128 0x3
 2786 0119 0E       		.uleb128 0xe
 2787 011a 3A       		.uleb128 0x3a
 2788 011b 0B       		.uleb128 0xb
 2789 011c 3B       		.uleb128 0x3b
 2790 011d 05       		.uleb128 0x5
 2791 011e 49       		.uleb128 0x49
 2792 011f 13       		.uleb128 0x13
 2793 0120 02       		.uleb128 0x2
 2794 0121 17       		.uleb128 0x17
 2795 0122 00       		.byte	0
 2796 0123 00       		.byte	0
 2797 0124 16       		.uleb128 0x16
 2798 0125 34       		.uleb128 0x34
 2799 0126 00       		.byte	0
 2800 0127 03       		.uleb128 0x3
 2801 0128 08       		.uleb128 0x8
 2802 0129 3A       		.uleb128 0x3a
 2803 012a 0B       		.uleb128 0xb
 2804 012b 3B       		.uleb128 0x3b
 2805 012c 05       		.uleb128 0x5
 2806 012d 49       		.uleb128 0x49
 2807 012e 13       		.uleb128 0x13
 2808 012f 02       		.uleb128 0x2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 95


 2809 0130 17       		.uleb128 0x17
 2810 0131 00       		.byte	0
 2811 0132 00       		.byte	0
 2812 0133 17       		.uleb128 0x17
 2813 0134 05       		.uleb128 0x5
 2814 0135 00       		.byte	0
 2815 0136 03       		.uleb128 0x3
 2816 0137 0E       		.uleb128 0xe
 2817 0138 3A       		.uleb128 0x3a
 2818 0139 0B       		.uleb128 0xb
 2819 013a 3B       		.uleb128 0x3b
 2820 013b 0B       		.uleb128 0xb
 2821 013c 49       		.uleb128 0x49
 2822 013d 13       		.uleb128 0x13
 2823 013e 02       		.uleb128 0x2
 2824 013f 17       		.uleb128 0x17
 2825 0140 00       		.byte	0
 2826 0141 00       		.byte	0
 2827 0142 18       		.uleb128 0x18
 2828 0143 34       		.uleb128 0x34
 2829 0144 00       		.byte	0
 2830 0145 03       		.uleb128 0x3
 2831 0146 0E       		.uleb128 0xe
 2832 0147 3A       		.uleb128 0x3a
 2833 0148 0B       		.uleb128 0xb
 2834 0149 3B       		.uleb128 0x3b
 2835 014a 05       		.uleb128 0x5
 2836 014b 49       		.uleb128 0x49
 2837 014c 13       		.uleb128 0x13
 2838 014d 02       		.uleb128 0x2
 2839 014e 17       		.uleb128 0x17
 2840 014f 00       		.byte	0
 2841 0150 00       		.byte	0
 2842 0151 19       		.uleb128 0x19
 2843 0152 2E       		.uleb128 0x2e
 2844 0153 01       		.byte	0x1
 2845 0154 3F       		.uleb128 0x3f
 2846 0155 19       		.uleb128 0x19
 2847 0156 03       		.uleb128 0x3
 2848 0157 0E       		.uleb128 0xe
 2849 0158 3A       		.uleb128 0x3a
 2850 0159 0B       		.uleb128 0xb
 2851 015a 3B       		.uleb128 0x3b
 2852 015b 05       		.uleb128 0x5
 2853 015c 27       		.uleb128 0x27
 2854 015d 19       		.uleb128 0x19
 2855 015e 49       		.uleb128 0x49
 2856 015f 13       		.uleb128 0x13
 2857 0160 11       		.uleb128 0x11
 2858 0161 01       		.uleb128 0x1
 2859 0162 12       		.uleb128 0x12
 2860 0163 06       		.uleb128 0x6
 2861 0164 40       		.uleb128 0x40
 2862 0165 18       		.uleb128 0x18
 2863 0166 9742     		.uleb128 0x2117
 2864 0168 19       		.uleb128 0x19
 2865 0169 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 96


 2866 016a 13       		.uleb128 0x13
 2867 016b 00       		.byte	0
 2868 016c 00       		.byte	0
 2869 016d 1A       		.uleb128 0x1a
 2870 016e 2E       		.uleb128 0x2e
 2871 016f 00       		.byte	0
 2872 0170 3F       		.uleb128 0x3f
 2873 0171 19       		.uleb128 0x19
 2874 0172 03       		.uleb128 0x3
 2875 0173 0E       		.uleb128 0xe
 2876 0174 3A       		.uleb128 0x3a
 2877 0175 0B       		.uleb128 0xb
 2878 0176 3B       		.uleb128 0x3b
 2879 0177 05       		.uleb128 0x5
 2880 0178 27       		.uleb128 0x27
 2881 0179 19       		.uleb128 0x19
 2882 017a 49       		.uleb128 0x49
 2883 017b 13       		.uleb128 0x13
 2884 017c 11       		.uleb128 0x11
 2885 017d 01       		.uleb128 0x1
 2886 017e 12       		.uleb128 0x12
 2887 017f 06       		.uleb128 0x6
 2888 0180 40       		.uleb128 0x40
 2889 0181 18       		.uleb128 0x18
 2890 0182 9742     		.uleb128 0x2117
 2891 0184 19       		.uleb128 0x19
 2892 0185 00       		.byte	0
 2893 0186 00       		.byte	0
 2894 0187 1B       		.uleb128 0x1b
 2895 0188 05       		.uleb128 0x5
 2896 0189 00       		.byte	0
 2897 018a 03       		.uleb128 0x3
 2898 018b 0E       		.uleb128 0xe
 2899 018c 3A       		.uleb128 0x3a
 2900 018d 0B       		.uleb128 0xb
 2901 018e 3B       		.uleb128 0x3b
 2902 018f 05       		.uleb128 0x5
 2903 0190 49       		.uleb128 0x49
 2904 0191 13       		.uleb128 0x13
 2905 0192 02       		.uleb128 0x2
 2906 0193 18       		.uleb128 0x18
 2907 0194 00       		.byte	0
 2908 0195 00       		.byte	0
 2909 0196 1C       		.uleb128 0x1c
 2910 0197 0B       		.uleb128 0xb
 2911 0198 01       		.byte	0x1
 2912 0199 55       		.uleb128 0x55
 2913 019a 17       		.uleb128 0x17
 2914 019b 00       		.byte	0
 2915 019c 00       		.byte	0
 2916 019d 1D       		.uleb128 0x1d
 2917 019e 0F       		.uleb128 0xf
 2918 019f 00       		.byte	0
 2919 01a0 0B       		.uleb128 0xb
 2920 01a1 0B       		.uleb128 0xb
 2921 01a2 49       		.uleb128 0x49
 2922 01a3 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 97


 2923 01a4 00       		.byte	0
 2924 01a5 00       		.byte	0
 2925 01a6 1E       		.uleb128 0x1e
 2926 01a7 26       		.uleb128 0x26
 2927 01a8 00       		.byte	0
 2928 01a9 49       		.uleb128 0x49
 2929 01aa 13       		.uleb128 0x13
 2930 01ab 00       		.byte	0
 2931 01ac 00       		.byte	0
 2932 01ad 1F       		.uleb128 0x1f
 2933 01ae 0B       		.uleb128 0xb
 2934 01af 01       		.byte	0x1
 2935 01b0 11       		.uleb128 0x11
 2936 01b1 01       		.uleb128 0x1
 2937 01b2 12       		.uleb128 0x12
 2938 01b3 06       		.uleb128 0x6
 2939 01b4 01       		.uleb128 0x1
 2940 01b5 13       		.uleb128 0x13
 2941 01b6 00       		.byte	0
 2942 01b7 00       		.byte	0
 2943 01b8 20       		.uleb128 0x20
 2944 01b9 2E       		.uleb128 0x2e
 2945 01ba 00       		.byte	0
 2946 01bb 3F       		.uleb128 0x3f
 2947 01bc 19       		.uleb128 0x19
 2948 01bd 03       		.uleb128 0x3
 2949 01be 0E       		.uleb128 0xe
 2950 01bf 3A       		.uleb128 0x3a
 2951 01c0 0B       		.uleb128 0xb
 2952 01c1 3B       		.uleb128 0x3b
 2953 01c2 05       		.uleb128 0x5
 2954 01c3 27       		.uleb128 0x27
 2955 01c4 19       		.uleb128 0x19
 2956 01c5 11       		.uleb128 0x11
 2957 01c6 01       		.uleb128 0x1
 2958 01c7 12       		.uleb128 0x12
 2959 01c8 06       		.uleb128 0x6
 2960 01c9 40       		.uleb128 0x40
 2961 01ca 18       		.uleb128 0x18
 2962 01cb 9742     		.uleb128 0x2117
 2963 01cd 19       		.uleb128 0x19
 2964 01ce 00       		.byte	0
 2965 01cf 00       		.byte	0
 2966 01d0 21       		.uleb128 0x21
 2967 01d1 34       		.uleb128 0x34
 2968 01d2 00       		.byte	0
 2969 01d3 03       		.uleb128 0x3
 2970 01d4 0E       		.uleb128 0xe
 2971 01d5 3A       		.uleb128 0x3a
 2972 01d6 0B       		.uleb128 0xb
 2973 01d7 3B       		.uleb128 0x3b
 2974 01d8 0B       		.uleb128 0xb
 2975 01d9 49       		.uleb128 0x49
 2976 01da 13       		.uleb128 0x13
 2977 01db 3F       		.uleb128 0x3f
 2978 01dc 19       		.uleb128 0x19
 2979 01dd 02       		.uleb128 0x2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 98


 2980 01de 18       		.uleb128 0x18
 2981 01df 00       		.byte	0
 2982 01e0 00       		.byte	0
 2983 01e1 22       		.uleb128 0x22
 2984 01e2 34       		.uleb128 0x34
 2985 01e3 00       		.byte	0
 2986 01e4 03       		.uleb128 0x3
 2987 01e5 0E       		.uleb128 0xe
 2988 01e6 3A       		.uleb128 0x3a
 2989 01e7 0B       		.uleb128 0xb
 2990 01e8 3B       		.uleb128 0x3b
 2991 01e9 05       		.uleb128 0x5
 2992 01ea 49       		.uleb128 0x49
 2993 01eb 13       		.uleb128 0x13
 2994 01ec 3F       		.uleb128 0x3f
 2995 01ed 19       		.uleb128 0x19
 2996 01ee 3C       		.uleb128 0x3c
 2997 01ef 19       		.uleb128 0x19
 2998 01f0 00       		.byte	0
 2999 01f1 00       		.byte	0
 3000 01f2 23       		.uleb128 0x23
 3001 01f3 34       		.uleb128 0x34
 3002 01f4 00       		.byte	0
 3003 01f5 03       		.uleb128 0x3
 3004 01f6 0E       		.uleb128 0xe
 3005 01f7 3A       		.uleb128 0x3a
 3006 01f8 0B       		.uleb128 0xb
 3007 01f9 3B       		.uleb128 0x3b
 3008 01fa 0B       		.uleb128 0xb
 3009 01fb 49       		.uleb128 0x49
 3010 01fc 13       		.uleb128 0x13
 3011 01fd 3F       		.uleb128 0x3f
 3012 01fe 19       		.uleb128 0x19
 3013 01ff 3C       		.uleb128 0x3c
 3014 0200 19       		.uleb128 0x19
 3015 0201 00       		.byte	0
 3016 0202 00       		.byte	0
 3017 0203 24       		.uleb128 0x24
 3018 0204 2E       		.uleb128 0x2e
 3019 0205 00       		.byte	0
 3020 0206 3F       		.uleb128 0x3f
 3021 0207 19       		.uleb128 0x19
 3022 0208 3C       		.uleb128 0x3c
 3023 0209 19       		.uleb128 0x19
 3024 020a 6E       		.uleb128 0x6e
 3025 020b 0E       		.uleb128 0xe
 3026 020c 03       		.uleb128 0x3
 3027 020d 0E       		.uleb128 0xe
 3028 020e 3A       		.uleb128 0x3a
 3029 020f 0B       		.uleb128 0xb
 3030 0210 3B       		.uleb128 0x3b
 3031 0211 0B       		.uleb128 0xb
 3032 0212 00       		.byte	0
 3033 0213 00       		.byte	0
 3034 0214 00       		.byte	0
 3035              		.section	.debug_loc,"",%progbits
 3036              	.Ldebug_loc0:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 99


 3037              	.LLST0:
 3038 0000 08000000 		.4byte	.LVL1
 3039 0004 0A010000 		.4byte	.LVL21
 3040 0008 0100     		.2byte	0x1
 3041 000a 57       		.byte	0x57
 3042 000b 00000000 		.4byte	0
 3043 000f 00000000 		.4byte	0
 3044              	.LLST1:
 3045 0013 00000000 		.4byte	.LVL22
 3046 0017 8E000000 		.4byte	.LVL28
 3047 001b 0100     		.2byte	0x1
 3048 001d 50       		.byte	0x50
 3049 001e 8E000000 		.4byte	.LVL28
 3050 0022 D0000000 		.4byte	.LFE2
 3051 0026 0400     		.2byte	0x4
 3052 0028 F3       		.byte	0xf3
 3053 0029 01       		.uleb128 0x1
 3054 002a 50       		.byte	0x50
 3055 002b 9F       		.byte	0x9f
 3056 002c 00000000 		.4byte	0
 3057 0030 00000000 		.4byte	0
 3058              	.LLST2:
 3059 0034 00000000 		.4byte	.LVL22
 3060 0038 91000000 		.4byte	.LVL29-1
 3061 003c 0100     		.2byte	0x1
 3062 003e 51       		.byte	0x51
 3063 003f 91000000 		.4byte	.LVL29-1
 3064 0043 D0000000 		.4byte	.LFE2
 3065 0047 0400     		.2byte	0x4
 3066 0049 F3       		.byte	0xf3
 3067 004a 01       		.uleb128 0x1
 3068 004b 51       		.byte	0x51
 3069 004c 9F       		.byte	0x9f
 3070 004d 00000000 		.4byte	0
 3071 0051 00000000 		.4byte	0
 3072              	.LLST3:
 3073 0055 02000000 		.4byte	.LVL23
 3074 0059 06000000 		.4byte	.LVL24
 3075 005d 0200     		.2byte	0x2
 3076 005f 30       		.byte	0x30
 3077 0060 9F       		.byte	0x9f
 3078 0061 06000000 		.4byte	.LVL24
 3079 0065 0E000000 		.4byte	.LVL25
 3080 0069 0100     		.2byte	0x1
 3081 006b 53       		.byte	0x53
 3082 006c 10000000 		.4byte	.LVL26
 3083 0070 16000000 		.4byte	.LVL27
 3084 0074 0100     		.2byte	0x1
 3085 0076 53       		.byte	0x53
 3086 0077 00000000 		.4byte	0
 3087 007b 00000000 		.4byte	0
 3088              	.LLST4:
 3089 007f 00000000 		.4byte	.LVL30
 3090 0083 0F000000 		.4byte	.LVL31-1
 3091 0087 0100     		.2byte	0x1
 3092 0089 50       		.byte	0x50
 3093 008a 0F000000 		.4byte	.LVL31-1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 100


 3094 008e 24000000 		.4byte	.LFE0
 3095 0092 0400     		.2byte	0x4
 3096 0094 F3       		.byte	0xf3
 3097 0095 01       		.uleb128 0x1
 3098 0096 50       		.byte	0x50
 3099 0097 9F       		.byte	0x9f
 3100 0098 00000000 		.4byte	0
 3101 009c 00000000 		.4byte	0
 3102              	.LLST5:
 3103 00a0 00000000 		.4byte	.LVL30
 3104 00a4 0F000000 		.4byte	.LVL31-1
 3105 00a8 0100     		.2byte	0x1
 3106 00aa 51       		.byte	0x51
 3107 00ab 0F000000 		.4byte	.LVL31-1
 3108 00af 24000000 		.4byte	.LFE0
 3109 00b3 0400     		.2byte	0x4
 3110 00b5 F3       		.byte	0xf3
 3111 00b6 01       		.uleb128 0x1
 3112 00b7 51       		.byte	0x51
 3113 00b8 9F       		.byte	0x9f
 3114 00b9 00000000 		.4byte	0
 3115 00bd 00000000 		.4byte	0
 3116              	.LLST6:
 3117 00c1 00000000 		.4byte	.LVL33
 3118 00c5 04000000 		.4byte	.LVL34
 3119 00c9 0200     		.2byte	0x2
 3120 00cb 30       		.byte	0x30
 3121 00cc 9F       		.byte	0x9f
 3122 00cd 04000000 		.4byte	.LVL34
 3123 00d1 0C000000 		.4byte	.LVL35
 3124 00d5 0100     		.2byte	0x1
 3125 00d7 53       		.byte	0x53
 3126 00d8 0E000000 		.4byte	.LVL36
 3127 00dc 14000000 		.4byte	.LVL37
 3128 00e0 0100     		.2byte	0x1
 3129 00e2 53       		.byte	0x53
 3130 00e3 00000000 		.4byte	0
 3131 00e7 00000000 		.4byte	0
 3132              	.LLST7:
 3133 00eb 06000000 		.4byte	.LVL38
 3134 00ef 47000000 		.4byte	.LVL39-1
 3135 00f3 0100     		.2byte	0x1
 3136 00f5 50       		.byte	0x50
 3137 00f6 00000000 		.4byte	0
 3138 00fa 00000000 		.4byte	0
 3139              	.LLST8:
 3140 00fe 06000000 		.4byte	.LVL41
 3141 0102 10000000 		.4byte	.LVL42
 3142 0106 0100     		.2byte	0x1
 3143 0108 53       		.byte	0x53
 3144 0109 00000000 		.4byte	0
 3145 010d 00000000 		.4byte	0
 3146              	.LLST9:
 3147 0111 00000000 		.4byte	.LVL43
 3148 0115 10000000 		.4byte	.LVL44
 3149 0119 0200     		.2byte	0x2
 3150 011b 30       		.byte	0x30
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 101


 3151 011c 9F       		.byte	0x9f
 3152 011d 10000000 		.4byte	.LVL44
 3153 0121 16000000 		.4byte	.LVL45
 3154 0125 0100     		.2byte	0x1
 3155 0127 50       		.byte	0x50
 3156 0128 16000000 		.4byte	.LVL45
 3157 012c 18000000 		.4byte	.LVL46
 3158 0130 0200     		.2byte	0x2
 3159 0132 30       		.byte	0x30
 3160 0133 9F       		.byte	0x9f
 3161 0134 18000000 		.4byte	.LVL46
 3162 0138 20000000 		.4byte	.LFE7
 3163 013c 0100     		.2byte	0x1
 3164 013e 50       		.byte	0x50
 3165 013f 00000000 		.4byte	0
 3166 0143 00000000 		.4byte	0
 3167              	.LLST10:
 3168 0147 00000000 		.4byte	.LVL47
 3169 014b 04000000 		.4byte	.LVL48
 3170 014f 0100     		.2byte	0x1
 3171 0151 50       		.byte	0x50
 3172 0152 04000000 		.4byte	.LVL48
 3173 0156 0C000000 		.4byte	.LFE8
 3174 015a 0400     		.2byte	0x4
 3175 015c F3       		.byte	0xf3
 3176 015d 01       		.uleb128 0x1
 3177 015e 50       		.byte	0x50
 3178 015f 9F       		.byte	0x9f
 3179 0160 00000000 		.4byte	0
 3180 0164 00000000 		.4byte	0
 3181              	.LLST11:
 3182 0168 00000000 		.4byte	.LVL49
 3183 016c 04000000 		.4byte	.LVL50
 3184 0170 0100     		.2byte	0x1
 3185 0172 50       		.byte	0x50
 3186 0173 04000000 		.4byte	.LVL50
 3187 0177 14000000 		.4byte	.LFE9
 3188 017b 0400     		.2byte	0x4
 3189 017d F3       		.byte	0xf3
 3190 017e 01       		.uleb128 0x1
 3191 017f 50       		.byte	0x50
 3192 0180 9F       		.byte	0x9f
 3193 0181 00000000 		.4byte	0
 3194 0185 00000000 		.4byte	0
 3195              	.LLST12:
 3196 0189 00000000 		.4byte	.LVL51
 3197 018d 0C000000 		.4byte	.LVL52
 3198 0191 0100     		.2byte	0x1
 3199 0193 50       		.byte	0x50
 3200 0194 0C000000 		.4byte	.LVL52
 3201 0198 20000000 		.4byte	.LVL57
 3202 019c 0400     		.2byte	0x4
 3203 019e F3       		.byte	0xf3
 3204 019f 01       		.uleb128 0x1
 3205 01a0 50       		.byte	0x50
 3206 01a1 9F       		.byte	0x9f
 3207 01a2 20000000 		.4byte	.LVL57
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 102


 3208 01a6 22000000 		.4byte	.LVL58
 3209 01aa 0100     		.2byte	0x1
 3210 01ac 50       		.byte	0x50
 3211 01ad 22000000 		.4byte	.LVL58
 3212 01b1 28000000 		.4byte	.LFE10
 3213 01b5 0400     		.2byte	0x4
 3214 01b7 F3       		.byte	0xf3
 3215 01b8 01       		.uleb128 0x1
 3216 01b9 50       		.byte	0x50
 3217 01ba 9F       		.byte	0x9f
 3218 01bb 00000000 		.4byte	0
 3219 01bf 00000000 		.4byte	0
 3220              	.LLST13:
 3221 01c3 00000000 		.4byte	.LVL51
 3222 01c7 14000000 		.4byte	.LVL53
 3223 01cb 0200     		.2byte	0x2
 3224 01cd 30       		.byte	0x30
 3225 01ce 9F       		.byte	0x9f
 3226 01cf 14000000 		.4byte	.LVL53
 3227 01d3 1C000000 		.4byte	.LVL55
 3228 01d7 0100     		.2byte	0x1
 3229 01d9 50       		.byte	0x50
 3230 01da 1C000000 		.4byte	.LVL55
 3231 01de 1E000000 		.4byte	.LVL56
 3232 01e2 0300     		.2byte	0x3
 3233 01e4 70       		.byte	0x70
 3234 01e5 02       		.sleb128 2
 3235 01e6 9F       		.byte	0x9f
 3236 01e7 1E000000 		.4byte	.LVL56
 3237 01eb 20000000 		.4byte	.LVL57
 3238 01ef 0100     		.2byte	0x1
 3239 01f1 50       		.byte	0x50
 3240 01f2 20000000 		.4byte	.LVL57
 3241 01f6 22000000 		.4byte	.LVL58
 3242 01fa 0200     		.2byte	0x2
 3243 01fc 30       		.byte	0x30
 3244 01fd 9F       		.byte	0x9f
 3245 01fe 22000000 		.4byte	.LVL58
 3246 0202 28000000 		.4byte	.LFE10
 3247 0206 0100     		.2byte	0x1
 3248 0208 50       		.byte	0x50
 3249 0209 00000000 		.4byte	0
 3250 020d 00000000 		.4byte	0
 3251              	.LLST14:
 3252 0211 00000000 		.4byte	.LVL59
 3253 0215 7C000000 		.4byte	.LVL69
 3254 0219 0100     		.2byte	0x1
 3255 021b 50       		.byte	0x50
 3256 021c 7C000000 		.4byte	.LVL69
 3257 0220 94000000 		.4byte	.LFE11
 3258 0224 0400     		.2byte	0x4
 3259 0226 F3       		.byte	0xf3
 3260 0227 01       		.uleb128 0x1
 3261 0228 50       		.byte	0x50
 3262 0229 9F       		.byte	0x9f
 3263 022a 00000000 		.4byte	0
 3264 022e 00000000 		.4byte	0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 103


 3265              	.LLST15:
 3266 0232 00000000 		.4byte	.LVL59
 3267 0236 26000000 		.4byte	.LVL60
 3268 023a 0100     		.2byte	0x1
 3269 023c 52       		.byte	0x52
 3270 023d 26000000 		.4byte	.LVL60
 3271 0241 34000000 		.4byte	.LVL61
 3272 0245 0400     		.2byte	0x4
 3273 0247 F3       		.byte	0xf3
 3274 0248 01       		.uleb128 0x1
 3275 0249 52       		.byte	0x52
 3276 024a 9F       		.byte	0x9f
 3277 024b 34000000 		.4byte	.LVL61
 3278 024f 6A000000 		.4byte	.LVL68
 3279 0253 0100     		.2byte	0x1
 3280 0255 52       		.byte	0x52
 3281 0256 00000000 		.4byte	0
 3282 025a 00000000 		.4byte	0
 3283              	.LLST16:
 3284 025e 54000000 		.4byte	.LVL62
 3285 0262 5E000000 		.4byte	.LVL63
 3286 0266 0100     		.2byte	0x1
 3287 0268 53       		.byte	0x53
 3288 0269 60000000 		.4byte	.LVL64
 3289 026d 62000000 		.4byte	.LVL65
 3290 0271 0100     		.2byte	0x1
 3291 0273 53       		.byte	0x53
 3292 0274 64000000 		.4byte	.LVL66
 3293 0278 68000000 		.4byte	.LVL67
 3294 027c 0100     		.2byte	0x1
 3295 027e 53       		.byte	0x53
 3296 027f 00000000 		.4byte	0
 3297 0283 00000000 		.4byte	0
 3298              	.LLST17:
 3299 0287 00000000 		.4byte	.LVL70
 3300 028b 1C000000 		.4byte	.LVL71
 3301 028f 0100     		.2byte	0x1
 3302 0291 50       		.byte	0x50
 3303 0292 1C000000 		.4byte	.LVL71
 3304 0296 2C000000 		.4byte	.LFE13
 3305 029a 0400     		.2byte	0x4
 3306 029c F3       		.byte	0xf3
 3307 029d 01       		.uleb128 0x1
 3308 029e 50       		.byte	0x50
 3309 029f 9F       		.byte	0x9f
 3310 02a0 00000000 		.4byte	0
 3311 02a4 00000000 		.4byte	0
 3312              	.LLST18:
 3313 02a8 00000000 		.4byte	.LVL72
 3314 02ac 13000000 		.4byte	.LVL73-1
 3315 02b0 0100     		.2byte	0x1
 3316 02b2 50       		.byte	0x50
 3317 02b3 13000000 		.4byte	.LVL73-1
 3318 02b7 3C000000 		.4byte	.LVL80
 3319 02bb 0400     		.2byte	0x4
 3320 02bd F3       		.byte	0xf3
 3321 02be 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 104


 3322 02bf 50       		.byte	0x50
 3323 02c0 9F       		.byte	0x9f
 3324 02c1 3C000000 		.4byte	.LVL80
 3325 02c5 46000000 		.4byte	.LVL81
 3326 02c9 0100     		.2byte	0x1
 3327 02cb 50       		.byte	0x50
 3328 02cc 46000000 		.4byte	.LVL81
 3329 02d0 50000000 		.4byte	.LFE12
 3330 02d4 0400     		.2byte	0x4
 3331 02d6 F3       		.byte	0xf3
 3332 02d7 01       		.uleb128 0x1
 3333 02d8 50       		.byte	0x50
 3334 02d9 9F       		.byte	0x9f
 3335 02da 00000000 		.4byte	0
 3336 02de 00000000 		.4byte	0
 3337              	.LLST19:
 3338 02e2 00000000 		.4byte	.LVL72
 3339 02e6 13000000 		.4byte	.LVL73-1
 3340 02ea 0100     		.2byte	0x1
 3341 02ec 51       		.byte	0x51
 3342 02ed 13000000 		.4byte	.LVL73-1
 3343 02f1 3C000000 		.4byte	.LVL80
 3344 02f5 0100     		.2byte	0x1
 3345 02f7 56       		.byte	0x56
 3346 02f8 3C000000 		.4byte	.LVL80
 3347 02fc 46000000 		.4byte	.LVL81
 3348 0300 0100     		.2byte	0x1
 3349 0302 51       		.byte	0x51
 3350 0303 46000000 		.4byte	.LVL81
 3351 0307 50000000 		.4byte	.LFE12
 3352 030b 0400     		.2byte	0x4
 3353 030d F3       		.byte	0xf3
 3354 030e 01       		.uleb128 0x1
 3355 030f 51       		.byte	0x51
 3356 0310 9F       		.byte	0x9f
 3357 0311 00000000 		.4byte	0
 3358 0315 00000000 		.4byte	0
 3359              	.LLST20:
 3360 0319 00000000 		.4byte	.LVL72
 3361 031d 13000000 		.4byte	.LVL73-1
 3362 0321 0100     		.2byte	0x1
 3363 0323 52       		.byte	0x52
 3364 0324 13000000 		.4byte	.LVL73-1
 3365 0328 20000000 		.4byte	.LVL75
 3366 032c 0400     		.2byte	0x4
 3367 032e F3       		.byte	0xf3
 3368 032f 01       		.uleb128 0x1
 3369 0330 52       		.byte	0x52
 3370 0331 9F       		.byte	0x9f
 3371 0332 20000000 		.4byte	.LVL75
 3372 0336 3C000000 		.4byte	.LVL80
 3373 033a 0100     		.2byte	0x1
 3374 033c 54       		.byte	0x54
 3375 033d 3C000000 		.4byte	.LVL80
 3376 0341 46000000 		.4byte	.LVL81
 3377 0345 0100     		.2byte	0x1
 3378 0347 52       		.byte	0x52
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 105


 3379 0348 46000000 		.4byte	.LVL81
 3380 034c 4A000000 		.4byte	.LVL82
 3381 0350 0100     		.2byte	0x1
 3382 0352 54       		.byte	0x54
 3383 0353 00000000 		.4byte	0
 3384 0357 00000000 		.4byte	0
 3385              	.LLST21:
 3386 035b 20000000 		.4byte	.LVL75
 3387 035f 24000000 		.4byte	.LVL76
 3388 0363 0200     		.2byte	0x2
 3389 0365 30       		.byte	0x30
 3390 0366 9F       		.byte	0x9f
 3391 0367 24000000 		.4byte	.LVL76
 3392 036b 2E000000 		.4byte	.LVL77
 3393 036f 0100     		.2byte	0x1
 3394 0371 53       		.byte	0x53
 3395 0372 30000000 		.4byte	.LVL78
 3396 0376 39000000 		.4byte	.LVL79-1
 3397 037a 0100     		.2byte	0x1
 3398 037c 53       		.byte	0x53
 3399 037d 00000000 		.4byte	0
 3400 0381 00000000 		.4byte	0
 3401              	.LLST22:
 3402 0385 00000000 		.4byte	.LVL83
 3403 0389 0A000000 		.4byte	.LVL84
 3404 038d 0100     		.2byte	0x1
 3405 038f 50       		.byte	0x50
 3406 0390 0A000000 		.4byte	.LVL84
 3407 0394 18000000 		.4byte	.LFE14
 3408 0398 0400     		.2byte	0x4
 3409 039a F3       		.byte	0xf3
 3410 039b 01       		.uleb128 0x1
 3411 039c 50       		.byte	0x50
 3412 039d 9F       		.byte	0x9f
 3413 039e 00000000 		.4byte	0
 3414 03a2 00000000 		.4byte	0
 3415              	.LLST23:
 3416 03a6 00000000 		.4byte	.LVL86
 3417 03aa 0A000000 		.4byte	.LVL87
 3418 03ae 0100     		.2byte	0x1
 3419 03b0 50       		.byte	0x50
 3420 03b1 0A000000 		.4byte	.LVL87
 3421 03b5 16000000 		.4byte	.LVL89
 3422 03b9 0400     		.2byte	0x4
 3423 03bb F3       		.byte	0xf3
 3424 03bc 01       		.uleb128 0x1
 3425 03bd 50       		.byte	0x50
 3426 03be 9F       		.byte	0x9f
 3427 03bf 16000000 		.4byte	.LVL89
 3428 03c3 18000000 		.4byte	.LVL90
 3429 03c7 0100     		.2byte	0x1
 3430 03c9 50       		.byte	0x50
 3431 03ca 18000000 		.4byte	.LVL90
 3432 03ce 20000000 		.4byte	.LFE16
 3433 03d2 0400     		.2byte	0x4
 3434 03d4 F3       		.byte	0xf3
 3435 03d5 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 106


 3436 03d6 50       		.byte	0x50
 3437 03d7 9F       		.byte	0x9f
 3438 03d8 00000000 		.4byte	0
 3439 03dc 00000000 		.4byte	0
 3440              	.LLST24:
 3441 03e0 00000000 		.4byte	.LVL86
 3442 03e4 14000000 		.4byte	.LVL88
 3443 03e8 0200     		.2byte	0x2
 3444 03ea 30       		.byte	0x30
 3445 03eb 9F       		.byte	0x9f
 3446 03ec 14000000 		.4byte	.LVL88
 3447 03f0 16000000 		.4byte	.LVL89
 3448 03f4 0100     		.2byte	0x1
 3449 03f6 50       		.byte	0x50
 3450 03f7 16000000 		.4byte	.LVL89
 3451 03fb 18000000 		.4byte	.LVL90
 3452 03ff 0200     		.2byte	0x2
 3453 0401 30       		.byte	0x30
 3454 0402 9F       		.byte	0x9f
 3455 0403 18000000 		.4byte	.LVL90
 3456 0407 20000000 		.4byte	.LFE16
 3457 040b 0100     		.2byte	0x1
 3458 040d 50       		.byte	0x50
 3459 040e 00000000 		.4byte	0
 3460 0412 00000000 		.4byte	0
 3461              	.LLST25:
 3462 0416 00000000 		.4byte	.LVL92
 3463 041a 10000000 		.4byte	.LVL93
 3464 041e 0200     		.2byte	0x2
 3465 0420 30       		.byte	0x30
 3466 0421 9F       		.byte	0x9f
 3467 0422 10000000 		.4byte	.LVL93
 3468 0426 18000000 		.4byte	.LFE18
 3469 042a 0100     		.2byte	0x1
 3470 042c 50       		.byte	0x50
 3471 042d 00000000 		.4byte	0
 3472 0431 00000000 		.4byte	0
 3473              		.section	.debug_aranges,"",%progbits
 3474 0000 C4000000 		.4byte	0xc4
 3475 0004 0200     		.2byte	0x2
 3476 0006 00000000 		.4byte	.Ldebug_info0
 3477 000a 04       		.byte	0x4
 3478 000b 00       		.byte	0
 3479 000c 0000     		.2byte	0
 3480 000e 0000     		.2byte	0
 3481 0010 00000000 		.4byte	.LFB1
 3482 0014 40010000 		.4byte	.LFE1-.LFB1
 3483 0018 00000000 		.4byte	.LFB2
 3484 001c D0000000 		.4byte	.LFE2-.LFB2
 3485 0020 00000000 		.4byte	.LFB0
 3486 0024 24000000 		.4byte	.LFE0-.LFB0
 3487 0028 00000000 		.4byte	.LFB3
 3488 002c 64000000 		.4byte	.LFE3-.LFB3
 3489 0030 00000000 		.4byte	.LFB4
 3490 0034 B8000000 		.4byte	.LFE4-.LFB4
 3491 0038 00000000 		.4byte	.LFB5
 3492 003c 20000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 107


 3493 0040 00000000 		.4byte	.LFB6
 3494 0044 0C000000 		.4byte	.LFE6-.LFB6
 3495 0048 00000000 		.4byte	.LFB7
 3496 004c 20000000 		.4byte	.LFE7-.LFB7
 3497 0050 00000000 		.4byte	.LFB8
 3498 0054 0C000000 		.4byte	.LFE8-.LFB8
 3499 0058 00000000 		.4byte	.LFB9
 3500 005c 14000000 		.4byte	.LFE9-.LFB9
 3501 0060 00000000 		.4byte	.LFB10
 3502 0064 28000000 		.4byte	.LFE10-.LFB10
 3503 0068 00000000 		.4byte	.LFB11
 3504 006c 94000000 		.4byte	.LFE11-.LFB11
 3505 0070 00000000 		.4byte	.LFB13
 3506 0074 2C000000 		.4byte	.LFE13-.LFB13
 3507 0078 00000000 		.4byte	.LFB12
 3508 007c 50000000 		.4byte	.LFE12-.LFB12
 3509 0080 00000000 		.4byte	.LFB14
 3510 0084 18000000 		.4byte	.LFE14-.LFB14
 3511 0088 00000000 		.4byte	.LFB15
 3512 008c 0C000000 		.4byte	.LFE15-.LFB15
 3513 0090 00000000 		.4byte	.LFB16
 3514 0094 20000000 		.4byte	.LFE16-.LFB16
 3515 0098 00000000 		.4byte	.LFB17
 3516 009c 20000000 		.4byte	.LFE17-.LFB17
 3517 00a0 00000000 		.4byte	.LFB18
 3518 00a4 18000000 		.4byte	.LFE18-.LFB18
 3519 00a8 00000000 		.4byte	.LFB19
 3520 00ac 10000000 		.4byte	.LFE19-.LFB19
 3521 00b0 00000000 		.4byte	.LFB20
 3522 00b4 10000000 		.4byte	.LFE20-.LFB20
 3523 00b8 00000000 		.4byte	.LFB21
 3524 00bc 10000000 		.4byte	.LFE21-.LFB21
 3525 00c0 00000000 		.4byte	0
 3526 00c4 00000000 		.4byte	0
 3527              		.section	.debug_ranges,"",%progbits
 3528              	.Ldebug_ranges0:
 3529 0000 52000000 		.4byte	.LBB2
 3530 0004 62000000 		.4byte	.LBE2
 3531 0008 64000000 		.4byte	.LBB3
 3532 000c 68000000 		.4byte	.LBE3
 3533 0010 00000000 		.4byte	0
 3534 0014 00000000 		.4byte	0
 3535 0018 00000000 		.4byte	.LFB1
 3536 001c 40010000 		.4byte	.LFE1
 3537 0020 00000000 		.4byte	.LFB2
 3538 0024 D0000000 		.4byte	.LFE2
 3539 0028 00000000 		.4byte	.LFB0
 3540 002c 24000000 		.4byte	.LFE0
 3541 0030 00000000 		.4byte	.LFB3
 3542 0034 64000000 		.4byte	.LFE3
 3543 0038 00000000 		.4byte	.LFB4
 3544 003c B8000000 		.4byte	.LFE4
 3545 0040 00000000 		.4byte	.LFB5
 3546 0044 20000000 		.4byte	.LFE5
 3547 0048 00000000 		.4byte	.LFB6
 3548 004c 0C000000 		.4byte	.LFE6
 3549 0050 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 108


 3550 0054 20000000 		.4byte	.LFE7
 3551 0058 00000000 		.4byte	.LFB8
 3552 005c 0C000000 		.4byte	.LFE8
 3553 0060 00000000 		.4byte	.LFB9
 3554 0064 14000000 		.4byte	.LFE9
 3555 0068 00000000 		.4byte	.LFB10
 3556 006c 28000000 		.4byte	.LFE10
 3557 0070 00000000 		.4byte	.LFB11
 3558 0074 94000000 		.4byte	.LFE11
 3559 0078 00000000 		.4byte	.LFB13
 3560 007c 2C000000 		.4byte	.LFE13
 3561 0080 00000000 		.4byte	.LFB12
 3562 0084 50000000 		.4byte	.LFE12
 3563 0088 00000000 		.4byte	.LFB14
 3564 008c 18000000 		.4byte	.LFE14
 3565 0090 00000000 		.4byte	.LFB15
 3566 0094 0C000000 		.4byte	.LFE15
 3567 0098 00000000 		.4byte	.LFB16
 3568 009c 20000000 		.4byte	.LFE16
 3569 00a0 00000000 		.4byte	.LFB17
 3570 00a4 20000000 		.4byte	.LFE17
 3571 00a8 00000000 		.4byte	.LFB18
 3572 00ac 18000000 		.4byte	.LFE18
 3573 00b0 00000000 		.4byte	.LFB19
 3574 00b4 10000000 		.4byte	.LFE19
 3575 00b8 00000000 		.4byte	.LFB20
 3576 00bc 10000000 		.4byte	.LFE20
 3577 00c0 00000000 		.4byte	.LFB21
 3578 00c4 10000000 		.4byte	.LFE21
 3579 00c8 00000000 		.4byte	0
 3580 00cc 00000000 		.4byte	0
 3581              		.section	.debug_line,"",%progbits
 3582              	.Ldebug_line0:
 3583 0000 F8020000 		.section	.debug_str,"MS",%progbits,1
 3583      02007D00 
 3583      00000201 
 3583      FB0E0D00 
 3583      01010101 
 3584              	.LASF22:
 3585 0000 6570546F 		.ascii	"epToggle\000"
 3585      67676C65 
 3585      00
 3586              	.LASF59:
 3587 0009 696E7465 		.ascii	"interfaceNumber\000"
 3587      72666163 
 3587      654E756D 
 3587      62657200 
 3588              	.LASF76:
 3589 0019 72657375 		.ascii	"result\000"
 3589      6C7400
 3590              	.LASF63:
 3591 0020 636E7472 		.ascii	"cntr\000"
 3591      00
 3592              	.LASF57:
 3593 0025 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3593      4152545F 
 3593      4973436F 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 109


 3593      6E666967 
 3593      75726174 
 3594              	.LASF84:
 3595 0044 55534255 		.ascii	"USBUART_configuration\000"
 3595      4152545F 
 3595      636F6E66 
 3595      69677572 
 3595      6174696F 
 3596              	.LASF86:
 3597 005a 55534255 		.ascii	"USBUART_deviceStatus\000"
 3597      4152545F 
 3597      64657669 
 3597      63655374 
 3597      61747573 
 3598              	.LASF95:
 3599 006f 43794578 		.ascii	"CyExitCriticalSection\000"
 3599      69744372 
 3599      69746963 
 3599      616C5365 
 3599      6374696F 
 3600              	.LASF65:
 3601 0085 70446174 		.ascii	"pData\000"
 3601      6100
 3602              	.LASF34:
 3603 008b 6570496E 		.ascii	"epIntEn\000"
 3603      74456E00 
 3604              	.LASF2:
 3605 0093 73686F72 		.ascii	"short int\000"
 3605      7420696E 
 3605      7400
 3606              	.LASF18:
 3607 009d 73697A65 		.ascii	"sizetype\000"
 3607      74797065 
 3607      00
 3608              	.LASF46:
 3609 00a6 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3609      4152545F 
 3609      6172625F 
 3609      6570735F 
 3609      73747275 
 3610              	.LASF24:
 3611 00bd 65704D6F 		.ascii	"epMode\000"
 3611      646500
 3612              	.LASF45:
 3613 00c4 61726245 		.ascii	"arbEp\000"
 3613      7000
 3614              	.LASF74:
 3615 00ca 706F7765 		.ascii	"powerStatus\000"
 3615      72537461 
 3615      74757300 
 3616              	.LASF17:
 3617 00d6 6C6F6E67 		.ascii	"long double\000"
 3617      20646F75 
 3617      626C6500 
 3618              	.LASF75:
 3619 00e2 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3619      4152545F 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 110


 3619      52575545 
 3619      6E61626C 
 3619      656400
 3620              	.LASF50:
 3621 00f5 6D6F6465 		.ascii	"mode\000"
 3621      00
 3622              	.LASF44:
 3623 00fa 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3623      4152545F 
 3623      7369655F 
 3623      6570735F 
 3623      73747275 
 3624              	.LASF79:
 3625 0111 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3625      4152545F 
 3625      456E6162 
 3625      6C65536F 
 3625      66496E74 
 3626              	.LASF52:
 3627 0126 55534255 		.ascii	"USBUART_Start\000"
 3627      4152545F 
 3627      53746172 
 3627      7400
 3628              	.LASF89:
 3629 0134 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3629      4152545F 
 3629      696E7465 
 3629      72666163 
 3629      65536574 
 3630              	.LASF10:
 3631 014d 75696E74 		.ascii	"uint16\000"
 3631      313600
 3632              	.LASF39:
 3633 0154 72775261 		.ascii	"rwRa\000"
 3633      00
 3634              	.LASF73:
 3635 0159 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3635      4152545F 
 3635      53657450 
 3635      6F776572 
 3635      53746174 
 3636              	.LASF32:
 3637 0170 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3637      4152545F 
 3637      7369655F 
 3637      65705F73 
 3637      74727563 
 3638              	.LASF96:
 3639 0186 4379496E 		.ascii	"CyIntSetPriority\000"
 3639      74536574 
 3639      5072696F 
 3639      72697479 
 3639      00
 3640              	.LASF43:
 3641 0197 73696545 		.ascii	"sieEp\000"
 3641      7000
 3642              	.LASF83:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 111


 3643 019d 55534255 		.ascii	"USBUART_transferState\000"
 3643      4152545F 
 3643      7472616E 
 3643      73666572 
 3643      53746174 
 3644              	.LASF66:
 3645 01b3 6C656E67 		.ascii	"length\000"
 3645      746800
 3646              	.LASF49:
 3647 01ba 64657669 		.ascii	"device\000"
 3647      636500
 3648              	.LASF12:
 3649 01c1 666C6F61 		.ascii	"float\000"
 3649      7400
 3650              	.LASF77:
 3651 01c7 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3651      4152545F 
 3651      47657443 
 3651      6F6E6669 
 3651      67757261 
 3652              	.LASF67:
 3653 01e0 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3653      4152545F 
 3653      456E6162 
 3653      6C654F75 
 3653      74455000 
 3654              	.LASF80:
 3655 01f4 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3655      4152545F 
 3655      44697361 
 3655      626C6553 
 3655      6F66496E 
 3656              	.LASF6:
 3657 020a 6C6F6E67 		.ascii	"long long int\000"
 3657      206C6F6E 
 3657      6720696E 
 3657      7400
 3658              	.LASF85:
 3659 0218 55534255 		.ascii	"USBUART_configurationChanged\000"
 3659      4152545F 
 3659      636F6E66 
 3659      69677572 
 3659      6174696F 
 3660              	.LASF31:
 3661 0235 65704372 		.ascii	"epCr0\000"
 3661      3000
 3662              	.LASF33:
 3663 023b 65704366 		.ascii	"epCfg\000"
 3663      6700
 3664              	.LASF101:
 3665 0241 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3665      72617465 
 3665      645F536F 
 3665      75726365 
 3665      5C50536F 
 3666              	.LASF82:
 3667 0262 55534255 		.ascii	"USBUART_device\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 112


 3667      4152545F 
 3667      64657669 
 3667      636500
 3668              	.LASF68:
 3669 0271 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3669      4152545F 
 3669      52656164 
 3669      4F757445 
 3669      5000
 3670              	.LASF72:
 3671 0283 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3671      4152545F 
 3671      47657445 
 3671      5041636B 
 3671      53746174 
 3672              	.LASF90:
 3673 0299 55534255 		.ascii	"USBUART_deviceAddress\000"
 3673      4152545F 
 3673      64657669 
 3673      63654164 
 3673      64726573 
 3674              	.LASF25:
 3675 02af 62756666 		.ascii	"buffOffset\000"
 3675      4F666673 
 3675      657400
 3676              	.LASF94:
 3677 02ba 43794465 		.ascii	"CyDelayUs\000"
 3677      6C617955 
 3677      7300
 3678              	.LASF1:
 3679 02c4 756E7369 		.ascii	"unsigned char\000"
 3679      676E6564 
 3679      20636861 
 3679      7200
 3680              	.LASF35:
 3681 02d2 65705372 		.ascii	"epSr\000"
 3681      00
 3682              	.LASF47:
 3683 02d7 55534255 		.ascii	"USBUART_Init\000"
 3683      4152545F 
 3683      496E6974 
 3683      00
 3684              	.LASF0:
 3685 02e4 7369676E 		.ascii	"signed char\000"
 3685      65642063 
 3685      68617200 
 3686              	.LASF53:
 3687 02f0 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3687      4152545F 
 3687      5265496E 
 3687      6974436F 
 3687      6D706F6E 
 3688              	.LASF7:
 3689 0308 6C6F6E67 		.ascii	"long long unsigned int\000"
 3689      206C6F6E 
 3689      6720756E 
 3689      7369676E 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 113


 3689      65642069 
 3690              	.LASF70:
 3691 031f 55534255 		.ascii	"USBUART_Force\000"
 3691      4152545F 
 3691      466F7263 
 3691      6500
 3692              	.LASF42:
 3693 032d 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3693      4152545F 
 3693      6172625F 
 3693      65705F73 
 3693      74727563 
 3694              	.LASF8:
 3695 0343 756E7369 		.ascii	"unsigned int\000"
 3695      676E6564 
 3695      20696E74 
 3695      00
 3696              	.LASF41:
 3697 0350 72774472 		.ascii	"rwDr\000"
 3697      00
 3698              	.LASF37:
 3699 0355 72775761 		.ascii	"rwWa\000"
 3699      00
 3700              	.LASF98:
 3701 035a 43794465 		.ascii	"CyDelayCycles\000"
 3701      6C617943 
 3701      79636C65 
 3701      7300
 3702              	.LASF92:
 3703 0368 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3703      4152545F 
 3703      6C617374 
 3703      5061636B 
 3703      65745369 
 3704              	.LASF16:
 3705 037f 72656733 		.ascii	"reg32\000"
 3705      3200
 3706              	.LASF102:
 3707 0385 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\time_src\\b"
 3707      73657273 
 3707      5C652E69 
 3707      76616E6F 
 3707      765C446F 
 3708 03b2 72616E63 		.ascii	"ranch\\Manchester encoder-decoder.cydsn\000"
 3708      685C4D61 
 3708      6E636865 
 3708      73746572 
 3708      20656E63 
 3709              	.LASF3:
 3710 03d9 73686F72 		.ascii	"short unsigned int\000"
 3710      7420756E 
 3710      7369676E 
 3710      65642069 
 3710      6E7400
 3711              	.LASF40:
 3712 03ec 72775261 		.ascii	"rwRaMsb\000"
 3712      4D736200 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 114


 3713              	.LASF19:
 3714 03f4 61747472 		.ascii	"attrib\000"
 3714      696200
 3715              	.LASF64:
 3716 03fb 55534255 		.ascii	"USBUART_LoadInEP\000"
 3716      4152545F 
 3716      4C6F6164 
 3716      496E4550 
 3716      00
 3717              	.LASF14:
 3718 040c 63686172 		.ascii	"char\000"
 3718      00
 3719              	.LASF4:
 3720 0411 6C6F6E67 		.ascii	"long int\000"
 3720      20696E74 
 3720      00
 3721              	.LASF60:
 3722 041a 55534255 		.ascii	"USBUART_GetEPState\000"
 3722      4152545F 
 3722      47657445 
 3722      50537461 
 3722      746500
 3723              	.LASF61:
 3724 042d 65704E75 		.ascii	"epNumber\000"
 3724      6D626572 
 3724      00
 3725              	.LASF81:
 3726 0436 55534255 		.ascii	"USBUART_initVar\000"
 3726      4152545F 
 3726      696E6974 
 3726      56617200 
 3727              	.LASF23:
 3728 0446 61646472 		.ascii	"addr\000"
 3728      00
 3729              	.LASF29:
 3730 044b 6570436E 		.ascii	"epCnt0\000"
 3730      743000
 3731              	.LASF9:
 3732 0452 75696E74 		.ascii	"uint8\000"
 3732      3800
 3733              	.LASF55:
 3734 0458 63723152 		.ascii	"cr1Reg\000"
 3734      656700
 3735              	.LASF30:
 3736 045f 6570436E 		.ascii	"epCnt1\000"
 3736      743100
 3737              	.LASF21:
 3738 0466 68774570 		.ascii	"hwEpState\000"
 3738      53746174 
 3738      6500
 3739              	.LASF87:
 3740 0470 55534255 		.ascii	"USBUART_hidProtocol\000"
 3740      4152545F 
 3740      68696450 
 3740      726F746F 
 3740      636F6C00 
 3741              	.LASF11:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 115


 3742 0484 75696E74 		.ascii	"uint32\000"
 3742      333200
 3743              	.LASF15:
 3744 048b 72656738 		.ascii	"reg8\000"
 3744      00
 3745              	.LASF5:
 3746 0490 6C6F6E67 		.ascii	"long unsigned int\000"
 3746      20756E73 
 3746      69676E65 
 3746      6420696E 
 3746      7400
 3747              	.LASF13:
 3748 04a2 646F7562 		.ascii	"double\000"
 3748      6C6500
 3749              	.LASF78:
 3750 04a9 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3750      4152545F 
 3750      47657444 
 3750      65766963 
 3750      65416464 
 3751              	.LASF58:
 3752 04c2 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3752      4152545F 
 3752      47657449 
 3752      6E746572 
 3752      66616365 
 3753              	.LASF20:
 3754 04de 61706945 		.ascii	"apiEpState\000"
 3754      70537461 
 3754      746500
 3755              	.LASF99:
 3756 04e9 55534255 		.ascii	"USBUART_Dp_ClearInterrupt\000"
 3756      4152545F 
 3756      44705F43 
 3756      6C656172 
 3756      496E7465 
 3757              	.LASF26:
 3758 0503 62756666 		.ascii	"bufferSize\000"
 3758      65725369 
 3758      7A6500
 3759              	.LASF48:
 3760 050e 55534255 		.ascii	"USBUART_InitComponent\000"
 3760      4152545F 
 3760      496E6974 
 3760      436F6D70 
 3760      6F6E656E 
 3761              	.LASF28:
 3762 0524 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3762      42554152 
 3762      545F4550 
 3762      5F43544C 
 3762      5F424C4F 
 3763              	.LASF97:
 3764 053b 4379496E 		.ascii	"CyIntSetVector\000"
 3764      74536574 
 3764      56656374 
 3764      6F7200
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 116


 3765              	.LASF56:
 3766 054a 55534255 		.ascii	"USBUART_CheckActivity\000"
 3766      4152545F 
 3766      43686563 
 3766      6B416374 
 3766      69766974 
 3767              	.LASF62:
 3768 0560 55534255 		.ascii	"USBUART_GetEPCount\000"
 3768      4152545F 
 3768      47657445 
 3768      50436F75 
 3768      6E7400
 3769              	.LASF93:
 3770 0573 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3770      74657243 
 3770      72697469 
 3770      63616C53 
 3770      65637469 
 3771              	.LASF88:
 3772 058a 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3772      4152545F 
 3772      696E7465 
 3772      72666163 
 3772      654E756D 
 3773              	.LASF38:
 3774 05a2 72775761 		.ascii	"rwWaMsb\000"
 3774      4D736200 
 3775              	.LASF100:
 3776 05aa 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3776      43313120 
 3776      352E342E 
 3776      31203230 
 3776      31363036 
 3777 05dd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3777      20726576 
 3777      6973696F 
 3777      6E203233 
 3777      37373135 
 3778 0610 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3778      66756E63 
 3778      74696F6E 
 3778      2D736563 
 3778      74696F6E 
 3779              	.LASF36:
 3780 0638 72657365 		.ascii	"reserved\000"
 3780      72766564 
 3780      00
 3781              	.LASF27:
 3782 0641 696E7465 		.ascii	"interface\000"
 3782      72666163 
 3782      6500
 3783              	.LASF71:
 3784 064b 62537461 		.ascii	"bState\000"
 3784      746500
 3785              	.LASF51:
 3786 0652 656E6162 		.ascii	"enableInterrupts\000"
 3786      6C65496E 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccUr8jOh.s 			page 117


 3786      74657272 
 3786      75707473 
 3786      00
 3787              	.LASF69:
 3788 0663 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3788      4152545F 
 3788      44697361 
 3788      626C654F 
 3788      75744550 
 3789              	.LASF91:
 3790 0678 55534255 		.ascii	"USBUART_EP\000"
 3790      4152545F 
 3790      455000
 3791              	.LASF54:
 3792 0683 55534255 		.ascii	"USBUART_Stop\000"
 3792      4152545F 
 3792      53746F70 
 3792      00
 3793              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
